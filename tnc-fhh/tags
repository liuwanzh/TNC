!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABSTRACTTNCC_H_	tncsim/src/client/AbstractTNCC.h	29;"	d
ABSTRACTTNCS_H_	tncsim/src/server/AbstractTNCS.h	29;"	d
ACKNOWLEDGEMENTEXCEPTION_H_	naaeap/src/naaeap/exception/AcknowledgementException.h	29;"	d
ALLOW_DENY_PACKET_H	vpn/libtncvpn/src/tncvpn/libtnac/AllowDenyPacket.h	30;"	d
ARCHITECTURE_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	181;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	184;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	187;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	190;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	194;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	172;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	178;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	181;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	185;"	d	file:
ASSESSMENT_SCHEDULER_H	vpn/vpnpep/src/vpnpep/AssessmentScheduler.h	29;"	d
ATTESTATIONIMCLIBRARY_H_	imcv/attestation/imc/src/AttestationIMCLibrary.h	42;"	d
ATTESTATIONIMC_AIK_KEY	imcv/attestation/imc/src/AttestationIMC.h	48;"	d
ATTESTATIONIMC_H_	imcv/attestation/imc/src/AttestationIMC.h	43;"	d
ATTESTATIONIMC_X509_CERT	imcv/attestation/imc/src/AttestationIMC.h	47;"	d
ATTESTATIONIMVLIBRARY_H_	imcv/attestation/imv/src/AttestationIMVLibrary.h	42;"	d
ATTESTATIONIMVPOLICYMANAGER_H_	imcv/attestation/imv/src/AttestationIMVPolicyManager.h	46;"	d
ATTESTATIONIMV_H_	imcv/attestation/imv/src/AttestationIMV.h	43;"	d
ATTESTATION_MIN_RECV_LENGTH	imcv/attestation/imc/src/AttestationIMC.cpp	262;"	d	file:
AbstractIMC	imunit/src/imunit/imc/AbstractIMC.cpp	/^AbstractIMC::AbstractIMC(TNC_ConnectionID conID, IMCLibrary *pImcLibrary)$/;"	f	class:tncfhh::iml::AbstractIMC
AbstractIMC	imunit/src/imunit/imc/AbstractIMC.h	/^class AbstractIMC : public AbstractIMUnit$/;"	c	namespace:tncfhh::iml
AbstractIMUnit	imunit/src/imunit/AbstractIMUnit.cpp	/^AbstractIMUnit::AbstractIMUnit(TNC_ConnectionID conID)$/;"	f	class:tncfhh::iml::AbstractIMUnit
AbstractIMUnit	imunit/src/imunit/AbstractIMUnit.h	/^class AbstractIMUnit {$/;"	c	namespace:tncfhh::iml
AbstractIMV	doc/tncfhh.tex	/^\\paragraph{AbstractIMV}$/;"	P
AbstractIMV	imunit/src/imunit/imv/AbstractIMV.cpp	/^AbstractIMV::AbstractIMV(TNC_ConnectionID conID, IMVLibrary *pImvLibrary)$/;"	f	class:tncfhh::iml::AbstractIMV
AbstractIMV	imunit/src/imunit/imv/AbstractIMV.h	/^class AbstractIMV : public AbstractIMUnit$/;"	c	namespace:tncfhh::iml
AbstractTNCC	tncsim/src/client/AbstractTNCC.cpp	/^AbstractTNCC::AbstractTNCC(std::string &tncConfig)$/;"	f	class:tncsim::client::AbstractTNCC
AbstractTNCC	tncsim/src/client/AbstractTNCC.h	/^class AbstractTNCC {$/;"	c	namespace:tncsim::client
AbstractTNCCSProtocol	tncs/src/tncs/iel/AbstractTNCCSProtocol.cpp	/^AbstractTNCCSProtocol::AbstractTNCCSProtocol(const std::map<TNC_IMVID, IMV*> &imvsMap)$/;"	f	class:tncfhh::iel::AbstractTNCCSProtocol
AbstractTNCCSProtocol	tncs/src/tncs/iel/AbstractTNCCSProtocol.h	/^class AbstractTNCCSProtocol {$/;"	c	namespace:tncfhh::iel
AbstractTNCS	tncsim/src/server/AbstractTNCS.cpp	/^AbstractTNCS::AbstractTNCS(std::string &tncConfig)$/;"	f	class:tncsim::server::AbstractTNCS
AbstractTNCS	tncsim/src/server/AbstractTNCS.h	/^class AbstractTNCS {$/;"	c	namespace:tncsim::server
Acknowledgement	doc/tncfhh.tex	/^\\section{Acknowledgement}$/;"	s
AcknowledgementException	naaeap/src/naaeap/exception/AcknowledgementException.cpp	/^AcknowledgementException::AcknowledgementException() throw ()$/;"	f	class:tncfhh::nal::AcknowledgementException
AcknowledgementException	naaeap/src/naaeap/exception/AcknowledgementException.h	/^class AcknowledgementException : public std::exception {$/;"	c	namespace:tncfhh::nal
Added attributes	doc/freeradius-eapttls-patch/rlm_eap_ttls.tex	/^\\subparagraph{Added attributes}$/;"	G
Added configuration-items	doc/freeradius-eapttls-patch/rlm_eap_ttls.tex	/^\\subparagraph{Added configuration-items}$/;"	G
AllowDenyPacket	vpn/libtncvpn/src/tncvpn/libtnac/AllowDenyPacket.cpp	/^AllowDenyPacket::AllowDenyPacket(boost::asio::ip::address *address, char recommendation)$/;"	f	class:pep::AllowDenyPacket
AllowDenyPacket	vpn/libtncvpn/src/tncvpn/libtnac/AllowDenyPacket.cpp	/^AllowDenyPacket::AllowDenyPacket(const char* packet)$/;"	f	class:pep::AllowDenyPacket
AllowDenyPacket	vpn/libtncvpn/src/tncvpn/libtnac/AllowDenyPacket.h	/^class AllowDenyPacket {$/;"	c	namespace:pep
Architecture	doc/tncfhh.tex	/^\\subsection{Architecture}$/;"	u
Architecture	doc/tncfhh.tex	/^\\subsubsection{Architecture}$/;"	b
AssessmentScheduler	vpn/vpnpep/src/vpnpep/AssessmentScheduler.h	/^	AssessmentScheduler(EndpointDB *db)$/;"	f	class:tnc::AssessmentScheduler
AssessmentScheduler	vpn/vpnpep/src/vpnpep/AssessmentScheduler.h	/^class AssessmentScheduler {$/;"	c	namespace:tnc
AttestationIMC	imcv/attestation/imc/src/AttestationIMC.cpp	/^AttestationIMC::AttestationIMC(TNC_ConnectionID conID, AttestationIMCLibrary *imclib)$/;"	f	class:AttestationIMC
AttestationIMC	imcv/attestation/imc/src/AttestationIMC.h	/^class AttestationIMC : public AbstractIMC$/;"	c
AttestationIMCLibrary	imcv/attestation/imc/src/AttestationIMCLibrary.cpp	/^AttestationIMCLibrary::AttestationIMCLibrary()$/;"	f	class:AttestationIMCLibrary
AttestationIMCLibrary	imcv/attestation/imc/src/AttestationIMCLibrary.cpp	/^TNCFHH_IMCLIBRARY_INITIALIZE(AttestationIMCLibrary);$/;"	v
AttestationIMCLibrary	imcv/attestation/imc/src/AttestationIMCLibrary.h	/^class AttestationIMCLibrary : public tncfhh::iml::IMCLibrary$/;"	c
AttestationIMV	imcv/attestation/imv/src/AttestationIMV.cpp	/^AttestationIMV::AttestationIMV(TNC_ConnectionID conID,$/;"	f	class:AttestationIMV
AttestationIMV	imcv/attestation/imv/src/AttestationIMV.h	/^class AttestationIMV : public tncfhh::iml::AbstractIMV$/;"	c
AttestationIMVLibrary	imcv/attestation/imv/src/AttestationIMVLibrary.cpp	/^AttestationIMVLibrary::AttestationIMVLibrary()$/;"	f	class:AttestationIMVLibrary
AttestationIMVLibrary	imcv/attestation/imv/src/AttestationIMVLibrary.h	/^class AttestationIMVLibrary : public tncfhh::iml::IMVLibrary$/;"	c
AttestationIMVPolicyManager	imcv/attestation/imv/src/AttestationIMVPolicyManager.cpp	/^AttestationIMVPolicyManager::AttestationIMVPolicyManager(const char *policyFile)$/;"	f	class:tncfhh::iml::AttestationIMVPolicyManager
AttestationIMVPolicyManager	imcv/attestation/imv/src/AttestationIMVPolicyManager.h	/^class AttestationIMVPolicyManager$/;"	c	namespace:tncfhh::iml
BLOCKSIZE	hash/ps.cpp	33;"	d	file:
BLOCKSIZE	imcv/example/imc/src/ExampleIMC.h	35;"	d
BLOCKSIZE	imcv/procwatcher/imc/src/ProcwatcherIMC.h	40;"	d
CERT_MANAGER_H_	imcv/platid/imv/src/CertManager.h	44;"	d
CHECK	tncsim/src/client/libtnc/LibtncTNCC.cpp	43;"	d	file:
CHECK	tncsim/src/server/libtnc/LibtncTNCS.cpp	43;"	d	file:
CHECK_TSS_RETURN	imcv/attestation/imc/src/AttestationIMC.cpp	302;"	d	file:
CHECK_TSS_RETURN	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	55;"	d	file:
CLAMAVIMCLIBRARY_H_	imcv/clamav/imc/src/ClamavIMCLibrary.h	29;"	d
CLAMAVIMC_CONF_CLAMCONF_PATH	imcv/clamav/imc/src/ClamavIMCLibrary.h	43;"	d
CLAMAVIMC_CONF_CLAMD_SOCKET	imcv/clamav/imc/src/ClamavIMCLibrary.h	44;"	d
CLAMAVIMC_H_	imcv/clamav/imc/src/ClamavIMC.h	29;"	d
CLAMAVIMVLIBRARY_H_	imcv/clamav/imv/src/ClamavIMVLibrary.h	29;"	d
CLAMAVIMV_CONF_DAILY_VERSION	imcv/clamav/imv/src/ClamavIMVLibrary.h	46;"	d
CLAMAVIMV_CONF_MAIN_VERSION	imcv/clamav/imv/src/ClamavIMVLibrary.h	45;"	d
CLAMAVIMV_CONF_OPERATIONAL_STATUS	imcv/clamav/imv/src/ClamavIMVLibrary.h	43;"	d
CLAMAVIMV_CONF_VERSION	imcv/clamav/imv/src/ClamavIMVLibrary.h	44;"	d
CLAMAVIMV_H_	imcv/clamav/imv/src/ClamavIMV.h	29;"	d
CLASSNAME	tncs/src/tncs/iel/tnc1/TNCCTNCSMessage.cpp	30;"	d	file:
CMAKE_BINARY_DIR	build/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/imcv/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/imcv/attestation/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/imcv/attestation/imc/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/imcv/attestation/imv/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/imcv/clamav/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/imcv/clamav/imc/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/imcv/clamav/imv/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/imcv/dummy/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/imcv/dummy/imc/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/imcv/dummy/imv/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/imcv/example/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/imcv/example/imc/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/imcv/example/imv/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/imcv/hostscanner/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/imcv/hostscanner/imc/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/imcv/hostscanner/imv/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/imcv/platid/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/imcv/platid/imc/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/imcv/platid/imv/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/imcv/procwatcher/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/imcv/procwatcher/imc/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/imcv/procwatcher/imv/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/imunit/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/naaeap/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/tncs/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/tncsim/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/tncutil/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_BINARY_DIR	build/tncxacml/Makefile	/^CMAKE_BINARY_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh\/build$/;"	m
CMAKE_COMMAND	build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/imcv/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/imcv/attestation/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/imcv/attestation/imc/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/imcv/attestation/imv/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/imcv/clamav/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/imcv/clamav/imc/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/imcv/clamav/imv/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/imcv/dummy/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/imcv/dummy/imc/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/imcv/dummy/imv/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/imcv/example/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/imcv/example/imc/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/imcv/example/imv/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/imcv/hostscanner/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/imcv/hostscanner/imc/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/imcv/hostscanner/imv/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/imcv/platid/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/imcv/platid/imc/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/imcv/platid/imv/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/imcv/procwatcher/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/imcv/procwatcher/imc/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/imcv/procwatcher/imv/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/imunit/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/naaeap/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/tncs/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/tncsim/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/tncutil/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/tncxacml/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/imcv/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/imcv/attestation/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/imcv/attestation/imc/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/imcv/attestation/imv/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/imcv/clamav/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/imcv/clamav/imc/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/imcv/clamav/imv/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/imcv/dummy/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/imcv/dummy/imc/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/imcv/dummy/imv/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/imcv/example/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/imcv/example/imc/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/imcv/example/imv/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/imcv/hostscanner/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/imcv/hostscanner/imc/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/imcv/hostscanner/imv/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/imcv/platid/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/imcv/platid/imc/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/imcv/platid/imv/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/imcv/procwatcher/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/imcv/procwatcher/imc/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/imcv/procwatcher/imv/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/imunit/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/naaeap/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/tncs/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/tncsim/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/tncutil/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
CMAKE_SOURCE_DIR	build/tncxacml/Makefile	/^CMAKE_SOURCE_DIR = \/home\/liuwanzh\/tnc\/TNC\/tnc-fhh$/;"	m
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	10;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	13;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	16;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	22;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	28;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	32;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	34;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	36;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	40;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	43;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	49;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	54;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	68;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	74;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	77;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	12;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	18;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	30;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	34;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	36;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	42;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	45;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	48;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	68;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	9;"	d	file:
CONFIGURATIONSERVICE_H	tncutil/src/tncutil/ConfigurationService.h	29;"	d
CONFIGURATION_H_	tncutil/src/tncutil/Configuration.h	36;"	d
CertManager	imcv/platid/imv/src/CertManager.h	/^class CertManager$/;"	c
ClamavIMC	imcv/clamav/imc/src/ClamavIMC.cpp	/^ClamavIMC::ClamavIMC(TNC_ConnectionID conID, ClamavIMCLibrary *pClamavIMCLibrary) :$/;"	f	class:ClamavIMC
ClamavIMC	imcv/clamav/imc/src/ClamavIMC.h	/^class ClamavIMC: public tncfhh::iml::AbstractIMC$/;"	c
ClamavIMCLibrary	imcv/clamav/imc/src/ClamavIMCLibrary.cpp	/^ClamavIMCLibrary::ClamavIMCLibrary()$/;"	f	class:ClamavIMCLibrary
ClamavIMCLibrary	imcv/clamav/imc/src/ClamavIMCLibrary.cpp	/^TNCFHH_IMCLIBRARY_INITIALIZE(ClamavIMCLibrary) ;$/;"	v
ClamavIMCLibrary	imcv/clamav/imc/src/ClamavIMCLibrary.h	/^class ClamavIMCLibrary : public tncfhh::iml::IMCLibrary{$/;"	c
ClamavIMV	imcv/clamav/imv/src/ClamavIMV.cpp	/^ClamavIMV::ClamavIMV(TNC_ConnectionID conID,$/;"	f	class:ClamavIMV
ClamavIMV	imcv/clamav/imv/src/ClamavIMV.h	/^class ClamavIMV: public tncfhh::iml::AbstractIMV {$/;"	c
ClamavIMVLibrary	imcv/clamav/imv/src/ClamavIMVLibrary.cpp	/^ClamavIMVLibrary::ClamavIMVLibrary()$/;"	f	class:ClamavIMVLibrary
ClamavIMVLibrary	imcv/clamav/imv/src/ClamavIMVLibrary.cpp	/^TNCFHH_IMVLIBRARY_INITIALIZE(ClamavIMVLibrary) ;$/;"	v
ClamavIMVLibrary	imcv/clamav/imv/src/ClamavIMVLibrary.h	/^class ClamavIMVLibrary : public tncfhh::iml::IMVLibrary{$/;"	c
Client	vpn/libtncvpn/src/tncvpn/ssl/Client.h	/^	Client(boost::asio::io_service& io_service, boost::asio::ssl::context& context,$/;"	f	class:tnc::ssl::Client
Client	vpn/libtncvpn/src/tncvpn/ssl/Client.h	/^class Client {$/;"	c	namespace:tnc::ssl
Coding the exampleimv	doc/tncfhh.tex	/^\\subsubsection{Coding the exampleimv}$/;"	b
Commercial Licensing	doc/tncfhh.tex	/^\\paragraph{Commercial Licensing} This is the appropriate option if you are$/;"	P
Configuration	doc/freeradius-eapttls-patch/configuration.tex	/^\\subsection{Configuration}$/;"	u
Configuration	tncutil/src/tncutil/Configuration.h	/^	Configuration() {$/;"	f	class:tncfhh::Configuration
Configuration	tncutil/src/tncutil/Configuration.h	/^	Configuration(Configuration& config) { }$/;"	f	class:tncfhh::Configuration
Configuration	tncutil/src/tncutil/Configuration.h	/^class Configuration {$/;"	c	namespace:tncfhh
ConfigurationService	tncutil/src/tncutil/ConfigurationService.h	/^	ConfigurationService() {$/;"	f	class:tncfhh::ConfigurationService
ConfigurationService	tncutil/src/tncutil/ConfigurationService.h	/^	ConfigurationService(ConfigurationService& service) { }$/;"	f	class:tncfhh::ConfigurationService
ConfigurationService	tncutil/src/tncutil/ConfigurationService.h	/^class ConfigurationService {$/;"	c	namespace:tncfhh
Connection	tncs/src/tncs/iel/Connection.cpp	/^Connection::Connection(TNC_ConnectionID conID, const std::list<IMVProperties*> &imvProperties)$/;"	f	class:tncfhh::iel::Connection
Connection	tncs/src/tncs/iel/Connection.h	/^class Connection$/;"	c	namespace:tncfhh::iel
ConnectionStateException	tncs/src/tncs/exception/ConnectionStateException.cpp	/^ConnectionStateException::ConnectionStateException(TNC_ConnectionState connectionState) throw ()$/;"	f	class:tncfhh::iel::ConnectionStateException
ConnectionStateException	tncs/src/tncs/exception/ConnectionStateException.h	/^class ConnectionStateException : public std::exception$/;"	c	namespace:tncfhh::iel
ConnectionStateExceptionWithTNCCSData	tncs/src/tncs/exception/ConnectionStateExceptionWithTNCCSData.cpp	/^ConnectionStateExceptionWithTNCCSData::ConnectionStateExceptionWithTNCCSData(TNC_ConnectionState connectionState, TNCCSData lastTnccsData) throw ()$/;"	f	class:tncfhh::iel::ConnectionStateExceptionWithTNCCSData
ConnectionStateExceptionWithTNCCSData	tncs/src/tncs/exception/ConnectionStateExceptionWithTNCCSData.h	/^class ConnectionStateExceptionWithTNCCSData : public ConnectionStateException$/;"	c	namespace:tncfhh::iel
Coordinator	tncs/src/tncs/iel/Coordinator.cpp	/^Coordinator::Coordinator()$/;"	f	class:tncfhh::iel::Coordinator
Coordinator	tncs/src/tncs/iel/Coordinator.h	/^class Coordinator$/;"	c	namespace:tncfhh::iel
Copyright and License	doc/tncfhh.tex	/^\\section{Copyright and License}$/;"	s
DEFRAGMENTATION_H_	naaeap/src/naaeap/logic/Defragmentation.h	29;"	d
DUMMYIMCLIBRARY_H_	imcv/dummy/imc/src/DummyIMCLibrary.h	29;"	d
DUMMYIMC_H_	imcv/dummy/imc/src/DummyIMC.h	29;"	d
DUMMYIMVLIBRARY_H_	imcv/dummy/imv/src/DummyIMVLibrary.h	29;"	d
DUMMYIMV_H_	imcv/dummy/imv/src/DummyIMV.h	29;"	d
Daily_Version	imcv/clamav/imv/src/ClamavIMV.h	/^		Daily_Version$/;"	e	enum:ClamavIMV::Key
Defragmentation	naaeap/src/naaeap/logic/Defragmentation.cpp	/^Defragmentation::Defragmentation()$/;"	f	class:tncfhh::nal::Defragmentation
Defragmentation	naaeap/src/naaeap/logic/Defragmentation.h	/^class Defragmentation$/;"	c	namespace:tncfhh::nal
Detailed flow of operations	doc/freeradius-eapttls-patch/detailed_flow_of_operations.tex	/^\\subsection{Detailed flow of operations}$/;"	u
Documentation in the Trust  FHH-wiki	doc/freeradius-eapttls-patch/overview.tex	/^\\subsubsection*{Documentation in the Trust@FHH-wiki}$/;"	b
DummyIMC	imcv/dummy/imc/src/DummyIMC.cpp	/^DummyIMC::DummyIMC(TNC_ConnectionID conID, DummyIMCLibrary *pDummyIMCLibrary)$/;"	f	class:DummyIMC
DummyIMC	imcv/dummy/imc/src/DummyIMC.h	/^class DummyIMC: public tncfhh::iml::AbstractIMC$/;"	c
DummyIMCLibrary	imcv/dummy/imc/src/DummyIMCLibrary.cpp	/^DummyIMCLibrary::DummyIMCLibrary()$/;"	f	class:DummyIMCLibrary
DummyIMCLibrary	imcv/dummy/imc/src/DummyIMCLibrary.cpp	/^TNCFHH_IMCLIBRARY_INITIALIZE(DummyIMCLibrary) ;$/;"	v
DummyIMCLibrary	imcv/dummy/imc/src/DummyIMCLibrary.h	/^class DummyIMCLibrary : public tncfhh::iml::IMCLibrary{$/;"	c
DummyIMV	imcv/dummy/imv/src/DummyIMV.cpp	/^DummyIMV::DummyIMV(TNC_ConnectionID conID, DummyIMVLibrary *pDummyImvLibrary) :$/;"	f	class:DummyIMV
DummyIMV	imcv/dummy/imv/src/DummyIMV.h	/^class DummyIMV: public tncfhh::iml::AbstractIMV {$/;"	c
DummyIMVLibrary	imcv/dummy/imv/src/DummyIMVLibrary.cpp	/^DummyIMVLibrary::DummyIMVLibrary()$/;"	f	class:DummyIMVLibrary
DummyIMVLibrary	imcv/dummy/imv/src/DummyIMVLibrary.cpp	/^TNCFHH_IMVLIBRARY_INITIALIZE(DummyIMVLibrary) ;$/;"	v
DummyIMVLibrary	imcv/dummy/imv/src/DummyIMVLibrary.h	/^class DummyIMVLibrary : public tncfhh::iml::IMVLibrary{$/;"	c
EAPTNCBUFFER_H_	naaeap/src/naaeap/data/EapTncBuffer.h	29;"	d
EAPTNCFRAGMENT_H_	naaeap/src/naaeap/data/EapTncFragment.h	29;"	d
EAP_TNC_HEADER_DATA_LENGTH_SIZE	shared/include/tcg/tnc/fhhaddon.h	48;"	d
EAP_TNC_HEADER_FLAGS_SIZE	shared/include/tcg/tnc/fhhaddon.h	47;"	d
ENDPOINT_DB_H	vpn/vpnpep/src/vpnpep/EndpointDB.h	29;"	d
ENDPOINT_H	vpn/libtncvpn/src/tncvpn/iel/Endpoint.h	29;"	d
ENFORCEMENT_MANAGER_H	vpn/vpnpep/src/vpnpep/EnforcementManager.h	29;"	d
EP_HashMap	vpn/vpnpep/src/vpnpep/EndpointDB.h	/^typedef std::tr1::unordered_map<unsigned long, Endpoint*> EP_HashMap;$/;"	t	namespace:tnc
EXAMPLEIMCLIBRARY_H_	imcv/example/imc/src.bk/ExampleIMCLibrary.h	29;"	d
EXAMPLEIMCLIBRARY_H_	imcv/example/imc/src/ExampleIMCLibrary.h	29;"	d
EXAMPLEIMCLIBRARY_H_	imcv/procwatcher/imc/src.bk/ExampleIMCLibrary.h	29;"	d
EXAMPLEIMC_H_	imcv/example/imc/src.bk/ExampleIMC.h	29;"	d
EXAMPLEIMC_H_	imcv/example/imc/src/ExampleIMC.h	29;"	d
EXAMPLEIMC_H_	imcv/example/imv/src.bk/ExampleIMV.h	29;"	d
EXAMPLEIMC_H_	imcv/example/imv/src/ExampleIMV.h	29;"	d
EXAMPLEIMC_H_	imcv/procwatcher/imc/src.bk/ExampleIMC.h	29;"	d
EXAMPLEIMC_H_	imcv/procwatcher/imv/src.bk/ExampleIMV.h	29;"	d
EXAMPLEIMVLIBRARY_H_	imcv/example/imv/src.bk/ExampleIMVLibrary.h	29;"	d
EXAMPLEIMVLIBRARY_H_	imcv/example/imv/src/ExampleIMVLibrary.h	29;"	d
EXAMPLEIMVLIBRARY_H_	imcv/procwatcher/imv/src.bk/ExampleIMVLibrary.h	29;"	d
EapTncBuffer	naaeap/src/naaeap/data/EapTncBuffer.cpp	/^EapTncBuffer::EapTncBuffer()$/;"	f	class:tncfhh::nal::EapTncBuffer
EapTncBuffer	naaeap/src/naaeap/data/EapTncBuffer.cpp	/^EapTncBuffer::EapTncBuffer(const EapTncBuffer &eapTncBuffer)$/;"	f	class:tncfhh::nal::EapTncBuffer
EapTncBuffer	naaeap/src/naaeap/data/EapTncBuffer.cpp	/^EapTncBuffer::EapTncBuffer(const EapTncFragment &tnccsFragment)$/;"	f	class:tncfhh::nal::EapTncBuffer
EapTncBuffer	naaeap/src/naaeap/data/EapTncBuffer.h	/^class EapTncBuffer$/;"	c	namespace:tncfhh::nal
EapTncFragment	naaeap/src/naaeap/data/EapTncFragment.cpp	/^EapTncFragment::EapTncFragment(TNC_BufferConstReference data, TNC_UInt32 dataLength, bool lengthIncluded, TNC_UInt32 TNCCSDataLength, bool moreFragments) throw (std::invalid_argument)$/;"	f	class:tncfhh::nal::EapTncFragment
EapTncFragment	naaeap/src/naaeap/data/EapTncFragment.cpp	/^EapTncFragment::EapTncFragment(const EapTncFragment & source)$/;"	f	class:tncfhh::nal::EapTncFragment
EapTncFragment	naaeap/src/naaeap/data/EapTncFragment.cpp	/^EapTncFragment::EapTncFragment(const TNC_BufferReference fragment, TNC_UInt32 fLength) throw (std::invalid_argument)$/;"	f	class:tncfhh::nal::EapTncFragment
EapTncFragment	naaeap/src/naaeap/data/EapTncFragment.h	/^class EapTncFragment$/;"	c	namespace:tncfhh::nal
Endpoint	vpn/libtncvpn/src/tncvpn/iel/Endpoint.cpp	/^Endpoint::Endpoint(boost::asio::ip::address address)$/;"	f	class:tnc::Endpoint
Endpoint	vpn/libtncvpn/src/tncvpn/iel/Endpoint.cpp	/^Endpoint::Endpoint(const char* ip) {$/;"	f	class:tnc::Endpoint
Endpoint	vpn/libtncvpn/src/tncvpn/iel/Endpoint.h	/^class Endpoint {$/;"	c	namespace:tnc
EndpointDB	vpn/vpnpep/src/vpnpep/EndpointDB.cpp	/^EndpointDB::EndpointDB() {$/;"	f	class:tnc::EndpointDB
EndpointDB	vpn/vpnpep/src/vpnpep/EndpointDB.h	/^class EndpointDB {$/;"	c	namespace:tnc
Envelope	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.cpp	/^Envelope::Envelope()$/;"	f	class:ifttls::Envelope
Envelope	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.cpp	/^Envelope::Envelope(const char* msg, uint32_t len) {$/;"	f	class:ifttls::Envelope
Envelope	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.cpp	/^Envelope::Envelope(uint32_t type, const char* _message_value, uint32_t len) :$/;"	f	class:ifttls::Envelope
Envelope	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.h	/^class Envelope {$/;"	c	namespace:ifttls
Establishing the tunnel for EAP-TTLS	doc/freeradius-eapttls-patch/detailed_flow_of_operations.tex	/^\\subsubsection*{Establishing the tunnel for EAP-TTLS}$/;"	b
ExampleIMC	imcv/example/imc/src.bk/ExampleIMC.cpp	/^ExampleIMC::ExampleIMC(TNC_ConnectionID conID, ExampleIMCLibrary *pExampleIMCLibrary)$/;"	f	class:ExampleIMC
ExampleIMC	imcv/example/imc/src.bk/ExampleIMC.h	/^class ExampleIMC : public tncfhh::iml::AbstractIMC$/;"	c
ExampleIMC	imcv/example/imc/src/ExampleIMC.cpp	/^ExampleIMC::ExampleIMC(TNC_ConnectionID conID, ExampleIMCLibrary *pExampleIMCLibrary)$/;"	f	class:ExampleIMC
ExampleIMC	imcv/example/imc/src/ExampleIMC.h	/^class ExampleIMC : public tncfhh::iml::AbstractIMC$/;"	c
ExampleIMC	imcv/procwatcher/imc/src.bk/ExampleIMC.cpp	/^ExampleIMC::ExampleIMC(TNC_ConnectionID conID, ExampleIMCLibrary *pExampleIMCLibrary)$/;"	f	class:ExampleIMC
ExampleIMC	imcv/procwatcher/imc/src.bk/ExampleIMC.h	/^class ExampleIMC : public tncfhh::iml::AbstractIMC$/;"	c
ExampleIMCLibrary	imcv/example/imc/src.bk/ExampleIMCLibrary.cpp	/^ExampleIMCLibrary::ExampleIMCLibrary()$/;"	f	class:ExampleIMCLibrary
ExampleIMCLibrary	imcv/example/imc/src.bk/ExampleIMCLibrary.cpp	/^TNCFHH_IMCLIBRARY_INITIALIZE(ExampleIMCLibrary) ;$/;"	v
ExampleIMCLibrary	imcv/example/imc/src.bk/ExampleIMCLibrary.h	/^class ExampleIMCLibrary : public tncfhh::iml::IMCLibrary{$/;"	c
ExampleIMCLibrary	imcv/example/imc/src/ExampleIMCLibrary.cpp	/^ExampleIMCLibrary::ExampleIMCLibrary()$/;"	f	class:ExampleIMCLibrary
ExampleIMCLibrary	imcv/example/imc/src/ExampleIMCLibrary.cpp	/^TNCFHH_IMCLIBRARY_INITIALIZE(ExampleIMCLibrary) ;$/;"	v
ExampleIMCLibrary	imcv/example/imc/src/ExampleIMCLibrary.h	/^class ExampleIMCLibrary : public tncfhh::iml::IMCLibrary{$/;"	c
ExampleIMCLibrary	imcv/procwatcher/imc/src.bk/ExampleIMCLibrary.cpp	/^ExampleIMCLibrary::ExampleIMCLibrary()$/;"	f	class:ExampleIMCLibrary
ExampleIMCLibrary	imcv/procwatcher/imc/src.bk/ExampleIMCLibrary.cpp	/^TNCFHH_IMCLIBRARY_INITIALIZE(ExampleIMCLibrary) ;$/;"	v
ExampleIMCLibrary	imcv/procwatcher/imc/src.bk/ExampleIMCLibrary.h	/^class ExampleIMCLibrary : public tncfhh::iml::IMCLibrary{$/;"	c
ExampleIMV	imcv/example/imv/src.bk/ExampleIMV.cpp	/^ExampleIMV::ExampleIMV(TNC_ConnectionID conID, ExampleIMVLibrary *pExampleIMVLibrary)$/;"	f	class:ExampleIMV
ExampleIMV	imcv/example/imv/src.bk/ExampleIMV.h	/^class ExampleIMV : public tncfhh::iml::AbstractIMV$/;"	c
ExampleIMV	imcv/example/imv/src/ExampleIMV.cpp	/^ExampleIMV::ExampleIMV(TNC_ConnectionID conID, ExampleIMVLibrary *pExampleIMVLibrary)$/;"	f	class:ExampleIMV
ExampleIMV	imcv/example/imv/src/ExampleIMV.h	/^class ExampleIMV : public tncfhh::iml::AbstractIMV$/;"	c
ExampleIMV	imcv/procwatcher/imv/src.bk/ExampleIMV.cpp	/^ExampleIMV::ExampleIMV(TNC_ConnectionID conID, ExampleIMVLibrary *pExampleIMVLibrary)$/;"	f	class:ExampleIMV
ExampleIMV	imcv/procwatcher/imv/src.bk/ExampleIMV.h	/^class ExampleIMV : public tncfhh::iml::AbstractIMV$/;"	c
ExampleIMVLibrary	imcv/example/imv/src.bk/ExampleIMVLibrary.cpp	/^ExampleIMVLibrary::ExampleIMVLibrary()$/;"	f	class:ExampleIMVLibrary
ExampleIMVLibrary	imcv/example/imv/src.bk/ExampleIMVLibrary.cpp	/^TNCFHH_IMVLIBRARY_INITIALIZE(ExampleIMVLibrary) ;$/;"	v
ExampleIMVLibrary	imcv/example/imv/src.bk/ExampleIMVLibrary.h	/^class ExampleIMVLibrary : public tncfhh::iml::IMVLibrary{$/;"	c
ExampleIMVLibrary	imcv/example/imv/src/ExampleIMVLibrary.cpp	/^ExampleIMVLibrary::ExampleIMVLibrary()$/;"	f	class:ExampleIMVLibrary
ExampleIMVLibrary	imcv/example/imv/src/ExampleIMVLibrary.cpp	/^TNCFHH_IMVLIBRARY_INITIALIZE(ExampleIMVLibrary) ;$/;"	v
ExampleIMVLibrary	imcv/example/imv/src/ExampleIMVLibrary.h	/^class ExampleIMVLibrary : public tncfhh::iml::IMVLibrary{$/;"	c
ExampleIMVLibrary	imcv/procwatcher/imv/src.bk/ExampleIMVLibrary.cpp	/^ExampleIMVLibrary::ExampleIMVLibrary()$/;"	f	class:ExampleIMVLibrary
ExampleIMVLibrary	imcv/procwatcher/imv/src.bk/ExampleIMVLibrary.cpp	/^TNCFHH_IMVLIBRARY_INITIALIZE(ExampleIMVLibrary) ;$/;"	v
ExampleIMVLibrary	imcv/procwatcher/imv/src.bk/ExampleIMVLibrary.h	/^class ExampleIMVLibrary : public tncfhh::iml::IMVLibrary{$/;"	c
FHHADDON_H_	shared/include/tcg/tnc/fhhaddon.h	45;"	d
FILE_CERT_MANAGER_H_	imcv/platid/imv/src/FileCertManager.h	44;"	d
FINISHED_H_	tncsim/src/server/Finished.h	29;"	d
FRAGMENTATION_H_	naaeap/src/naaeap/logic/Fragmentation.h	29;"	d
File texttt  eap  _ttls.h	doc/freeradius-eapttls-patch/rlm_eap_ttls.tex	/^\\subsubsection{File \\texttt{eap\\_ttls.h}}$/;"	b
File texttt  rlm  _eap  _ttls.c	doc/freeradius-eapttls-patch/rlm_eap_ttls.tex	/^\\subsubsection{File \\texttt{rlm\\_eap\\_ttls.c}}$/;"	b
File texttt  ttls.c	doc/freeradius-eapttls-patch/rlm_eap_ttls.tex	/^\\subsubsection{File \\texttt{ttls.c}}$/;"	b
FileCertManager	imcv/platid/imv/src/FileCertManager.cpp	/^FileCertManager::FileCertManager(const char *certfile)$/;"	f	class:FileCertManager
FileCertManager	imcv/platid/imv/src/FileCertManager.h	/^class FileCertManager : public CertManager$/;"	c
FileEntry	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.cpp	/^FileEntry::FileEntry(char * a,char * b)$/;"	f	class:tncfhh::iml::FileEntry
FileEntry	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.h	/^class FileEntry {$/;"	c	namespace:tncfhh::iml
Finished	tncsim/src/server/Finished.cpp	/^Finished::Finished(TNC_IMV_Action_Recommendation rec, TNCCSData lastData) throw()$/;"	f	class:tncsim::server::Finished
Finished	tncsim/src/server/Finished.h	/^class Finished: public std::exception {$/;"	c	namespace:tncsim::server
Finishing EAP-TNC and sending the Access-Accept packet	doc/freeradius-eapttls-patch/detailed_flow_of_operations.tex	/^\\subsubsection*{Finishing EAP-TNC and sending the Access-Accept packet}$/;"	b
Fragmentation	naaeap/src/naaeap/logic/Fragmentation.cpp	/^Fragmentation::Fragmentation()$/;"	f	class:tncfhh::nal::Fragmentation
Fragmentation	naaeap/src/naaeap/logic/Fragmentation.h	/^class Fragmentation$/;"	c	namespace:tncfhh::nal
FreeRADIUS	doc/freeradius-eapttls-patch/configuration.tex	/^\\subsubsection*{FreeRADIUS}$/;"	b
General Information	doc/freeradius-eapttls-patch/overview.tex	/^\\subsection{General Information}$/;"	u
General Information	doc/tncfhh.tex	/^\\subsection{General Information}$/;"	u
General Information	doc/tncfhh.tex	/^\\subsubsection{General Information}$/;"	b
Goal of the patch	doc/freeradius-eapttls-patch/overview.tex	/^\\subsubsection*{Goal of the patch}$/;"	b
HOSTSCANNERIMCLIBRARY_H_	imcv/hostscanner/imc/src/HostScannerIMCLibrary.h	28;"	d
HOSTSCANNERIMC_H_	imcv/hostscanner/imc/src/HostScannerIMC.h	29;"	d
HOSTSCANNERIMVLIBRARY_H_	imcv/hostscanner/imv/src/HostScannerIMVLibrary.h	28;"	d
HostScannerIMC	imcv/hostscanner/imc/src/HostScannerIMC.cpp	/^HostScannerIMC::HostScannerIMC(TNC_ConnectionID cid, HostScannerIMCLibrary *pHostScannerIMCLibrary):$/;"	f	class:HostScannerIMC
HostScannerIMC	imcv/hostscanner/imc/src/HostScannerIMC.h	/^class HostScannerIMC : public tncfhh::iml::AbstractIMC$/;"	c
HostScannerIMCLibrary	imcv/hostscanner/imc/src/HostScannerIMCLibrary.cpp	/^HostScannerIMCLibrary::HostScannerIMCLibrary()$/;"	f	class:HostScannerIMCLibrary
HostScannerIMCLibrary	imcv/hostscanner/imc/src/HostScannerIMCLibrary.cpp	/^TNCFHH_IMCLIBRARY_INITIALIZE(HostScannerIMCLibrary) ;$/;"	v
HostScannerIMCLibrary	imcv/hostscanner/imc/src/HostScannerIMCLibrary.h	/^class HostScannerIMCLibrary : public tncfhh::iml::IMCLibrary{$/;"	c
HostScannerIMV	imcv/hostscanner/imv/src/HostScannerIMV.cpp	/^HostScannerIMV::HostScannerIMV(TNC_ConnectionID conID, HostScannerIMVLibrary *pHostScannerIMVLibrary)$/;"	f	class:HostScannerIMV
HostScannerIMV	imcv/hostscanner/imv/src/HostScannerIMV.h	/^class HostScannerIMV : public tncfhh::iml::AbstractIMV$/;"	c
HostScannerIMVLibrary	imcv/hostscanner/imv/src/HostScannerIMVLibrary.cpp	/^HostScannerIMVLibrary::HostScannerIMVLibrary()$/;"	f	class:HostScannerIMVLibrary
HostScannerIMVLibrary	imcv/hostscanner/imv/src/HostScannerIMVLibrary.cpp	/^TNCFHH_IMVLIBRARY_INITIALIZE(HostScannerIMVLibrary) ;$/;"	v
HostScannerIMVLibrary	imcv/hostscanner/imv/src/HostScannerIMVLibrary.h	/^class HostScannerIMVLibrary : public tncfhh::iml::IMVLibrary{$/;"	c
ID_VOID_MAIN	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
IFIMVImpl.cpp  deprecated 	doc/tncfhh.tex	/^\\paragraph{IFIMVImpl.cpp (deprecated)}$/;"	P
IFTTLSCONN_H_	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.h	36;"	d
IFTTLSConnection	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.cpp	/^IFTTLSConnection::IFTTLSConnection(ssl::stream<ip::tcp::socket>& sock) :$/;"	f	class:ifttls::IFTTLSConnection
IFTTLSConnection	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.h	/^class IFTTLSConnection {$/;"	c	namespace:ifttls
IFT_CLIENT_AUTH_CHALLENGE	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.h	/^	static const uint32_t IFT_CLIENT_AUTH_CHALLENGE = 5;$/;"	m	class:ifttls::Envelope
IFT_CLIENT_AUTH_REQUEST	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.h	/^	static const uint32_t  IFT_CLIENT_AUTH_REQUEST = 3;$/;"	m	class:ifttls::Envelope
IFT_CLIENT_AUTH_RESPONSE	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.h	/^	static const uint32_t IFT_CLIENT_AUTH_RESPONSE = 6;$/;"	m	class:ifttls::Envelope
IFT_CLIENT_AUTH_SELECTION	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.h	/^	static const uint32_t IFT_CLIENT_AUTH_SELECTION = 4;$/;"	m	class:ifttls::Envelope
IFT_CLIENT_AUTH_SUCCESS	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.h	/^	static const uint32_t IFT_CLIENT_AUTH_SUCCESS = 7;$/;"	m	class:ifttls::Envelope
IFT_ENVELOPE_H_	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.h	29;"	d
IFT_HEADER_LENGTH	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.h	/^	static const uint32_t IFT_HEADER_LENGTH = 0x10;$/;"	m	class:ifttls::Envelope
IFT_HEADER_LENGTH_OFFSET	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.h	/^	static const uint32_t IFT_HEADER_LENGTH_OFFSET = 0x08;$/;"	m	class:ifttls::Envelope
IFT_MESSAGES_H_	vpn/libtncvpn/src/tncvpn/ifttls/IFTMessages.h	29;"	d
IFT_TNCCS_20_BATCH	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.h	/^	static const uint32_t IFT_TNCCS_20_BATCH = 8;$/;"	m	class:ifttls::Envelope
IFT_TYPE_EXPERIMENT	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.h	/^	static const uint32_t IFT_TYPE_EXPERIMENT = 0;$/;"	m	class:ifttls::Envelope
IFT_VERSION_REQUEST	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.h	/^	static const uint32_t IFT_VERSION_REQUEST = 1;$/;"	m	class:ifttls::Envelope
IFT_VERSION_RESPONSE	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.h	/^	static const uint32_t  IFT_VERSION_RESPONSE = 2;$/;"	m	class:ifttls::Envelope
IMCIMVMessage	tncs/src/tncs/iel/tnc1/IMCIMVMessage.cpp	/^IMCIMVMessage::IMCIMVMessage(TNC_BufferReference data, TNC_UInt32 dataLength, TNC_MessageType type)$/;"	f	class:tncfhh::iel::tnc1::IMCIMVMessage
IMCIMVMessage	tncs/src/tncs/iel/tnc1/IMCIMVMessage.h	/^class IMCIMVMessage$/;"	c	namespace:tncfhh::iel::tnc1
IMCLIBRARY_OS_EXTENSION	imunit/src/imunit/imc/IMCLibrary.h	48;"	d
IMCLIBRARY_OS_EXTENSION	imunit/src/imunit/imc/IMCLibrary.h	53;"	d
IMCLIBRARY_OS_EXTENSION	imunit/src/imunit/imv/IMVLibrary.h	48;"	d
IMCLIBRARY_OS_EXTENSION	imunit/src/imunit/imv/IMVLibrary.h	53;"	d
IMCLibrary	imunit/src/imunit/imc/IMCLibrary.cpp	/^IMCLibrary::IMCLibrary()$/;"	f	class:tncfhh::iml::IMCLibrary
IMCLibrary	imunit/src/imunit/imc/IMCLibrary.h	/^class IMCLibrary: public IMUnitLibrary {$/;"	c	namespace:tncfhh::iml
IMC_CONFIG	build/imcv/attestation/imc/attestationimcConfig.h	4;"	d
IMC_CONFIG	build/imcv/clamav/imc/clamavimcConfig.h	4;"	d
IMC_CONFIG	build/imcv/dummy/imc/dummyimcConfig.h	4;"	d
IMC_CONFIG	build/imcv/platid/imc/platidimcConfig.h	4;"	d
IMC_CONFIG_DIR	build/imcv/attestation/imc/attestationimcConfig.h	3;"	d
IMC_CONFIG_DIR	build/imcv/clamav/imc/clamavimcConfig.h	3;"	d
IMC_CONFIG_DIR	build/imcv/dummy/imc/dummyimcConfig.h	3;"	d
IMC_CONFIG_DIR	build/imcv/platid/imc/platidimcConfig.h	3;"	d
IMC_CONFIG_FILE	build/imcv/attestation/imc/attestationimcConfig.h	2;"	d
IMC_CONFIG_FILE	build/imcv/clamav/imc/clamavimcConfig.h	2;"	d
IMC_CONFIG_FILE	build/imcv/dummy/imc/dummyimcConfig.h	2;"	d
IMC_CONFIG_FILE	build/imcv/platid/imc/platidimcConfig.h	2;"	d
IMUnitLibrary	imunit/src/imunit/IMUnitLibrary.cpp	/^IMUnitLibrary::IMUnitLibrary()$/;"	f	class:tncfhh::iml::IMUnitLibrary
IMUnitLibrary	imunit/src/imunit/IMUnitLibrary.h	/^class IMUnitLibrary {$/;"	c	namespace:tncfhh::iml
IMV	tncs/src/tncs/iel/IMV.cpp	/^IMV::IMV(TNC_ConnectionID conID, IMVProperties *imvProperties)$/;"	f	class:tncfhh::iel::IMV
IMV	tncs/src/tncs/iel/IMV.h	/^class IMV$/;"	c	namespace:tncfhh::iel
IMV-specific Classes	doc/tncfhh.tex	/^\\subsection{IMV-specific Classes}$/;"	u
IMVLibrary	doc/tncfhh.tex	/^\\paragraph{IMVLibrary}$/;"	P
IMVLibrary	imunit/src/imunit/imv/IMVLibrary.cpp	/^IMVLibrary::IMVLibrary()$/;"	f	class:tncfhh::iml::IMVLibrary
IMVLibrary	imunit/src/imunit/imv/IMVLibrary.h	/^class IMVLibrary: public IMUnitLibrary {$/;"	c	namespace:tncfhh::iml
IMVProperties	tncs/src/tncs/iel/IMVProperties.cpp	/^IMVProperties::IMVProperties(TNC_IMVID id, std::string name, std::string file)$/;"	f	class:tncfhh::iel::IMVProperties
IMVProperties	tncs/src/tncs/iel/IMVProperties.h	/^class IMVProperties {$/;"	c	namespace:tncfhh::iel
IMV_CONFIG	build/imcv/attestation/imv/attestationimvConfig.h	4;"	d
IMV_CONFIG	build/imcv/clamav/imv/clamavimvConfig.h	4;"	d
IMV_CONFIG	build/imcv/dummy/imv/dummyimvConfig.h	4;"	d
IMV_CONFIG	build/imcv/hostscanner/imv/hostscannerimvConfig.h	4;"	d
IMV_CONFIG	build/imcv/platid/imv/platidimvConfig.h	4;"	d
IMV_CONFIG_DIR	build/imcv/attestation/imv/attestationimvConfig.h	3;"	d
IMV_CONFIG_DIR	build/imcv/clamav/imv/clamavimvConfig.h	3;"	d
IMV_CONFIG_DIR	build/imcv/dummy/imv/dummyimvConfig.h	3;"	d
IMV_CONFIG_DIR	build/imcv/hostscanner/imv/hostscannerimvConfig.h	3;"	d
IMV_CONFIG_DIR	build/imcv/platid/imv/platidimvConfig.h	3;"	d
IMV_CONFIG_FILE	build/imcv/attestation/imv/attestationimvConfig.h	2;"	d
IMV_CONFIG_FILE	build/imcv/clamav/imv/clamavimvConfig.h	2;"	d
IMV_CONFIG_FILE	build/imcv/dummy/imv/dummyimvConfig.h	2;"	d
IMV_CONFIG_FILE	build/imcv/hostscanner/imv/hostscannerimvConfig.h	2;"	d
IMV_CONFIG_FILE	build/imcv/platid/imv/platidimvConfig.h	2;"	d
INSTALLED_NOT_OPERATIONAL	imcv/clamav/imc/src/ClamavIMCLibrary.h	/^		INSTALLED_NOT_OPERATIONAL,$/;"	e	enum:ClamavIMCLibrary::OperationalStatus
Introduction	doc/tncfhh.tex	/^\\section{Introduction}$/;"	s
Key	imcv/clamav/imv/src/ClamavIMV.h	/^	enum Key{$/;"	g	class:ClamavIMV
LIBTNCCLIENT_H_	vpn/vpnclient/src/vpnclient/LibTNCClient.h	36;"	d
LIBTNCTNCC_H_	tncsim/src/client/libtnc/LibtncTNCC.h	29;"	d
LOGNAME	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.cpp	43;"	d	file:
LOGNAME	vpn/naavpn/src/naavpn/MessageHandler.cpp	33;"	d	file:
LOGNAME	vpn/naavpn/src/naavpn/TNCServer.cpp	32;"	d	file:
LOGNAME	vpn/naavpn/src/naavpn/TNCSession.cpp	33;"	d	file:
LOGNAME	vpn/vpnclient/src/vpnclient/LibTNCClient.cpp	39;"	d	file:
LOGNAME	vpn/vpnclient/src/vpnclient/TNCClient.cpp	37;"	d	file:
LibTNCClient	vpn/vpnclient/src/vpnclient/LibTNCClient.cpp	/^LibTNCClient::LibTNCClient() : wantWrite_(true), wantRead_(false), finished_(false)$/;"	f	class:tnc::LibTNCClient
LibTNCClient	vpn/vpnclient/src/vpnclient/LibTNCClient.h	/^class LibTNCClient {$/;"	c	namespace:tnc
LibtncTNCC	tncsim/src/client/libtnc/LibtncTNCC.cpp	/^LibtncTNCC::LibtncTNCC(std::string &tncConfig)$/;"	f	class:tncsim::client::libtnc::LibtncTNCC
LibtncTNCC	tncsim/src/client/libtnc/LibtncTNCC.h	/^class LibtncTNCC: public tncsim::client::AbstractTNCC {$/;"	c	namespace:tncsim::client::libtnc
LibtncTNCS	tncsim/src/server/libtnc/LibtncTNCS.cpp	/^LibtncTNCS::LibtncTNCS(std::string &tncConfig)$/;"	f	class:tncsim::server::libtnc::LibtncTNCS
LibtncTNCS	tncsim/src/server/libtnc/LibtncTNCS.h	/^class LibtncTNCS: public tncsim::server::AbstractTNCS {$/;"	c	namespace:tncsim::server::libtnc
LibtncTNCS_H_	tncsim/src/server/libtnc/LibtncTNCS.h	29;"	d
MAX	hash/ps.cpp	31;"	d	file:
MAX	imcv/procwatcher/imv/src/ProcwatcherIMV.h	45;"	d
MESSAGEHANDLER_H	vpn/naavpn/src/naavpn/MessageHandler.h	29;"	d
MESSAGE_SUBTYPE	imcv/example/imc/src.bk/ExampleIMCLibrary.h	36;"	d
MESSAGE_SUBTYPE	imcv/example/imc/src/ExampleIMCLibrary.h	36;"	d
MESSAGE_SUBTYPE	imcv/example/imv/src.bk/ExampleIMVLibrary.h	36;"	d
MESSAGE_SUBTYPE	imcv/example/imv/src/ExampleIMVLibrary.h	36;"	d
MESSAGE_SUBTYPE	imcv/procwatcher/imc/src.bk/ExampleIMCLibrary.h	36;"	d
MESSAGE_SUBTYPE	imcv/procwatcher/imc/src/ProcwatcherIMCLibrary.h	36;"	d
MESSAGE_SUBTYPE	imcv/procwatcher/imv/src.bk/ExampleIMVLibrary.h	36;"	d
MESSAGE_SUBTYPE	imcv/procwatcher/imv/src/ProcwatcherIMVLibrary.h	43;"	d
MESSAGE_TYPE_COUNT	imcv/clamav/imc/src/ClamavIMCLibrary.h	40;"	d
MESSAGE_TYPE_COUNT	imcv/clamav/imv/src/ClamavIMVLibrary.h	40;"	d
MESSAGE_TYPE_COUNT	imcv/dummy/imc/src/DummyIMCLibrary.h	40;"	d
MESSAGE_TYPE_COUNT	imcv/dummy/imv/src/DummyIMVLibrary.h	36;"	d
MESSAGE_TYPE_COUNT	imcv/hostscanner/imc/src/HostScannerIMCLibrary.h	39;"	d
MESSAGE_TYPE_COUNT	imcv/hostscanner/imv/src/HostScannerIMVLibrary.h	39;"	d
Main_Version	imcv/clamav/imv/src/ClamavIMV.h	/^		Main_Version,$/;"	e	enum:ClamavIMV::Key
Measurement	imcv/clamav/imv/src/ClamavIMV.cpp	/^ClamavIMV::Measurement::Measurement(Key key, std::string keyAsString, std::string value) :$/;"	f	class:ClamavIMV::Measurement
Measurement	imcv/clamav/imv/src/ClamavIMV.h	/^	class Measurement {$/;"	c	class:ClamavIMV
MessageHandler	vpn/naavpn/src/naavpn/MessageHandler.cpp	/^MessageHandler::MessageHandler(tnc::Endpoint *ep)$/;"	f	class:tnc::MessageHandler
MessageHandler	vpn/naavpn/src/naavpn/MessageHandler.h	/^class MessageHandler {$/;"	c	namespace:tnc
NAAEAP_H_	naaeap/src/naaeap/naaeap.h	49;"	d
NOT_INSTALLED	imcv/clamav/imc/src/ClamavIMCLibrary.h	/^		NOT_INSTALLED,$/;"	e	enum:ClamavIMCLibrary::OperationalStatus
Not implemented	doc/freeradius-eapttls-patch/overview.tex	/^\\subsubsection*{Not implemented}$/;"	b
OPERATIONAL	imcv/clamav/imc/src/ClamavIMCLibrary.h	/^		OPERATIONAL,$/;"	e	enum:ClamavIMCLibrary::OperationalStatus
Open Source Licensing	doc/tncfhh.tex	/^\\paragraph{Open Source Licensing} This is the appropriate option if you want to$/;"	P
Operant	imcv/clamav/imv/src/ClamavIMV.h	/^	enum Operant{$/;"	g	class:ClamavIMV
OperationalStatus	imcv/clamav/imc/src/ClamavIMCLibrary.h	/^	enum OperationalStatus{$/;"	g	class:ClamavIMCLibrary
OperationalStatus	imcv/clamav/imv/src/ClamavIMV.h	/^		OperationalStatus,$/;"	e	enum:ClamavIMV::Key
Original attributes	doc/freeradius-eapttls-patch/rlm_eap_ttls.tex	/^\\subparagraph{Original attributes}$/;"	G
Original behaviour	doc/freeradius-eapttls-patch/rlm_eap_ttls.tex	/^\\subparagraph{Original behaviour}$/;"	G
Original configuration-items	doc/freeradius-eapttls-patch/rlm_eap_ttls.tex	/^\\subparagraph{Original configuration-items}$/;"	G
PATH	hash/ps.cpp	32;"	d	file:
PCR_SELECTION_H_	imcv/attestation/imc/src/PcrSelection.h	41;"	d
PEPCLIENT_H	vpn/naavpn/src/naavpn/PEPClient.h	29;"	d
PEPClient	vpn/naavpn/src/naavpn/PEPClient.cpp	/^PEPClient::PEPClient(boost::asio::io_service& io_service,$/;"	f	class:tnc::PEPClient
PEPClient	vpn/naavpn/src/naavpn/PEPClient.h	/^class PEPClient : public tnc::ssl::Client {$/;"	c	namespace:tnc
PEPNOTIFIER_H	vpn/naavpn/src/naavpn/PEPNotifier.h	29;"	d
PEPNotifier	vpn/naavpn/src/naavpn/PEPNotifier.h	/^	PEPNotifier() {}$/;"	f	class:tnc::PEPNotifier
PEPNotifier	vpn/naavpn/src/naavpn/PEPNotifier.h	/^class PEPNotifier {$/;"	c	namespace:tnc
PEPServer	vpn/vpnpep/src/vpnpep/PEPServer.h	/^	PEPServer(boost::asio::io_service& io_service, tnc::EndpointDB *db) :$/;"	f	class:tnc::PEPServer
PEPServer	vpn/vpnpep/src/vpnpep/PEPServer.h	/^class PEPServer: public ssl::Server {$/;"	c	namespace:tnc
PEPSession	vpn/vpnpep/src/vpnpep/PEPSession.h	/^	PEPSession (boost::asio::io_service& io_service, boost::asio::ssl::context& context,$/;"	f	class:tnc::PEPSession
PEPSession	vpn/vpnpep/src/vpnpep/PEPSession.h	/^class PEPSession : public ssl::Session {$/;"	c	namespace:tnc
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	101;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	104;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	107;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	113;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	116;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	122;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	128;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	134;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	137;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	143;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	146;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	149;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	158;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	164;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	167;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	92;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	95;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	101;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	107;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	116;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	128;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	134;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	140;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	143;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	158;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	86;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	92;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	95;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
PLATIDIMCLIBRARY_H_	imcv/platid/imc/src/PlatidIMCLibrary.h	41;"	d
PLATIDIMC_CONFIG_CERTIFICATE_FILE	imcv/platid/imc/src/PlatidIMC.h	59;"	d
PLATIDIMC_CONFIG_KEY_FILE	imcv/platid/imc/src/PlatidIMC.h	58;"	d
PLATIDIMC_CONFIG_USE_WKS	imcv/platid/imc/src/PlatidIMC.h	57;"	d
PLATIDIMC_H_	imcv/platid/imc/src/PlatidIMC.h	52;"	d
PLATIDIMC_TPM_ENGINE	imcv/platid/imc/src/PlatidIMC.h	56;"	d
PLATIDIMVLIBRARY_H_	imcv/platid/imv/src/PlatidIMVLibrary.h	42;"	d
PLATIDIMV_H_	imcv/platid/imv/src/PlatidIMV.h	64;"	d
PLATIDIMV_KNOWN_CERTS_FILENAME	imcv/platid/imv/src/PlatidIMVLibrary.h	61;"	d
PROCWATCHERIMC_AIK_KEY	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	42;"	d	file:
PROCWATCHERIMC_H_	imcv/procwatcher/imc/src/ProcwatcherIMC.h	29;"	d
PROCWATCHERIMC_H_	imcv/procwatcher/imv/src/ProcwatcherIMV.h	29;"	d
PROCWATCHERIMC_X509_CERT	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	41;"	d	file:
PROCWATCHERIMVLIBRARY_H_	imcv/procwatcher/imv/src/ProcwatcherIMVLibrary.h	29;"	d
PROCWATCHERIMVPOLICYMANAGER_H_	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.h	46;"	d
PROCWATCHERLIBRARY_H_	imcv/procwatcher/imc/src/ProcwatcherIMCLibrary.h	29;"	d
PcrEntry	imcv/attestation/imv/src/AttestationIMVPolicyManager.cpp	/^PcrEntry::PcrEntry(unsigned int index, std::string valueAsString)$/;"	f	class:tncfhh::iml::PcrEntry
PcrEntry	imcv/attestation/imv/src/AttestationIMVPolicyManager.h	/^class PcrEntry {$/;"	c	namespace:tncfhh::iml
PcrEntry	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.cpp	/^PcrEntry::PcrEntry(unsigned int index, std::string valueAsString)$/;"	f	class:tncfhh::iml::PcrEntry
PcrEntry	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.h	/^class PcrEntry {$/;"	c	namespace:tncfhh::iml
PcrSelection	imcv/attestation/imc/src/PcrSelection.cpp	/^PcrSelection::PcrSelection(TNC_BufferReference bitmask, UINT16 length)$/;"	f	class:PcrSelection
PcrSelection	imcv/attestation/imc/src/PcrSelection.h	/^class PcrSelection {$/;"	c
PlatidIMC	imcv/platid/imc/src/PlatidIMC.cpp	/^PlatidIMC::PlatidIMC(TNC_ConnectionID conID, PlatidIMCLibrary *imclib)$/;"	f	class:PlatidIMC
PlatidIMC	imcv/platid/imc/src/PlatidIMC.h	/^class PlatidIMC : public AbstractIMC$/;"	c
PlatidIMCLibrary	imcv/platid/imc/src/PlatidIMCLibrary.cpp	/^PlatidIMCLibrary::PlatidIMCLibrary()$/;"	f	class:PlatidIMCLibrary
PlatidIMCLibrary	imcv/platid/imc/src/PlatidIMCLibrary.cpp	/^TNCFHH_IMCLIBRARY_INITIALIZE(PlatidIMCLibrary);$/;"	v
PlatidIMCLibrary	imcv/platid/imc/src/PlatidIMCLibrary.h	/^class PlatidIMCLibrary : public tncfhh::iml::IMCLibrary$/;"	c
PlatidIMV	imcv/platid/imv/src/PlatidIMV.cpp	/^PlatidIMV::PlatidIMV(TNC_ConnectionID conID,$/;"	f	class:PlatidIMV
PlatidIMV	imcv/platid/imv/src/PlatidIMV.h	/^class PlatidIMV : public tncfhh::iml::AbstractIMV$/;"	c
PlatidIMVLibrary	imcv/platid/imv/src/PlatidIMVLibrary.cpp	/^PlatidIMVLibrary::PlatidIMVLibrary()$/;"	f	class:PlatidIMVLibrary
PlatidIMVLibrary	imcv/platid/imv/src/PlatidIMVLibrary.h	/^class PlatidIMVLibrary : public tncfhh::iml::IMVLibrary$/;"	c
Policy	imcv/example/imc/src/ExampleIMC.cpp	/^ExampleIMC::Policy::Policy(){paths.clear();}$/;"	f	class:ExampleIMC::Policy
Policy	imcv/example/imc/src/ExampleIMC.h	/^    class Policy{$/;"	c	class:ExampleIMC
Policy	imcv/hostscanner/imc/src/HostScannerIMC.cpp	/^HostScannerIMC::Policy::Policy(Protocol pr, unsigned short po, Status s)$/;"	f	class:HostScannerIMC::Policy
Policy	imcv/hostscanner/imc/src/HostScannerIMC.h	/^	class Policy$/;"	c	class:HostScannerIMC
Policy	imcv/hostscanner/imv/src/HostScannerIMV.cpp	/^HostScannerIMV::Policy::Policy(Protocol pr, unsigned short po, Status s)$/;"	f	class:HostScannerIMV::Policy
Policy	imcv/hostscanner/imv/src/HostScannerIMV.h	/^    	class Policy$/;"	c	class:HostScannerIMV
Policy	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^ProcwatcherIMC::Policy::Policy(){paths.clear();}$/;"	f	class:ProcwatcherIMC::Policy
Policy	imcv/procwatcher/imc/src/ProcwatcherIMC.h	/^    class Policy{$/;"	c	class:ProcwatcherIMC
Policy	tncs/src/tncs/iel/Policy.cpp	/^Policy::Policy()$/;"	f	class:tncfhh::iel::Policy
Policy	tncs/src/tncs/iel/Policy.h	/^class Policy$/;"	c	namespace:tncfhh::iel
PolicyEntry	imcv/clamav/imv/src/ClamavIMV.cpp	/^ClamavIMV::PolicyEntry::PolicyEntry(Key key, Operant operant, std::string value) :$/;"	f	class:ClamavIMV::PolicyEntry
PolicyEntry	imcv/clamav/imv/src/ClamavIMV.h	/^	class PolicyEntry{$/;"	c	class:ClamavIMV
ProcwatcherIMC	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^    ProcwatcherIMC::ProcwatcherIMC(TNC_ConnectionID conID, ProcwatcherIMCLibrary *pProcwatcherIMCLibrary)$/;"	f	class:ProcwatcherIMC
ProcwatcherIMC	imcv/procwatcher/imc/src/ProcwatcherIMC.h	/^class ProcwatcherIMC : public tncfhh::iml::AbstractIMC$/;"	c
ProcwatcherIMCLibrary	imcv/procwatcher/imc/src/ProcwatcherIMCLibrary.cpp	/^ProcwatcherIMCLibrary::ProcwatcherIMCLibrary()$/;"	f	class:ProcwatcherIMCLibrary
ProcwatcherIMCLibrary	imcv/procwatcher/imc/src/ProcwatcherIMCLibrary.cpp	/^TNCFHH_IMCLIBRARY_INITIALIZE(ProcwatcherIMCLibrary) ;$/;"	v
ProcwatcherIMCLibrary	imcv/procwatcher/imc/src/ProcwatcherIMCLibrary.h	/^class ProcwatcherIMCLibrary : public tncfhh::iml::IMCLibrary{$/;"	c
ProcwatcherIMV	imcv/procwatcher/imv/src/ProcwatcherIMV.cpp	/^ProcwatcherIMV::ProcwatcherIMV(TNC_ConnectionID conID, ProcwatcherIMVLibrary *pProcwatcherIMVLibrary,ProcwatcherIMVPolicyManager * pm)$/;"	f	class:ProcwatcherIMV
ProcwatcherIMV	imcv/procwatcher/imv/src/ProcwatcherIMV.h	/^class ProcwatcherIMV : public tncfhh::iml::AbstractIMV$/;"	c
ProcwatcherIMVLibrary	imcv/procwatcher/imv/src/ProcwatcherIMVLibrary.cpp	/^ProcwatcherIMVLibrary::ProcwatcherIMVLibrary()$/;"	f	class:ProcwatcherIMVLibrary
ProcwatcherIMVLibrary	imcv/procwatcher/imv/src/ProcwatcherIMVLibrary.cpp	/^TNCFHH_IMVLIBRARY_INITIALIZE(ProcwatcherIMVLibrary) ;$/;"	v
ProcwatcherIMVLibrary	imcv/procwatcher/imv/src/ProcwatcherIMVLibrary.h	/^class ProcwatcherIMVLibrary : public tncfhh::iml::IMVLibrary{$/;"	c
ProcwatcherIMVPolicyManager	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.cpp	/^ProcwatcherIMVPolicyManager::ProcwatcherIMVPolicyManager(const char *policyFile)$/;"	f	class:tncfhh::iml::ProcwatcherIMVPolicyManager
ProcwatcherIMVPolicyManager	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.h	/^class ProcwatcherIMVPolicyManager$/;"	c	namespace:tncfhh::iml
Protocol	imcv/hostscanner/imc/src/HostScannerIMC.h	/^	enum Protocol {TCP, UDP};$/;"	g	class:HostScannerIMC
Protocol	imcv/hostscanner/imv/src/HostScannerIMV.h	/^    	enum Protocol {TCP, UDP};$/;"	g	class:HostScannerIMV
QuoteType	imcv/attestation/imv/src/AttestationIMVPolicyManager.h	/^enum QuoteType$/;"	g	namespace:tncfhh::iml
QuoteType	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.h	/^enum QuoteType$/;"	g	namespace:tncfhh::iml
RECEIVEEXCEPTION_H_	vpn/libtncvpn/src/tncvpn/ifttls/exceptions/ReceiveException.h	36;"	d
RESERVED	imcv/clamav/imc/src/ClamavIMCLibrary.h	/^		RESERVED$/;"	e	enum:ClamavIMCLibrary::OperationalStatus
RLM  _EAP  _TTLS	doc/freeradius-eapttls-patch/rlm_eap_ttls.tex	/^\\subsection{RLM\\_EAP\\_TTLS}$/;"	u
RM	build/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/imcv/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/imcv/attestation/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/imcv/attestation/imc/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/imcv/attestation/imv/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/imcv/clamav/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/imcv/clamav/imc/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/imcv/clamav/imv/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/imcv/dummy/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/imcv/dummy/imc/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/imcv/dummy/imv/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/imcv/example/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/imcv/example/imc/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/imcv/example/imv/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/imcv/hostscanner/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/imcv/hostscanner/imc/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/imcv/hostscanner/imv/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/imcv/platid/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/imcv/platid/imc/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/imcv/platid/imv/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/imcv/procwatcher/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/imcv/procwatcher/imc/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/imcv/procwatcher/imv/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/imunit/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/naaeap/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/tncs/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/tncsim/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/tncutil/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/tncxacml/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
Raw flow of operations	doc/freeradius-eapttls-patch/raw_flow_of_operations.tex	/^\\subsection{Raw flow of operations}$/;"	u
ReceiveException	vpn/libtncvpn/src/tncvpn/ifttls/exceptions/ReceiveException.cpp	/^ReceiveException::ReceiveException(std::string msg) : errorMsg(msg)$/;"	f	class:ReceiveException
ReceiveException	vpn/libtncvpn/src/tncvpn/ifttls/exceptions/ReceiveException.h	/^class ReceiveException {$/;"	c
Recipient	tncs/src/tncs/iel/tnc1/TNCCSBatch.h	/^	enum Recipient {TNCS, TNCC};$/;"	g	class:tncfhh::iel::tnc1::TNCCSBatch
Remarks	doc/freeradius-eapttls-patch/sequence_diagrams.tex	/^\\subsubsection*{Remarks}$/;"	b
ResultException	imunit/src/imunit/exception/ResultException.cpp	/^ResultException::ResultException(std::string message, TNC_Result returnValue) throw ()$/;"	f	class:tncfhh::iml::ResultException
ResultException	imunit/src/imunit/exception/ResultException.h	/^class ResultException : public std::exception$/;"	c	namespace:tncfhh::iml
ResultException	tncs/src/tncs/exception/ResultException.cpp	/^ResultException::ResultException(std::string message, TNC_Result returnValue) throw ()$/;"	f	class:tncfhh::iel::ResultException
ResultException	tncs/src/tncs/exception/ResultException.h	/^class ResultException : public std::exception$/;"	c	namespace:tncfhh::iel
Running EAP-MD5 as the first inner method	doc/freeradius-eapttls-patch/detailed_flow_of_operations.tex	/^\\subsubsection*{Running EAP-MD5 as the first inner method}$/;"	b
SERVER_H	vpn/libtncvpn/src/tncvpn/ssl/Server.h	29;"	d
SESSION_H	vpn/libtncvpn/src/tncvpn/ssl/Session.h	29;"	d
SHA1_LENGTH	hash/ps.cpp	34;"	d	file:
SHA1_LENGTH	imcv/example/imc/src/ExampleIMC.h	36;"	d
SHA1_LENGTH	imcv/procwatcher/imc/src/ProcwatcherIMC.h	41;"	d
SHA1_LENGTH	imcv/procwatcher/imv/src/ProcwatcherIMV.h	44;"	d
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/imcv/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/imcv/attestation/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/imcv/attestation/imc/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/imcv/attestation/imv/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/imcv/clamav/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/imcv/clamav/imc/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/imcv/clamav/imv/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/imcv/dummy/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/imcv/dummy/imc/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/imcv/dummy/imv/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/imcv/example/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/imcv/example/imc/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/imcv/example/imv/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/imcv/hostscanner/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/imcv/hostscanner/imc/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/imcv/hostscanner/imv/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/imcv/platid/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/imcv/platid/imc/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/imcv/platid/imv/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/imcv/procwatcher/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/imcv/procwatcher/imc/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/imcv/procwatcher/imv/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/imunit/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/naaeap/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/tncs/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/tncsim/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/tncutil/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/tncxacml/Makefile	/^SHELL = \/bin\/sh$/;"	m
SOH1Protocol	tncs/src/tncs/iel/soh/SOH1Protocol.cpp	/^SOH1Protocol::SOH1Protocol(const std::map<TNC_IMVID, IMV*> &imvsMap)$/;"	f	class:tncfhh::iel::soh::SOH1Protocol
SOH1Protocol	tncs/src/tncs/iel/soh/SOH1Protocol.h	/^class SOH1Protocol: public tncfhh::iel::AbstractTNCCSProtocol {$/;"	c	namespace:tncfhh::iel::soh
SSL_CLIENT_H	vpn/libtncvpn/src/tncvpn/ssl/Client.h	29;"	d
STRING_HELPER_H_	tncs/src/tncs/iel/string_helper.h	43;"	d
SUFFIXES	build/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/imcv/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/imcv/attestation/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/imcv/attestation/imc/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/imcv/attestation/imv/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/imcv/clamav/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/imcv/clamav/imc/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/imcv/clamav/imv/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/imcv/dummy/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/imcv/dummy/imc/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/imcv/dummy/imv/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/imcv/example/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/imcv/example/imc/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/imcv/example/imv/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/imcv/hostscanner/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/imcv/hostscanner/imc/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/imcv/hostscanner/imv/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/imcv/platid/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/imcv/platid/imc/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/imcv/platid/imv/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/imcv/procwatcher/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/imcv/procwatcher/imc/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/imcv/procwatcher/imv/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/imunit/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/naaeap/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/tncs/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/tncsim/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/tncutil/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/tncxacml/Makefile	/^SUFFIXES =$/;"	m
Sequence diagrams	doc/freeradius-eapttls-patch/sequence_diagrams.tex	/^\\subsection{Sequence diagrams}$/;"	u
Server	vpn/libtncvpn/src/tncvpn/ssl/Server.h	/^	Server(boost::asio::io_service& io_service, unsigned short port) :$/;"	f	class:tnc::ssl::Server
Server	vpn/libtncvpn/src/tncvpn/ssl/Server.h	/^class Server {$/;"	c	namespace:tnc::ssl
Session	vpn/libtncvpn/src/tncvpn/ssl/Session.h	/^	Session (boost::asio::io_service& io_service, boost::asio::ssl::context& context)$/;"	f	class:tnc::ssl::Session
Session	vpn/libtncvpn/src/tncvpn/ssl/Session.h	/^class Session {$/;"	c	namespace:tnc::ssl
Specification of the patch	doc/freeradius-eapttls-patch/overview.tex	/^\\subsubsection*{Specification of the patch}$/;"	b
Start of EAP-TTLS	doc/freeradius-eapttls-patch/detailed_flow_of_operations.tex	/^\\subsubsection*{Start of EAP-TTLS}$/;"	b
Status	imcv/hostscanner/imc/src/HostScannerIMC.h	/^	enum Status {open, close};$/;"	g	class:HostScannerIMC
Status	imcv/hostscanner/imv/src/HostScannerIMV.h	/^    	enum Status {open, close, whatever};$/;"	g	class:HostScannerIMV
StrictErrorHandler	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^class StrictErrorHandler : public xercesc::DefaultHandler$/;"	c	namespace:tncfhh::iel::tnc1	file:
TCP	imcv/hostscanner/imc/src/HostScannerIMC.h	/^	enum Protocol {TCP, UDP};$/;"	e	enum:HostScannerIMC::Protocol
TCP	imcv/hostscanner/imv/src/HostScannerIMV.h	/^    	enum Protocol {TCP, UDP};$/;"	e	enum:HostScannerIMV::Protocol
TLVBuffer	vpn/libtncvpn/src/tncvpn/libtnac/TLVBuffer.h	/^	TLVBuffer(unsigned offset, unsigned max_pkt_size, unsigned buf_size = 4096)$/;"	f	class:TLVBuffer
TLVBuffer	vpn/libtncvpn/src/tncvpn/libtnac/TLVBuffer.h	/^class TLVBuffer {$/;"	c
TLV_BUFFER_H	vpn/libtncvpn/src/tncvpn/libtnac/TLVBuffer.h	31;"	d
TNC1Protocol	tncs/src/tncs/iel/tnc1/TNC1Protocol.cpp	/^TNC1Protocol::TNC1Protocol(const std::map<TNC_IMVID, IMV*> &imvsMap)$/;"	f	class:tncfhh::iel::tnc1::TNC1Protocol
TNC1Protocol	tncs/src/tncs/iel/tnc1/TNC1Protocol.h	/^class TNC1Protocol: public tncfhh::iel::AbstractTNCCSProtocol {$/;"	c	namespace:tncfhh::iel::tnc1
TNCC	imunit/src/imunit/imc/TNCC.cpp	/^TNCC::TNCC(TNC_ConnectionID cid, IMCLibrary *pImcLibrary):$/;"	f	class:tncfhh::iml::TNCC
TNCC	imunit/src/imunit/imc/TNCC.h	/^class TNCC$/;"	c	namespace:tncfhh::iml
TNCC	tncs/src/tncs/iel/tnc1/TNCCSBatch.h	/^	enum Recipient {TNCS, TNCC};$/;"	e	enum:tncfhh::iel::tnc1::TNCCSBatch::Recipient
TNCCLIENT_H_	vpn/vpnclient/src/vpnclient/TNCClient.h	36;"	d
TNCCSBatch	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^TNCCSBatch::TNCCSBatch(Recipient recipient)$/;"	f	class:tncfhh::iel::tnc1::TNCCSBatch
TNCCSBatch	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^TNCCSBatch::TNCCSBatch(const TNCCSBatch &batch) throw (std::runtime_error)$/;"	f	class:tncfhh::iel::tnc1::TNCCSBatch
TNCCSBatch	tncs/src/tncs/iel/tnc1/TNCCSBatch.h	/^class TNCCSBatch$/;"	c	namespace:tncfhh::iel::tnc1
TNCCSDATA_H_	tncsim/src/TNCCSData.h	29;"	d
TNCCSData	tncs/src/tncs/iel/TNCCSData.cpp	/^TNCCSData::TNCCSData(TNC_BufferReference data, TNC_UInt32 dataLength) throw (std::invalid_argument)$/;"	f	class:tncfhh::iel::TNCCSData
TNCCSData	tncs/src/tncs/iel/TNCCSData.cpp	/^TNCCSData::TNCCSData(TNC_UInt32 dataLength)$/;"	f	class:tncfhh::iel::TNCCSData
TNCCSData	tncs/src/tncs/iel/TNCCSData.cpp	/^TNCCSData::TNCCSData(const TNCCSData &tnccsdata)$/;"	f	class:tncfhh::iel::TNCCSData
TNCCSData	tncs/src/tncs/iel/TNCCSData.h	/^class TNCCSData$/;"	c	namespace:tncfhh::iel
TNCCSData	tncsim/src/TNCCSData.cpp	/^TNCCSData::TNCCSData(TNC_BufferReference data, TNC_UInt32 dataLength) throw (std::invalid_argument)$/;"	f	class:tncsim::TNCCSData
TNCCSData	tncsim/src/TNCCSData.cpp	/^TNCCSData::TNCCSData(TNC_UInt32 dataLength)$/;"	f	class:tncsim::TNCCSData
TNCCSData	tncsim/src/TNCCSData.cpp	/^TNCCSData::TNCCSData(const TNCCSData &tnccsdata)$/;"	f	class:tncsim::TNCCSData
TNCCSData	tncsim/src/TNCCSData.h	/^class TNCCSData$/;"	c	namespace:tncsim
TNCCSDataLength	naaeap/src/naaeap/data/EapTncFragment.h	/^	TNC_UInt32 TNCCSDataLength;$/;"	m	class:tncfhh::nal::EapTncFragment
TNCCSProtocolNotSupportedException	tncs/src/tncs/exception/TNCCSProtocolNotSupportedException.cpp	/^TNCCSProtocolNotSupportedException::TNCCSProtocolNotSupportedException(std::string message) throw ()$/;"	f	class:tncfhh::iel::TNCCSProtocolNotSupportedException
TNCCSProtocolNotSupportedException	tncs/src/tncs/exception/TNCCSProtocolNotSupportedException.h	/^class TNCCSProtocolNotSupportedException : public std::exception$/;"	c	namespace:tncfhh::iel
TNCCTNCSMessage	tncs/src/tncs/iel/tnc1/TNCCTNCSMessage.cpp	/^TNCCTNCSMessage::TNCCTNCSMessage(TNC_MessageType type)$/;"	f	class:tncfhh::iel::tnc1::TNCCTNCSMessage
TNCCTNCSMessage	tncs/src/tncs/iel/tnc1/TNCCTNCSMessage.h	/^class TNCCTNCSMessage$/;"	c	namespace:tncfhh::iel::tnc1
TNCCTNCSMessageBase64	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageBase64.cpp	/^TNCCTNCSMessageBase64::TNCCTNCSMessageBase64(TNC_MessageType type, TNC_BufferReference data, TNC_UInt32 dataLength)$/;"	f	class:tncfhh::iel::tnc1::TNCCTNCSMessageBase64
TNCCTNCSMessageBase64	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageBase64.h	/^class TNCCTNCSMessageBase64 : public TNCCTNCSMessage$/;"	c	namespace:tncfhh::iel::tnc1
TNCCTNCSMessageXML	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageXML.cpp	/^TNCCTNCSMessageXML::TNCCTNCSMessageXML(TNC_MessageType type, xercesc::DOMDocument * doc) throw (std::runtime_error)$/;"	f	class:tncfhh::iel::tnc1::TNCCTNCSMessageXML
TNCCTNCSMessageXML	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageXML.cpp	/^TNCCTNCSMessageXML::TNCCTNCSMessageXML(TNC_MessageType type, xercesc::DOMElement * xml) throw (std::runtime_error)$/;"	f	class:tncfhh::iel::tnc1::TNCCTNCSMessageXML
TNCCTNCSMessageXML	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageXML.cpp	/^TNCCTNCSMessageXML::TNCCTNCSMessageXML(const TNCCTNCSMessageXML& m) throw (std::runtime_error)$/;"	f	class:tncfhh::iel::tnc1::TNCCTNCSMessageXML
TNCCTNCSMessageXML	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageXML.h	/^class TNCCTNCSMessageXML : public TNCCTNCSMessage$/;"	c	namespace:tncfhh::iel::tnc1
TNCC_FunctionPointers	imunit/src/imunit/imc/IMCLibrary.h	/^	struct TNCC_FunctionPointers{$/;"	s	class:tncfhh::iml::IMCLibrary
TNCClient	vpn/vpnclient/src/vpnclient/TNCClient.cpp	/^TNCClient::TNCClient(io_service& io_service,$/;"	f	class:tnc::TNCClient
TNCClient	vpn/vpnclient/src/vpnclient/TNCClient.h	/^class TNCClient : public tnc::ssl::Client {$/;"	c	namespace:tnc
TNCFHH_IEL_RESULTEXCEPTION_H_	tncs/src/tncs/exception/ResultException.h	28;"	d
TNCFHH_IMCLIBRARY_INITIALIZE	imunit/src/imunit/imc/IMCLibrary.h	62;"	d
TNCFHH_IML_ABSTRACTIMC_H_	imunit/src/imunit/imc/AbstractIMC.h	29;"	d
TNCFHH_IML_ABSTRACTIMV_H_	imunit/src/imunit/imv/AbstractIMV.h	30;"	d
TNCFHH_IML_IMCLIBRARY_H_	imunit/src/imunit/imc/IMCLibrary.h	29;"	d
TNCFHH_IML_IMVLIBRARY_H_	imunit/src/imunit/imv/IMVLibrary.h	29;"	d
TNCFHH_IML_RESULTEXCEPTION_H_	imunit/src/imunit/exception/ResultException.h	28;"	d
TNCFHH_IML_TNCC_H_	imunit/src/imunit/imc/TNCC.h	29;"	d
TNCFHH_IML_TNCS_H_	imunit/src/imunit/imv/TNCS.h	29;"	d
TNCFHH_IMUNITLIBRARY_H_	imunit/src/imunit/IMUnitLibrary.h	29;"	d
TNCFHH_IMVLIBRARY_INITIALIZE	imunit/src/imunit/imv/IMVLibrary.h	62;"	d
TNCFHH_VERSION_MAJOR	build/tncfhhConfig.h	1;"	d
TNCFHH_VERSION_MINOR	build/tncfhhConfig.h	2;"	d
TNCFHH_VERSION_PATCH	build/tncfhhConfig.h	3;"	d
TNCMOCKCLIENT_H_	vpn/vpnclient/src/vpnclient/TNCMockClient.h	36;"	d
TNCMockClient	vpn/vpnclient/src/vpnclient/TNCMockClient.h	/^	TNCMockClient() : msg_count(0), _want_read(false), _want_write(true) {}$/;"	f	class:TNCMockClient
TNCMockClient	vpn/vpnclient/src/vpnclient/TNCMockClient.h	/^class TNCMockClient {$/;"	c
TNCS	doc/tncfhh.tex	/^\\paragraph{TNCS}$/;"	P
TNCS	imunit/src/imunit/imv/TNCS.cpp	/^TNCS::TNCS(TNC_ConnectionID cid, IMVLibrary *pImvLibrary):$/;"	f	class:tncfhh::iml::TNCS
TNCS	imunit/src/imunit/imv/TNCS.h	/^class TNCS$/;"	c	namespace:tncfhh::iml
TNCS	tncs/src/tncs/iel/tnc1/TNCCSBatch.h	/^	enum Recipient {TNCS, TNCC};$/;"	e	enum:tncfhh::iel::tnc1::TNCCSBatch::Recipient
TNCSERVER_H	vpn/naavpn/src/naavpn/TNCServer.h	29;"	d
TNCSESSION_H	vpn/naavpn/src/naavpn/TNCSession.h	29;"	d
TNCSIM_CONFIG	build/tncsim/tncsimConfig.h	4;"	d
TNCSIM_CONFIG_DIR	build/tncsim/tncsimConfig.h	3;"	d
TNCSIM_CONFIG_FILE	build/tncsim/tncsimConfig.h	2;"	d
TNCS_ABSTRACTTNCCSPROTOCOL_H_	tncs/src/tncs/iel/AbstractTNCCSProtocol.h	28;"	d
TNCS_CONFIG	build/tncs/tncsConfig.h	4;"	d
TNCS_CONFIG_DIR	build/tncs/tncsConfig.h	3;"	d
TNCS_CONFIG_FILE	build/tncs/tncsConfig.h	2;"	d
TNCS_CONNECTIONSTATEEXCEPTIONWITHTNCCSDATA_H_	tncs/src/tncs/exception/ConnectionStateExceptionWithTNCCSData.h	29;"	d
TNCS_CONNECTIONSTATEEXCEPTION_H_	tncs/src/tncs/exception/ConnectionStateException.h	29;"	d
TNCS_CONNECTION_H_	tncs/src/tncs/iel/Connection.h	28;"	d
TNCS_COORDINATOR_H_	tncs/src/tncs/iel/Coordinator.h	29;"	d
TNCS_FunctionPointers	imunit/src/imunit/imv/IMVLibrary.h	/^	struct TNCS_FunctionPointers{$/;"	s	class:tncfhh::iml::IMVLibrary
TNCS_IELTNCCSBATCH_H_	tncs/src/tncs/iel/tnc1/TNCCSBatch.h	28;"	d
TNCS_IMCIMVMESSAGE_H_	tncs/src/tncs/iel/tnc1/IMCIMVMessage.h	28;"	d
TNCS_IMVPROPERTIES_H_	tncs/src/tncs/iel/IMVProperties.h	146;"	d
TNCS_IMV_H_	tncs/src/tncs/iel/IMV.h	28;"	d
TNCS_POLICY_H_	tncs/src/tncs/iel/Policy.h	28;"	d
TNCS_SOH1PROTOCOL_H_	tncs/src/tncs/iel/soh/SOH1Protocol.h	28;"	d
TNCS_TNC1PROTOCOL_H_	tncs/src/tncs/iel/tnc1/TNC1Protocol.h	28;"	d
TNCS_TNCCSDATA_H_	tncs/src/tncs/iel/TNCCSData.h	29;"	d
TNCS_TNCCSPROTOCOLNOTSUPPORTEDEXCEPTION_H_	tncs/src/tncs/exception/TNCCSProtocolNotSupportedException.h	29;"	d
TNCS_TNCCTNCSMESSAGEBASE64_H_	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageBase64.h	28;"	d
TNCS_TNCCTNCSMESSAGEXML_H_	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageXML.h	28;"	d
TNCS_TNCCTNCSMESSAGE_H_	tncs/src/tncs/iel/tnc1/TNCCTNCSMessage.h	28;"	d
TNCServer	vpn/naavpn/src/naavpn/TNCServer.cpp	/^TNCServer::TNCServer(boost::asio::io_service& io_service) :$/;"	f	class:tnc::TNCServer
TNCServer	vpn/naavpn/src/naavpn/TNCServer.h	/^class TNCServer: public tnc::ssl::Server {$/;"	c	namespace:tnc
TNCSession	vpn/naavpn/src/naavpn/TNCSession.cpp	/^TNCSession::TNCSession (boost::asio::io_service& io_service, boost::asio::ssl::context& context)$/;"	f	class:tnc::TNCSession
TNCSession	vpn/naavpn/src/naavpn/TNCSession.h	/^class TNCSession : public tnc::ssl::Session {$/;"	c	namespace:tnc
TNCUTIL_ABSTRACTIMUNIT_H_	imunit/src/imunit/AbstractIMUnit.h	31;"	d
TNC_ATTRIBUTEID_PREFERRED_LANGUAGE	shared/include/tcg/tnc/tncifimv.h	237;"	d
TNC_ATTRIBUTEID_REASON_LANGUAGE	shared/include/tcg/tnc/tncifimv.h	239;"	d
TNC_ATTRIBUTEID_REASON_STRING	shared/include/tcg/tnc/tncifimv.h	238;"	d
TNC_ATTRIBUTEID_USERNAME	shared/include/tcg/tnc/fhhaddon.h	77;"	d
TNC_AttributeID	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_UInt32 TNC_AttributeID;$/;"	t
TNC_BindFunctionPointer	imunit/src/imunit/IMUnitLibrary.h	/^typedef TNC_Result (*TNC_BindFunctionPointer)(TNC_IMUnitID id,$/;"	t	namespace:tncfhh::iml
TNC_BindFunctionPointer	shared/include/tcg/tnc/tncimunit.h	/^typedef TNC_Result (*TNC_BindFunctionPointer)($/;"	t
TNC_Buffer	shared/include/tcg/tnc/fhhaddon.h	/^typedef unsigned char TNC_Buffer;$/;"	t
TNC_Buffer	tncsim/src/TNCCSData.h	/^typedef unsigned char TNC_Buffer;$/;"	t	namespace:tncsim
TNC_BufferConstReference	shared/include/tcg/tnc/fhhaddon.h	/^typedef const unsigned char * TNC_BufferConstReference;$/;"	t
TNC_BufferReference	imcv/procwatcher/imc/src/ProcwatcherIMC.h	/^typedef unsigned char *TNC_BufferReference;$/;"	t
TNC_BufferReference	shared/include/tcg/tnc/tncifimc.h	/^typedef unsigned char *TNC_BufferReference;$/;"	t
TNC_BufferReference	shared/include/tcg/tnc/tncifimv.h	/^typedef unsigned char *TNC_BufferReference;$/;"	t
TNC_CONNECTIONID_ANY	shared/include/tcg/tnc/tncifimc.h	148;"	d
TNC_CONNECTIONID_ANY	shared/include/tcg/tnc/tncifimv.h	188;"	d
TNC_CONNECTION_STATE_ACCESS_ALLOWED	shared/include/tcg/tnc/tncifimc.h	154;"	d
TNC_CONNECTION_STATE_ACCESS_ALLOWED	shared/include/tcg/tnc/tncifimv.h	194;"	d
TNC_CONNECTION_STATE_ACCESS_ISOLATED	shared/include/tcg/tnc/tncifimc.h	155;"	d
TNC_CONNECTION_STATE_ACCESS_ISOLATED	shared/include/tcg/tnc/tncifimv.h	195;"	d
TNC_CONNECTION_STATE_ACCESS_NONE	shared/include/tcg/tnc/tncifimc.h	156;"	d
TNC_CONNECTION_STATE_ACCESS_NONE	shared/include/tcg/tnc/tncifimv.h	196;"	d
TNC_CONNECTION_STATE_CREATE	shared/include/tcg/tnc/tncifimc.h	152;"	d
TNC_CONNECTION_STATE_CREATE	shared/include/tcg/tnc/tncifimv.h	192;"	d
TNC_CONNECTION_STATE_DELETE	shared/include/tcg/tnc/tncifimc.h	157;"	d
TNC_CONNECTION_STATE_DELETE	shared/include/tcg/tnc/tncifimv.h	197;"	d
TNC_CONNECTION_STATE_HANDSHAKE	shared/include/tcg/tnc/tncifimc.h	153;"	d
TNC_CONNECTION_STATE_HANDSHAKE	shared/include/tcg/tnc/tncifimv.h	193;"	d
TNC_ConnectionID	shared/include/tcg/tnc/tncifimc.h	/^typedef TNC_UInt32 TNC_ConnectionID;$/;"	t
TNC_ConnectionID	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_UInt32 TNC_ConnectionID;$/;"	t
TNC_ConnectionState	shared/include/tcg/tnc/tncifimc.h	/^typedef TNC_UInt32 TNC_ConnectionState;$/;"	t
TNC_ConnectionState	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_UInt32 TNC_ConnectionState;$/;"	t
TNC_IFIMC_VERSION_1	shared/include/tcg/tnc/tncifimc.h	144;"	d
TNC_IFIMV_MAX_VERSION	tncs/src/tncs/iel/IMVProperties.cpp	42;"	d	file:
TNC_IFIMV_MIN_VERSION	tncs/src/tncs/iel/IMVProperties.cpp	43;"	d	file:
TNC_IFIMV_VERSION	imunit/src/imunit/imv/IMVLibrary.h	115;"	d
TNC_IFIMV_VERSION_1	shared/include/tcg/tnc/tncifimv.h	184;"	d
TNC_IFTNCCSSCHEMA_H_	shared/include/tcg/tnc/iftnccsschema.h	41;"	d
TNC_IF_TNCCS_SCHEMA	shared/include/tcg/tnc/iftnccsschema.h	43;"	d
TNC_IMCID	shared/include/tcg/tnc/tncifimc.h	/^typedef TNC_UInt32 TNC_IMCID;$/;"	t
TNC_IMC_API	shared/include/tcg/tnc/tncifimc.h	55;"	d
TNC_IMC_API	shared/include/tcg/tnc/tncifimc.h	57;"	d
TNC_IMC_API	shared/include/tcg/tnc/tncifimc.h	60;"	d
TNC_IMC_BatchEndingPointer	shared/include/tcg/tnc/tncifimc.h	/^typedef TNC_Result (*TNC_IMC_BatchEndingPointer)($/;"	t
TNC_IMC_BeginHandshakePointer	shared/include/tcg/tnc/tncifimc.h	/^typedef TNC_Result (*TNC_IMC_BeginHandshakePointer)($/;"	t
TNC_IMC_InitializePointer	shared/include/tcg/tnc/tncifimc.h	/^typedef TNC_Result (*TNC_IMC_InitializePointer)($/;"	t
TNC_IMC_NotifyConnectionChangePointer	shared/include/tcg/tnc/tncifimc.h	/^typedef TNC_Result (*TNC_IMC_NotifyConnectionChangePointer)($/;"	t
TNC_IMC_ProvideBindFunctionPointer	shared/include/tcg/tnc/tncifimc.h	/^typedef TNC_Result (*TNC_IMC_ProvideBindFunctionPointer)($/;"	t
TNC_IMC_ReceiveMessagePointer	shared/include/tcg/tnc/tncifimc.h	/^typedef TNC_Result (*TNC_IMC_ReceiveMessagePointer)($/;"	t
TNC_IMC_TerminatePointer	shared/include/tcg/tnc/tncifimc.h	/^typedef TNC_Result (*TNC_IMC_TerminatePointer)($/;"	t
TNC_IMUNIT_H_	shared/include/tcg/tnc/tncimunit.h	42;"	d
TNC_IMUnitID	imunit/src/imunit/IMUnitLibrary.h	/^typedef unsigned long TNC_IMUnitID;$/;"	t	namespace:tncfhh::iml
TNC_IMUnitID	shared/include/tcg/tnc/tncimunit.h	/^typedef unsigned long TNC_IMUnitID;$/;"	t
TNC_IMVID	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_UInt32 TNC_IMVID;$/;"	t
TNC_IMV_ACTION_RECOMMENDATION_ALLOW	shared/include/tcg/tnc/tncifimv.h	213;"	d
TNC_IMV_ACTION_RECOMMENDATION_ISOLATE	shared/include/tcg/tnc/tncifimv.h	215;"	d
TNC_IMV_ACTION_RECOMMENDATION_NO_ACCESS	shared/include/tcg/tnc/tncifimv.h	214;"	d
TNC_IMV_ACTION_RECOMMENDATION_NO_RECOMMENDATION	shared/include/tcg/tnc/tncifimv.h	216;"	d
TNC_IMV_API	naaeap/src/naaeap/naaeap.h	59;"	d
TNC_IMV_API	naaeap/src/naaeap/naaeap.h	61;"	d
TNC_IMV_API	naaeap/src/naaeap/naaeap.h	64;"	d
TNC_IMV_API	shared/include/tcg/tnc/fhhaddon.h	56;"	d
TNC_IMV_API	shared/include/tcg/tnc/fhhaddon.h	58;"	d
TNC_IMV_API	shared/include/tcg/tnc/fhhaddon.h	61;"	d
TNC_IMV_API	shared/include/tcg/tnc/tncifimv.h	54;"	d
TNC_IMV_API	shared/include/tcg/tnc/tncifimv.h	56;"	d
TNC_IMV_API	shared/include/tcg/tnc/tncifimv.h	59;"	d
TNC_IMV_Action_Recommendation	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_UInt32 TNC_IMV_Action_Recommendation;$/;"	t
TNC_IMV_BATCH_ENDING_NAME	shared/include/tcg/tnc/tncifimv.h	326;"	d
TNC_IMV_BatchEndingPointer	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_Result (*TNC_IMV_BatchEndingPointer)($/;"	t
TNC_IMV_EVALUATION_RESULT_COMPLIANT	shared/include/tcg/tnc/tncifimv.h	220;"	d
TNC_IMV_EVALUATION_RESULT_DONT_KNOW	shared/include/tcg/tnc/tncifimv.h	224;"	d
TNC_IMV_EVALUATION_RESULT_ERROR	shared/include/tcg/tnc/tncifimv.h	223;"	d
TNC_IMV_EVALUATION_RESULT_NONCOMPLIANT_MAJOR	shared/include/tcg/tnc/tncifimv.h	222;"	d
TNC_IMV_EVALUATION_RESULT_NONCOMPLIANT_MINOR	shared/include/tcg/tnc/tncifimv.h	221;"	d
TNC_IMV_Evaluation_Result	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_UInt32 TNC_IMV_Evaluation_Result;$/;"	t
TNC_IMV_INITIALIZE_NAME	shared/include/tcg/tnc/tncifimv.h	322;"	d
TNC_IMV_InitializePointer	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_Result (*TNC_IMV_InitializePointer)($/;"	t
TNC_IMV_NOTIFY_CONNECTION_CHANGE_NAME	shared/include/tcg/tnc/tncifimv.h	323;"	d
TNC_IMV_NotifyConnectionChangePointer	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_Result (*TNC_IMV_NotifyConnectionChangePointer)($/;"	t
TNC_IMV_PROVIDE_BIND_FUNCTION_NAME	shared/include/tcg/tnc/tncifimv.h	328;"	d
TNC_IMV_ProvideBindFunctionPointer	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_Result (*TNC_IMV_ProvideBindFunctionPointer)($/;"	t
TNC_IMV_RECEIVE_MESSAGE_LONG_NAME	shared/include/tcg/tnc/tncifimv.h	332;"	d
TNC_IMV_RECEIVE_MESSAGE_NAME	shared/include/tcg/tnc/tncifimv.h	324;"	d
TNC_IMV_RECEIVE_MESSAGE_SOH_NAME	shared/include/tcg/tnc/tncifimv.h	331;"	d
TNC_IMV_ReceiveMessageLongPointer	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_Result (*TNC_IMV_ReceiveMessageLongPointer)($/;"	t
TNC_IMV_ReceiveMessagePointer	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_Result (*TNC_IMV_ReceiveMessagePointer)($/;"	t
TNC_IMV_ReceiveMessageSOHPointer	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_Result (*TNC_IMV_ReceiveMessageSOHPointer)($/;"	t
TNC_IMV_SOLICIT_RECOMMENDATION_NAME	shared/include/tcg/tnc/tncifimv.h	325;"	d
TNC_IMV_SolicitRecommendationPointer	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_Result (*TNC_IMV_SolicitRecommendationPointer)($/;"	t
TNC_IMV_TERMINATE_NAME	shared/include/tcg/tnc/tncifimv.h	327;"	d
TNC_IMV_TerminatePointer	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_Result (*TNC_IMV_TerminatePointer)($/;"	t
TNC_MESSAGETYPE_FHH_ATTESTATION	imcv/attestation/imc/src/AttestationIMCLibrary.h	51;"	d
TNC_MESSAGETYPE_FHH_ATTESTATION	imcv/attestation/imv/src/AttestationIMVLibrary.h	57;"	d
TNC_MESSAGETYPE_FHH_CLAMAV	imcv/clamav/imc/src/ClamavIMCLibrary.h	38;"	d
TNC_MESSAGETYPE_FHH_CLAMAV	imcv/clamav/imv/src/ClamavIMVLibrary.h	38;"	d
TNC_MESSAGETYPE_FHH_DUMMY	imcv/dummy/imc/src/DummyIMCLibrary.h	38;"	d
TNC_MESSAGETYPE_FHH_DUMMY	imcv/dummy/imv/src/DummyIMVLibrary.h	35;"	d
TNC_MESSAGETYPE_FHH_HOSTSCANNER	imcv/hostscanner/imc/src/HostScannerIMCLibrary.h	37;"	d
TNC_MESSAGETYPE_FHH_HOSTSCANNER	imcv/hostscanner/imv/src/HostScannerIMVLibrary.h	37;"	d
TNC_MESSAGETYPE_FHH_PLATID	imcv/platid/imc/src/PlatidIMCLibrary.h	50;"	d
TNC_MESSAGETYPE_FHH_PLATID	imcv/platid/imv/src/PlatidIMVLibrary.h	60;"	d
TNC_MessageSubtype	shared/include/tcg/tnc/tncifimc.h	/^typedef TNC_UInt32 TNC_MessageSubtype;$/;"	t
TNC_MessageSubtype	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_UInt32 TNC_MessageSubtype;$/;"	t
TNC_MessageType	shared/include/tcg/tnc/tncifimc.h	/^typedef TNC_UInt32 TNC_MessageType;$/;"	t
TNC_MessageType	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_UInt32 TNC_MessageType;$/;"	t
TNC_MessageTypeList	shared/include/tcg/tnc/tncifimc.h	/^typedef TNC_MessageType *TNC_MessageTypeList;$/;"	t
TNC_MessageTypeList	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_MessageType *TNC_MessageTypeList;$/;"	t
TNC_PEPD_PORT	vpn/vpnpep/src/vpnpep/PEPServer.h	/^const short TNC_PEPD_PORT = 12346;$/;"	m	namespace:tnc
TNC_RESULT_ALREADY_INITIALIZED	shared/include/tcg/tnc/tncifimc.h	132;"	d
TNC_RESULT_ALREADY_INITIALIZED	shared/include/tcg/tnc/tncifimv.h	172;"	d
TNC_RESULT_CANT_RESPOND	shared/include/tcg/tnc/tncifimc.h	137;"	d
TNC_RESULT_CANT_RETRY	shared/include/tcg/tnc/tncifimc.h	134;"	d
TNC_RESULT_CANT_RETRY	shared/include/tcg/tnc/tncifimv.h	174;"	d
TNC_RESULT_FATAL	shared/include/tcg/tnc/tncifimc.h	140;"	d
TNC_RESULT_FATAL	shared/include/tcg/tnc/tncifimv.h	180;"	d
TNC_RESULT_ILLEGAL_OPERATION	shared/include/tcg/tnc/tncifimc.h	138;"	d
TNC_RESULT_ILLEGAL_OPERATION	shared/include/tcg/tnc/tncifimv.h	178;"	d
TNC_RESULT_INVALID_PARAMETER	shared/include/tcg/tnc/tncifimc.h	136;"	d
TNC_RESULT_INVALID_PARAMETER	shared/include/tcg/tnc/tncifimv.h	176;"	d
TNC_RESULT_NOT_INITIALIZED	shared/include/tcg/tnc/tncifimc.h	131;"	d
TNC_RESULT_NOT_INITIALIZED	shared/include/tcg/tnc/tncifimv.h	171;"	d
TNC_RESULT_NO_COMMON_VERSION	shared/include/tcg/tnc/tncifimc.h	133;"	d
TNC_RESULT_NO_COMMON_VERSION	shared/include/tcg/tnc/tncifimv.h	173;"	d
TNC_RESULT_OTHER	shared/include/tcg/tnc/tncifimc.h	139;"	d
TNC_RESULT_OTHER	shared/include/tcg/tnc/tncifimv.h	179;"	d
TNC_RESULT_SUCCESS	shared/include/tcg/tnc/tncifimc.h	130;"	d
TNC_RESULT_SUCCESS	shared/include/tcg/tnc/tncifimv.h	170;"	d
TNC_RESULT_WONT_RETRY	shared/include/tcg/tnc/tncifimc.h	135;"	d
TNC_RESULT_WONT_RETRY	shared/include/tcg/tnc/tncifimv.h	175;"	d
TNC_RETRY_REASON_IMC_INFORMATIONAL_EVENT	shared/include/tcg/tnc/tncifimc.h	163;"	d
TNC_RETRY_REASON_IMC_PERIODIC	shared/include/tcg/tnc/tncifimc.h	164;"	d
TNC_RETRY_REASON_IMC_REMEDIATION_COMPLETE	shared/include/tcg/tnc/tncifimc.h	161;"	d
TNC_RETRY_REASON_IMC_SERIOUS_EVENT	shared/include/tcg/tnc/tncifimc.h	162;"	d
TNC_RETRY_REASON_IMV_IMPORTANT_POLICY_CHANGE	shared/include/tcg/tnc/tncifimv.h	205;"	d
TNC_RETRY_REASON_IMV_MINOR_EVENT	shared/include/tcg/tnc/tncifimv.h	208;"	d
TNC_RETRY_REASON_IMV_MINOR_POLICY_CHANGE	shared/include/tcg/tnc/tncifimv.h	206;"	d
TNC_RETRY_REASON_IMV_PERIODIC	shared/include/tcg/tnc/tncifimv.h	209;"	d
TNC_RETRY_REASON_IMV_SERIOUS_EVENT	shared/include/tcg/tnc/tncifimv.h	207;"	d
TNC_Result	shared/include/tcg/tnc/tncifimc.h	/^typedef TNC_UInt32 TNC_Result;$/;"	t
TNC_Result	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_UInt32 TNC_Result;$/;"	t
TNC_RetryReason	shared/include/tcg/tnc/tncifimc.h	/^typedef TNC_UInt32 TNC_RetryReason;$/;"	t
TNC_RetryReason	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_UInt32 TNC_RetryReason;$/;"	t
TNC_SUBTYPE_ANY	shared/include/tcg/tnc/tncifimc.h	178;"	d
TNC_SUBTYPE_ANY	shared/include/tcg/tnc/tncifimv.h	233;"	d
TNC_SUBTYPE_FHH_ATTESTATION	imcv/attestation/imc/src/AttestationIMCLibrary.h	50;"	d
TNC_SUBTYPE_FHH_ATTESTATION	imcv/attestation/imv/src/AttestationIMVLibrary.h	56;"	d
TNC_SUBTYPE_FHH_CLAMAV	imcv/clamav/imc/src/ClamavIMCLibrary.h	36;"	d
TNC_SUBTYPE_FHH_CLAMAV	imcv/clamav/imv/src/ClamavIMVLibrary.h	36;"	d
TNC_SUBTYPE_FHH_DUMMY	imcv/dummy/imc/src/DummyIMCLibrary.h	36;"	d
TNC_SUBTYPE_FHH_DUMMY	imcv/dummy/imv/src/DummyIMVLibrary.h	34;"	d
TNC_SUBTYPE_FHH_HOSTSCANNER	imcv/hostscanner/imc/src/HostScannerIMCLibrary.h	35;"	d
TNC_SUBTYPE_FHH_HOSTSCANNER	imcv/hostscanner/imv/src/HostScannerIMVLibrary.h	35;"	d
TNC_SUBTYPE_FHH_PLATID	imcv/platid/imc/src/PlatidIMCLibrary.h	49;"	d
TNC_SUBTYPE_FHH_PLATID	imcv/platid/imv/src/PlatidIMVLibrary.h	59;"	d
TNC_TNCC_BindFunctionPointer	shared/include/tcg/tnc/tncifimc.h	/^typedef TNC_Result (*TNC_TNCC_BindFunctionPointer)($/;"	t
TNC_TNCC_ReportMessageTypesPointer	shared/include/tcg/tnc/tncifimc.h	/^typedef TNC_Result (*TNC_TNCC_ReportMessageTypesPointer)($/;"	t
TNC_TNCC_RequestHandshakeRetryPointer	shared/include/tcg/tnc/tncifimc.h	/^typedef TNC_Result (*TNC_TNCC_RequestHandshakeRetryPointer)($/;"	t
TNC_TNCC_SendBatch	tncsim/src/client/libtnc/LibtncTNCC.cpp	/^TNC_Result TNC_TNCC_SendBatch($/;"	f
TNC_TNCC_SendBatch	vpn/vpnclient/src/vpnclient/LibTNCClient.cpp	/^TNC_Result TNC_TNCC_SendBatch(libtnc_tncc_connection *conn, const char *buffer,$/;"	f
TNC_TNCC_SendMessagePointer	shared/include/tcg/tnc/tncifimc.h	/^typedef TNC_Result (*TNC_TNCC_SendMessagePointer)($/;"	t
TNC_TNCS_BindFunction	tncs/src/tncs/iel/IFTNCSImpl.cpp	/^TNC_Result TNC_TNCS_BindFunction(TNC_IMVID imvID, char *functionName, \/*out*\/ void **pOutfunctionPointer)$/;"	f
TNC_TNCS_BindFunctionPointer	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_Result (*TNC_TNCS_BindFunctionPointer)($/;"	t
TNC_TNCS_GetAttribute	tncs/src/tncs/iel/IFTNCSImpl.cpp	/^TNC_Result TNC_TNCS_GetAttribute(TNC_IMVID imvID, TNC_ConnectionID connectionID, TNC_AttributeID attributeID, TNC_UInt32 bufferLength, \/*out*\/ TNC_BufferReference buffer, \/*out*\/ TNC_UInt32 *pOutValueLength)$/;"	f
TNC_TNCS_GetAttributePointer	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_Result (*TNC_TNCS_GetAttributePointer)($/;"	t
TNC_TNCS_ProvideRecommendation	tncs/src/tncs/iel/IFTNCSImpl.cpp	/^TNC_Result TNC_TNCS_ProvideRecommendation(TNC_IMVID imvID, TNC_ConnectionID connectionID, TNC_IMV_Action_Recommendation recommendation, TNC_IMV_Evaluation_Result evaluation)$/;"	f
TNC_TNCS_ProvideRecommendationPointer	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_Result (*TNC_TNCS_ProvideRecommendationPointer)($/;"	t
TNC_TNCS_ReportMessageTypes	tncs/src/tncs/iel/IFTNCSImpl.cpp	/^TNC_Result TNC_TNCS_ReportMessageTypes(TNC_IMVID imvID, TNC_MessageTypeList supportedTypes, TNC_UInt32 typeCount)$/;"	f
TNC_TNCS_ReportMessageTypesPointer	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_Result (*TNC_TNCS_ReportMessageTypesPointer)($/;"	t
TNC_TNCS_RequestHandshakeRetry	tncs/src/tncs/iel/IFTNCSImpl.cpp	/^TNC_Result TNC_TNCS_RequestHandshakeRetry(TNC_IMVID imvID, TNC_ConnectionID connectionID, TNC_RetryReason reason)$/;"	f
TNC_TNCS_RequestHandshakeRetryPointer	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_Result (*TNC_TNCS_RequestHandshakeRetryPointer)($/;"	t
TNC_TNCS_SendBatch	tncsim/src/server/libtnc/LibtncTNCS.cpp	/^TNC_Result TNC_TNCS_SendBatch($/;"	f
TNC_TNCS_SendBatch	vpn/vpnclient/src/vpnclient/LibTNCClient.cpp	/^TNC_Result TNC_TNCS_SendBatch( libtnc_tncc_connection *conn, const char *buffer,$/;"	f
TNC_TNCS_SendMessage	tncs/src/tncs/iel/IFTNCSImpl.cpp	/^TNC_Result TNC_TNCS_SendMessage( TNC_IMVID imvID, TNC_ConnectionID connectionID, TNC_BufferReference message, TNC_UInt32 messageLength, TNC_MessageType messageType)$/;"	f
TNC_TNCS_SendMessagePointer	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_Result (*TNC_TNCS_SendMessagePointer)($/;"	t
TNC_TNCS_SetAttribute	tncs/src/tncs/iel/IFTNCSImpl.cpp	/^TNC_Result TNC_TNCS_SetAttribute(TNC_IMVID imvID, TNC_ConnectionID connectionID, TNC_AttributeID attributeID, TNC_UInt32 bufferLength, TNC_BufferReference buffer)$/;"	f
TNC_TNCS_SetAttributePointer	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_Result (*TNC_TNCS_SetAttributePointer)($/;"	t
TNC_UInt32	shared/include/tcg/tnc/tncifimc.h	/^typedef unsigned long TNC_UInt32;$/;"	t
TNC_UInt32	shared/include/tcg/tnc/tncifimv.h	/^typedef unsigned long TNC_UInt32;$/;"	t
TNC_VENDORID_ANY	shared/include/tcg/tnc/tncifimc.h	174;"	d
TNC_VENDORID_ANY	shared/include/tcg/tnc/tncifimv.h	229;"	d
TNC_VENDORID_FHH	imcv/attestation/imc/src/AttestationIMCLibrary.h	48;"	d
TNC_VENDORID_FHH	imcv/attestation/imv/src/AttestationIMVLibrary.h	55;"	d
TNC_VENDORID_FHH	imcv/clamav/imc/src/ClamavIMCLibrary.h	34;"	d
TNC_VENDORID_FHH	imcv/clamav/imv/src/ClamavIMVLibrary.h	34;"	d
TNC_VENDORID_FHH	imcv/dummy/imc/src/DummyIMCLibrary.h	34;"	d
TNC_VENDORID_FHH	imcv/dummy/imv/src/DummyIMVLibrary.h	33;"	d
TNC_VENDORID_FHH	imcv/hostscanner/imc/src/HostScannerIMCLibrary.h	33;"	d
TNC_VENDORID_FHH	imcv/hostscanner/imv/src/HostScannerIMVLibrary.h	33;"	d
TNC_VENDORID_FHH	imcv/platid/imc/src/PlatidIMCLibrary.h	47;"	d
TNC_VENDORID_FHH	imcv/platid/imv/src/PlatidIMVLibrary.h	57;"	d
TNC_VENDORID_TCG	shared/include/tcg/tnc/tncifimc.h	173;"	d
TNC_VENDORID_TCG	shared/include/tcg/tnc/tncifimv.h	228;"	d
TNC_VendorID	shared/include/tcg/tnc/tncifimc.h	/^typedef TNC_UInt32 TNC_VendorID;$/;"	t
TNC_VendorID	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_UInt32 TNC_VendorID;$/;"	t
TNC_Version	shared/include/tcg/tnc/tncifimc.h	/^typedef TNC_UInt32 TNC_Version;$/;"	t
TNC_Version	shared/include/tcg/tnc/tncifimv.h	/^typedef TNC_UInt32 TNC_Version;$/;"	t
TPM_CMD_PIN	imcv/platid/imc/src/PlatidIMC.h	62;"	d
TPM_CMD_PIN	imcv/platid/imc/src/testing.c	8;"	d	file:
TncfhhTNCS	tncsim/src/server/tncfhh/TncfhhTNCS.cpp	/^TncfhhTNCS::TncfhhTNCS(std::string &tncConfig)$/;"	f	class:tncsim::server::tncfhh::TncfhhTNCS
TncfhhTNCS	tncsim/src/server/tncfhh/TncfhhTNCS.h	/^class TncfhhTNCS: public tncsim::server::AbstractTNCS {$/;"	c	namespace:tncsim::server::tncfhh
TncfhhTNCS_H_	tncsim/src/server/tncfhh/TncfhhTNCS.h	29;"	d
UDP	imcv/hostscanner/imc/src/HostScannerIMC.h	/^	enum Protocol {TCP, UDP};$/;"	e	enum:HostScannerIMC::Protocol
UDP	imcv/hostscanner/imv/src/HostScannerIMV.h	/^    	enum Protocol {TCP, UDP};$/;"	e	enum:HostScannerIMV::Protocol
UNKNOWN	imcv/clamav/imc/src/ClamavIMCLibrary.h	/^		UNKNOWN,$/;"	e	enum:ClamavIMCLibrary::OperationalStatus
Used sources	doc/freeradius-eapttls-patch/overview.tex	/^\\subsubsection*{Used sources}$/;"	b
VENDOR_ID	imcv/example/imc/src.bk/ExampleIMCLibrary.h	34;"	d
VENDOR_ID	imcv/example/imc/src/ExampleIMCLibrary.h	34;"	d
VENDOR_ID	imcv/example/imv/src.bk/ExampleIMVLibrary.h	34;"	d
VENDOR_ID	imcv/example/imv/src/ExampleIMVLibrary.h	34;"	d
VENDOR_ID	imcv/procwatcher/imc/src.bk/ExampleIMCLibrary.h	34;"	d
VENDOR_ID	imcv/procwatcher/imc/src/ProcwatcherIMCLibrary.h	34;"	d
VENDOR_ID	imcv/procwatcher/imv/src.bk/ExampleIMVLibrary.h	34;"	d
VENDOR_ID	imcv/procwatcher/imv/src/ProcwatcherIMVLibrary.h	41;"	d
VERSIONEXCEPTION_H_	vpn/libtncvpn/src/tncvpn/ifttls/exceptions/VersionException.h	35;"	d
VERSION_REQUEST_MESSAGE_H_	vpn/libtncvpn/src/tncvpn/ifttls/VersionRequestMessage.h	29;"	d
VERSION_RESPONSE_MESSAGE_H_	vpn/libtncvpn/src/tncvpn/ifttls/VersionResponseMessage.h	29;"	d
Version	imcv/clamav/imv/src/ClamavIMV.h	/^		Version,$/;"	e	enum:ClamavIMV::Key
VersionException	vpn/libtncvpn/src/tncvpn/ifttls/exceptions/VersionException.cpp	/^VersionException::VersionException(std::string msg) : errorMsg(msg)$/;"	f	class:VersionException
VersionException	vpn/libtncvpn/src/tncvpn/ifttls/exceptions/VersionException.h	/^class VersionException {$/;"	c
VersionRequestMessage	vpn/libtncvpn/src/tncvpn/ifttls/VersionRequestMessage.h	/^	VersionRequestMessage() :$/;"	f	class:ifttls::VersionRequestMessage
VersionRequestMessage	vpn/libtncvpn/src/tncvpn/ifttls/VersionRequestMessage.h	/^	VersionRequestMessage(char* msg)$/;"	f	class:ifttls::VersionRequestMessage
VersionRequestMessage	vpn/libtncvpn/src/tncvpn/ifttls/VersionRequestMessage.h	/^	VersionRequestMessage(uint8_t min, uint8_t max, uint8_t pref) :$/;"	f	class:ifttls::VersionRequestMessage
VersionRequestMessage	vpn/libtncvpn/src/tncvpn/ifttls/VersionRequestMessage.h	/^	VersionRequestMessage(uint8_t v) :$/;"	f	class:ifttls::VersionRequestMessage
VersionRequestMessage	vpn/libtncvpn/src/tncvpn/ifttls/VersionRequestMessage.h	/^class VersionRequestMessage {$/;"	c	namespace:ifttls
VersionResponseMessage	vpn/libtncvpn/src/tncvpn/ifttls/VersionResponseMessage.h	/^	VersionResponseMessage() : version(1)$/;"	f	class:ifttls::VersionResponseMessage
VersionResponseMessage	vpn/libtncvpn/src/tncvpn/ifttls/VersionResponseMessage.h	/^	VersionResponseMessage(char* msg)$/;"	f	class:ifttls::VersionResponseMessage
VersionResponseMessage	vpn/libtncvpn/src/tncvpn/ifttls/VersionResponseMessage.h	/^	VersionResponseMessage(uint8_t version) : version(version)$/;"	f	class:ifttls::VersionResponseMessage
VersionResponseMessage	vpn/libtncvpn/src/tncvpn/ifttls/VersionResponseMessage.h	/^class VersionResponseMessage {$/;"	c	namespace:ifttls
XACMLCONSTANTS_H_	tncxacml/src/tncxacml/XACMLConstants.h	29;"	d
XACMLConstants	tncxacml/src/tncxacml/XACMLConstants.h	/^class XACMLConstants {$/;"	c	namespace:tncfhh::iml
XACMLHELPER_H_	tncxacml/src/tncxacml/XACMLHelper.h	29;"	d
XACMLHelper	tncxacml/src/tncxacml/XACMLHelper.cpp	/^XACMLHelper::XACMLHelper() {$/;"	f	class:tncfhh::iml::XACMLHelper
XACMLHelper	tncxacml/src/tncxacml/XACMLHelper.h	/^class XACMLHelper {$/;"	c	namespace:tncfhh::iml
XERCESSTRING_H_	tncutil/src/tncutil/XercesString.h	28;"	d
XercesInit	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^TNCCSBatch::XercesInit::XercesInit() {$/;"	f	class:tncfhh::iel::tnc1::TNCCSBatch::XercesInit
XercesInit	tncs/src/tncs/iel/tnc1/TNCCSBatch.h	/^	class XercesInit {$/;"	c	class:tncfhh::iel::tnc1::TNCCSBatch
XercesInit	tncxacml/src/tncxacml/XACMLHelper.cpp	/^XACMLHelper::XercesInit::XercesInit() {$/;"	f	class:tncfhh::iml::XACMLHelper::XercesInit
XercesInit	tncxacml/src/tncxacml/XACMLHelper.h	/^	class XercesInit {$/;"	c	class:tncfhh::iml::XACMLHelper
XercesString	tncutil/src/tncutil/XercesString.cpp	/^XercesString::XercesString(const XMLCh * xstr)$/;"	f	class:tncfhh::XercesString
XercesString	tncutil/src/tncutil/XercesString.cpp	/^XercesString::XercesString(const char * str)$/;"	f	class:tncfhh::XercesString
XercesString	tncutil/src/tncutil/XercesString.cpp	/^XercesString::XercesString(const std::string & str)$/;"	f	class:tncfhh::XercesString
XercesString	tncutil/src/tncutil/XercesString.h	/^class XercesString : public std::basic_string<XMLCh>$/;"	c	namespace:tncfhh
_HOSTSCANNERIMV_H_	imcv/hostscanner/imv/src/HostScannerIMV.h	29;"	d
_TNCIFIMC_H	shared/include/tcg/tnc/tncifimc.h	47;"	d
_TNCIFIMV_H	shared/include/tcg/tnc/tncifimv.h	46;"	d
_want_read	vpn/vpnclient/src/vpnclient/TNCMockClient.h	/^	bool _want_read;$/;"	m	class:TNCMockClient
_want_write	vpn/vpnclient/src/vpnclient/TNCMockClient.h	/^	bool _want_write;$/;"	m	class:TNCMockClient
accept	vpn/naavpn/src/naavpn/TNCServer.cpp	/^void TNCServer::accept()  {$/;"	f	class:tnc::TNCServer
accept	vpn/vpnpep/src/vpnpep/PEPServer.h	/^	void accept() {$/;"	f	class:tnc::PEPServer
acceptor_	vpn/libtncvpn/src/tncvpn/ssl/Server.h	/^    boost::asio::ip::tcp::acceptor acceptor_;$/;"	m	class:tnc::ssl::Server
actionRecommendation	imunit/src/imunit/imv/AbstractIMV.h	/^    	TNC_IMV_Action_Recommendation actionRecommendation;$/;"	m	class:tncfhh::iml::AbstractIMV
active	naaeap/src/naaeap/logic/Fragmentation.h	/^	bool active;$/;"	m	class:tncfhh::nal::Fragmentation
activeTnccsProtocolHandler	tncs/src/tncs/iel/Connection.h	/^	AbstractTNCCSProtocol *activeTnccsProtocolHandler;$/;"	m	class:tncfhh::iel::Connection
add	imcv/example/imc/src/ExampleIMC.cpp	/^void ExampleIMC::Policy::add(std::string path){paths.push_back(path);}$/;"	f	class:ExampleIMC::Policy
add	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^void ProcwatcherIMC::Policy::add(std::string path){paths.push_back(path);}$/;"	f	class:ProcwatcherIMC::Policy
add	vpn/vpnpep/src/vpnpep/EndpointDB.cpp	/^EndpointDB::add(Endpoint *ep) {$/;"	f	class:tnc::EndpointDB
addAttributeToSubject	tncxacml/src/tncxacml/XACMLHelper.cpp	/^void XACMLHelper::addAttributeToSubject(\/*in*\/xercesc::DOMElement* subject, \/*in*\/$/;"	f	class:tncfhh::iml::XACMLHelper
addCertFromConfigLine	imcv/platid/imv/src/FileCertManager.cpp	/^int FileCertManager::addCertFromConfigLine(std::string line)$/;"	f	class:FileCertManager
addConfigurationFile	tncutil/src/tncutil/Configuration.cpp	/^void Configuration::addConfigurationFile(std::string filename) {$/;"	f	class:tncfhh::Configuration
addEapTncFragment	naaeap/src/naaeap/data/EapTncBuffer.cpp	/^void EapTncBuffer::addEapTncFragment(const EapTncFragment &fragment, bool isLast) throw (std::domain_error)$/;"	f	class:tncfhh::nal::EapTncBuffer
addElement	vpn/libtncvpn/src/tncvpn/libtnac/AllowDenyPacket.cpp	/^AllowDenyPacket::addElement(const void* element, int size) {$/;"	f	class:pep::AllowDenyPacket
addIMCIMVMessage	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^void TNCCSBatch::addIMCIMVMessage(IMCIMVMessage * imcImvMessage)$/;"	f	class:tncfhh::iel::tnc1::TNCCSBatch
addImcImvMessage	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^void TNCCSBatch::addImcImvMessage(xercesc::DOMElement & imcImvMessage) throw (TNCCSProtocolNotSupportedException)$/;"	f	class:tncfhh::iel::tnc1::TNCCSBatch
addMessageType	imunit/src/imunit/IMUnitLibrary.cpp	/^void IMUnitLibrary::addMessageType(TNC_MessageType messageType)$/;"	f	class:tncfhh::iml::IMUnitLibrary
addMessageType	imunit/src/imunit/IMUnitLibrary.cpp	/^void IMUnitLibrary::addMessageType(TNC_VendorID vendorId, TNC_MessageSubtype messageSubtype)$/;"	f	class:tncfhh::iml::IMUnitLibrary
addResourceActionEnvironmentToRequest	tncxacml/src/tncxacml/XACMLHelper.cpp	/^void XACMLHelper::addResourceActionEnvironmentToRequest($/;"	f	class:tncfhh::iml::XACMLHelper
addSubjectToRequest	tncxacml/src/tncxacml/XACMLHelper.cpp	/^void XACMLHelper::addSubjectToRequest(\/*in*\/xercesc::DOMDocument* request, \/*in*\/$/;"	f	class:tncfhh::iml::XACMLHelper
addTNCCTNCSMessage	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^void TNCCSBatch::addTNCCTNCSMessage(TNCCTNCSMessage * tnccTncsMessage)$/;"	f	class:tncfhh::iel::tnc1::TNCCSBatch
addTnccTncsMessage	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^void TNCCSBatch::addTnccTncsMessage(xercesc::DOMElement & tnccTncsMessage) throw (TNCCSProtocolNotSupportedException)$/;"	f	class:tncfhh::iel::tnc1::TNCCSBatch
addToBuffer	vpn/libtncvpn/src/tncvpn/libtnac/TLVBuffer.h	/^	void addToBuffer(char* data, unsigned len) {$/;"	f	class:TLVBuffer
address	vpn/libtncvpn/src/tncvpn/iel/Endpoint.h	/^	boost::asio::ip::address address;$/;"	m	class:tnc::Endpoint
address	vpn/naavpn/src/naavpn/PEPClient.h	/^	boost::asio::ip::address *address;$/;"	m	class:tnc::PEPClient
aikBlob	imcv/attestation/imc/src/AttestationIMC.h	/^	TNC_BufferReference		aikBlob;$/;"	m	class:AttestationIMC
aikBlob	imcv/procwatcher/imc/src/ProcwatcherIMC.h	/^    TNC_BufferReference     aikBlob;$/;"	m	class:ProcwatcherIMC
aikBlobFile	imcv/attestation/imc/src/AttestationIMC.h	/^	string				aikBlobFile;$/;"	m	class:AttestationIMC
aikBlobFile	imcv/procwatcher/imc/src/ProcwatcherIMC.h	/^    string              aikBlobFile;$/;"	m	class:ProcwatcherIMC
aikBlobLength	imcv/attestation/imc/src/AttestationIMC.h	/^	TNC_UInt32			aikBlobLength;$/;"	m	class:AttestationIMC
aikBlobLength	imcv/procwatcher/imc/src/ProcwatcherIMC.h	/^    TNC_UInt32          aikBlobLength;$/;"	m	class:ProcwatcherIMC
allEapTncFragments	naaeap/src/naaeap/logic/Fragmentation.h	/^	std::map<TNC_ConnectionID, std::queue<EapTncFragment *> > allEapTncFragments;$/;"	m	class:tncfhh::nal::Fragmentation
allTNCCSBatchBuffers	naaeap/src/naaeap/logic/Defragmentation.h	/^	std::map<TNC_ConnectionID, EapTncBuffer*> allTNCCSBatchBuffers;$/;"	m	class:tncfhh::nal::Defragmentation
allocateMessageBuffer	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.cpp	/^void IFTTLSConnection::allocateMessageBuffer()$/;"	f	class:ifttls::IFTTLSConnection
attribute_id_action_id	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_action_id = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_action_id	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_action_id;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_attribute_installed_packages_packages	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_attribute_installed_packages_packages = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_attribute_installed_packages_packages	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_attribute_installed_packages_packages;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_attribute_numeric_version_build_number	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_attribute_numeric_version_build_number = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_attribute_numeric_version_build_number	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_attribute_numeric_version_build_number;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_attribute_numeric_version_major_version	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_attribute_numeric_version_major_version = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_attribute_numeric_version_major_version	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_attribute_numeric_version_major_version;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_attribute_numeric_version_minor_version	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_attribute_numeric_version_minor_version = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_attribute_numeric_version_minor_version	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_attribute_numeric_version_minor_version;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_attribute_numeric_version_service_pack_major	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_attribute_numeric_version_service_pack_major = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_attribute_numeric_version_service_pack_major	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_attribute_numeric_version_service_pack_major;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_attribute_numeric_version_service_pack_minor	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_attribute_numeric_version_service_pack_minor = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_attribute_numeric_version_service_pack_minor	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_attribute_numeric_version_service_pack_minor;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_attribute_string_version_configuration_version_number	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_attribute_string_version_configuration_version_number = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_attribute_string_version_configuration_version_number	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_attribute_string_version_configuration_version_number;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_attribute_string_version_internal_build_number	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_attribute_string_version_internal_build_number = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_attribute_string_version_internal_build_number	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_attribute_string_version_internal_build_number;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_attribute_string_version_product_version_number	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_attribute_string_version_product_version_number = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_attribute_string_version_product_version_number	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_attribute_string_version_product_version_number;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_attribute_type	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_attribute_type = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_attribute_type	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_attribute_type;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_attribute_vendor_id	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_attribute_vendor_id = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_attribute_vendor_id	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_attribute_vendor_id;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_component_recommendation_postfix	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_component_recommendation_postfix = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_component_recommendation_postfix	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_component_recommendation_postfix;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_component_recommendation_prefix	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_component_recommendation_prefix = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_component_recommendation_prefix	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_component_recommendation_prefix;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_component_subtype	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_component_subtype = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_component_subtype	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_component_subtype;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_component_type	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_component_type = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_component_type	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_component_type;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_component_vendor_id	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_component_vendor_id = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_component_vendor_id	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_component_vendor_id;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_operational_status_last_use	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_operational_status_last_use = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_operational_status_last_use	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_operational_status_last_use;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_operational_status_result	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_operational_status_result = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_operational_status_result	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_operational_status_result;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_operational_status_status	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_operational_status_status = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_operational_status_status	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_operational_status_status;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_product_information_product_id	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_product_information_product_id = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_product_information_product_id	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_product_information_product_id;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_product_information_product_name	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_product_information_product_name = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_product_information_product_name	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_product_information_product_name;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_product_information_vendor_id	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_product_information_vendor_id = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_product_information_vendor_id	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_product_information_vendor_id;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_resource_id	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_resource_id = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_resource_id	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_resource_id;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_subject_id	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_subject_id = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_subject_id	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_subject_id;$/;"	m	class:tncfhh::iml::XACMLConstants
attribute_id_tncs_server_name	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::attribute_id_tncs_server_name = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
attribute_id_tncs_server_name	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string attribute_id_tncs_server_name;$/;"	m	class:tncfhh::iml::XACMLConstants
batchEnding	imcv/attestation/imc/src/AttestationIMC.cpp	/^TNC_Result AttestationIMC::batchEnding()$/;"	f	class:AttestationIMC
batchEnding	imcv/clamav/imc/src/ClamavIMC.cpp	/^TNC_Result ClamavIMC::batchEnding() {$/;"	f	class:ClamavIMC
batchEnding	imcv/clamav/imv/src/ClamavIMV.cpp	/^TNC_Result ClamavIMV::batchEnding() {$/;"	f	class:ClamavIMV
batchEnding	imcv/dummy/imc/src/DummyIMC.cpp	/^TNC_Result DummyIMC::batchEnding()$/;"	f	class:DummyIMC
batchEnding	imcv/dummy/imv/src/DummyIMV.cpp	/^TNC_Result DummyIMV::batchEnding() {$/;"	f	class:DummyIMV
batchEnding	imcv/example/imc/src.bk/ExampleIMC.cpp	/^TNC_Result ExampleIMC::batchEnding()$/;"	f	class:ExampleIMC
batchEnding	imcv/example/imc/src/ExampleIMC.cpp	/^TNC_Result ExampleIMC::batchEnding()$/;"	f	class:ExampleIMC
batchEnding	imcv/example/imv/src.bk/ExampleIMV.cpp	/^TNC_Result ExampleIMV::batchEnding()$/;"	f	class:ExampleIMV
batchEnding	imcv/example/imv/src/ExampleIMV.cpp	/^TNC_Result ExampleIMV::batchEnding()$/;"	f	class:ExampleIMV
batchEnding	imcv/hostscanner/imv/src/HostScannerIMV.cpp	/^TNC_Result HostScannerIMV::batchEnding()$/;"	f	class:HostScannerIMV
batchEnding	imcv/platid/imc/src/PlatidIMC.cpp	/^TNC_Result PlatidIMC::batchEnding()$/;"	f	class:PlatidIMC
batchEnding	imcv/procwatcher/imc/src.bk/ExampleIMC.cpp	/^TNC_Result ExampleIMC::batchEnding()$/;"	f	class:ExampleIMC
batchEnding	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^TNC_Result ProcwatcherIMC::batchEnding()$/;"	f	class:ProcwatcherIMC
batchEnding	imcv/procwatcher/imv/src.bk/ExampleIMV.cpp	/^TNC_Result ExampleIMV::batchEnding()$/;"	f	class:ExampleIMV
batchEnding	imcv/procwatcher/imv/src/ProcwatcherIMV.cpp	/^TNC_Result ProcwatcherIMV::batchEnding()$/;"	f	class:ProcwatcherIMV
batchEnding	imunit/src/imunit/AbstractIMUnit.cpp	/^TNC_Result AbstractIMUnit::batchEnding()$/;"	f	class:tncfhh::iml::AbstractIMUnit
batchEnding	imunit/src/imunit/imc/IMCLibrary.cpp	/^TNC_Result IMCLibrary::batchEnding(TNC_IMCID imcID, TNC_ConnectionID connectionID)$/;"	f	class:tncfhh::iml::IMCLibrary
batchEnding	imunit/src/imunit/imv/IMVLibrary.cpp	/^TNC_Result IMVLibrary::batchEnding(TNC_IMVID imvID, TNC_ConnectionID connectionID)$/;"	f	class:tncfhh::iml::IMVLibrary
batchEnding	tncs/src/tncs/iel/IMV.cpp	/^void IMV::batchEnding()$/;"	f	class:tncfhh::iel::IMV
batchEndingPointer	tncs/src/tncs/iel/IMVProperties.h	/^	TNC_IMV_BatchEndingPointer batchEndingPointer; \/\/Optional$/;"	m	class:tncfhh::iel::IMVProperties
beginHandshake	imcv/attestation/imc/src/AttestationIMC.cpp	/^TNC_Result AttestationIMC::beginHandshake()$/;"	f	class:AttestationIMC
beginHandshake	imcv/clamav/imc/src/ClamavIMC.cpp	/^TNC_Result ClamavIMC::beginHandshake() {$/;"	f	class:ClamavIMC
beginHandshake	imcv/dummy/imc/src/DummyIMC.cpp	/^TNC_Result DummyIMC::beginHandshake()$/;"	f	class:DummyIMC
beginHandshake	imcv/example/imc/src.bk/ExampleIMC.cpp	/^TNC_Result ExampleIMC::beginHandshake()$/;"	f	class:ExampleIMC
beginHandshake	imcv/example/imc/src/ExampleIMC.cpp	/^TNC_Result ExampleIMC::beginHandshake()$/;"	f	class:ExampleIMC
beginHandshake	imcv/hostscanner/imc/src/HostScannerIMC.cpp	/^TNC_Result HostScannerIMC::beginHandshake()$/;"	f	class:HostScannerIMC
beginHandshake	imcv/platid/imc/src/PlatidIMC.cpp	/^TNC_Result PlatidIMC::beginHandshake()$/;"	f	class:PlatidIMC
beginHandshake	imcv/procwatcher/imc/src.bk/ExampleIMC.cpp	/^TNC_Result ExampleIMC::beginHandshake()$/;"	f	class:ExampleIMC
beginHandshake	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^TNC_Result ProcwatcherIMC::beginHandshake()$/;"	f	class:ProcwatcherIMC
beginHandshake	imunit/src/imunit/imc/IMCLibrary.cpp	/^TNC_Result IMCLibrary::beginHandshake(TNC_IMCID imcID, TNC_ConnectionID connectionID)$/;"	f	class:tncfhh::iml::IMCLibrary
beginHandshake	tncsim/src/client/libtnc/LibtncTNCC.cpp	/^TNCCSData LibtncTNCC::beginHandshake()$/;"	f	class:tncsim::client::libtnc::LibtncTNCC
beginSession	vpn/vpnclient/src/vpnclient/LibTNCClient.cpp	/^void LibTNCClient::beginSession()$/;"	f	class:tnc::LibTNCClient
bindFunctionPointer	imunit/src/imunit/imc/IMCLibrary.h	/^		TNC_TNCC_BindFunctionPointer bindFunctionPointer;$/;"	m	struct:tncfhh::iml::IMCLibrary::TNCC_FunctionPointers
bindFunctionPointer	imunit/src/imunit/imv/IMVLibrary.h	/^		TNC_TNCS_BindFunctionPointer bindFunctionPointer;$/;"	m	struct:tncfhh::iml::IMVLibrary::TNCS_FunctionPointers
buf	imcv/example/imc/src.bk/ExampleIMC.h	/^    char *buf;$/;"	m	class:ExampleIMC
buf	imcv/example/imc/src/ExampleIMC.h	/^    char *buf;$/;"	m	class:ExampleIMC
buf	imcv/procwatcher/imc/src.bk/ExampleIMC.h	/^    char *buf;$/;"	m	class:ExampleIMC
buf	imcv/procwatcher/imc/src/ProcwatcherIMC.h	/^    char *buf;$/;"	m	class:ProcwatcherIMC
buf_len	vpn/libtncvpn/src/tncvpn/libtnac/TLVBuffer.h	/^	unsigned buf_len;$/;"	m	class:TLVBuffer
buf_size	vpn/libtncvpn/src/tncvpn/libtnac/TLVBuffer.h	/^	unsigned buf_size;$/;"	m	class:TLVBuffer
buffer	imcv/example/imc/src/ExampleIMC.h	/^    unsigned char buffer[BLOCKSIZE];$/;"	m	class:ExampleIMC
buffer	imcv/procwatcher/imc/src/ProcwatcherIMC.h	/^    unsigned char buffer[BLOCKSIZE];$/;"	m	class:ProcwatcherIMC
buffer	vpn/libtncvpn/src/tncvpn/libtnac/TLVBuffer.h	/^	char* buffer;$/;"	m	class:TLVBuffer
calculateHash	imcv/procwatcher/imv/src/ProcwatcherIMV.cpp	/^int ProcwatcherIMV:: calculateHash(std::vector<FileEntry> entry)$/;"	f	class:ProcwatcherIMV
calculateQuoteDigest	imcv/attestation/imv/src/AttestationIMV.cpp	/^int AttestationIMV::calculateQuoteDigest(unsigned int maskLen, unsigned char *buf,$/;"	f	class:AttestationIMV
calculate_hash_by_fd	hash/ps.cpp	/^int calculate_hash_by_fd(string path, unsigned char *sha)$/;"	f
calculate_hash_by_fd	imcv/example/imc/src/ExampleIMC.cpp	/^ExampleIMC::calculate_hash_by_fd(char *filename, unsigned char *sha)$/;"	f	class:ExampleIMC
calculate_hash_by_fd	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^ProcwatcherIMC::calculate_hash_by_fd(char *filename, unsigned char *sha)$/;"	f	class:ProcwatcherIMC
call_TNC_IMV_BatchEnding	tncs/src/tncs/iel/IMVProperties.cpp	/^TNC_Result IMVProperties::call_TNC_IMV_BatchEnding(TNC_ConnectionID connectionID)$/;"	f	class:tncfhh::iel::IMVProperties
call_TNC_IMV_Initialize	tncs/src/tncs/iel/IMVProperties.cpp	/^void IMVProperties::call_TNC_IMV_Initialize()$/;"	f	class:tncfhh::iel::IMVProperties
call_TNC_IMV_NotifyConnectionChange	tncs/src/tncs/iel/IMVProperties.cpp	/^TNC_Result IMVProperties::call_TNC_IMV_NotifyConnectionChange(TNC_ConnectionID connectionID,$/;"	f	class:tncfhh::iel::IMVProperties
call_TNC_IMV_ProvideBindFunction	tncs/src/tncs/iel/IMVProperties.cpp	/^void IMVProperties::call_TNC_IMV_ProvideBindFunction()$/;"	f	class:tncfhh::iel::IMVProperties
call_TNC_IMV_ReceiveMessage	tncs/src/tncs/iel/IMVProperties.cpp	/^TNC_Result IMVProperties::call_TNC_IMV_ReceiveMessage(TNC_ConnectionID connectionID,$/;"	f	class:tncfhh::iel::IMVProperties
call_TNC_IMV_ReceiveMessageLong	tncs/src/tncs/iel/IMVProperties.cpp	/^TNC_Result IMVProperties::call_TNC_IMV_ReceiveMessageLong(TNC_ConnectionID connectionID,$/;"	f	class:tncfhh::iel::IMVProperties
call_TNC_IMV_ReceiveMessageSOH	tncs/src/tncs/iel/IMVProperties.cpp	/^TNC_Result IMVProperties::call_TNC_IMV_ReceiveMessageSOH(TNC_ConnectionID connectionID,$/;"	f	class:tncfhh::iel::IMVProperties
call_TNC_IMV_SolicitRecommendation	tncs/src/tncs/iel/IMVProperties.cpp	/^TNC_Result IMVProperties::call_TNC_IMV_SolicitRecommendation(TNC_ConnectionID connectionID)$/;"	f	class:tncfhh::iel::IMVProperties
call_TNC_IMV_Terminate	tncs/src/tncs/iel/IMVProperties.cpp	/^void IMVProperties::call_TNC_IMV_Terminate()$/;"	f	class:tncfhh::iel::IMVProperties
certManager	imcv/platid/imv/src/PlatidIMV.h	/^	CertManager		*certManager;$/;"	m	class:PlatidIMV
certManager	imcv/platid/imv/src/PlatidIMVLibrary.h	/^	CertManager *certManager;$/;"	m	class:PlatidIMVLibrary
certMap	imcv/platid/imv/src/FileCertManager.h	/^	std::map<string, string> certMap;$/;"	m	class:FileCertManager
certificate	imcv/attestation/imc/src/AttestationIMC.h	/^	TNC_BufferReference		certificate;$/;"	m	class:AttestationIMC
certificate	imcv/platid/imc/src/PlatidIMC.h	/^	string certificate;$/;"	m	class:PlatidIMC
certificate	imcv/procwatcher/imc/src/ProcwatcherIMC.h	/^    TNC_BufferReference     certificate;$/;"	m	class:ProcwatcherIMC
certificateFile	imcv/attestation/imc/src/AttestationIMC.h	/^	string				certificateFile;$/;"	m	class:AttestationIMC
certificateFile	imcv/platid/imc/src/PlatidIMC.h	/^	string certificateFile;$/;"	m	class:PlatidIMC
certificateFile	imcv/procwatcher/imc/src/ProcwatcherIMC.h	/^    string              certificateFile;$/;"	m	class:ProcwatcherIMC
certificateLength	imcv/attestation/imc/src/AttestationIMC.h	/^	TNC_UInt32			certificateLength;$/;"	m	class:AttestationIMC
certificateLength	imcv/procwatcher/imc/src/ProcwatcherIMC.h	/^    TNC_UInt32          certificateLength;$/;"	m	class:ProcwatcherIMC
certificateSent	imcv/attestation/imc/src/AttestationIMC.h	/^	bool				certificateSent;$/;"	m	class:AttestationIMC
certificateSent	imcv/procwatcher/imc/src/ProcwatcherIMC.h	/^    bool                certificateSent;$/;"	m	class:ProcwatcherIMC
checkBatchEnding	imunit/src/imunit/imc/IMCLibrary.cpp	/^void IMCLibrary::checkBatchEnding(TNC_IMCID imcID, TNC_ConnectionID connectionID) throw (ResultException)$/;"	f	class:tncfhh::iml::IMCLibrary
checkBatchEnding	imunit/src/imunit/imv/IMVLibrary.cpp	/^void IMVLibrary::checkBatchEnding(TNC_IMVID imvID, TNC_ConnectionID connectionID) throw (ResultException)$/;"	f	class:tncfhh::iml::IMVLibrary
checkBeginHandshake	imunit/src/imunit/imc/IMCLibrary.cpp	/^void IMCLibrary::checkBeginHandshake(TNC_IMCID imcID, TNC_ConnectionID connectionID) throw (ResultException)$/;"	f	class:tncfhh::iml::IMCLibrary
checkClamconf	imcv/clamav/imc/src/ClamavIMC.cpp	/^void ClamavIMC::checkClamconf(){$/;"	f	class:ClamavIMC
checkClientKnown	imcv/attestation/imv/src/AttestationIMV.cpp	/^bool AttestationIMV::checkClientKnown()$/;"	f	class:AttestationIMV
checkClientKnown	imcv/procwatcher/imv/src/ProcwatcherIMV.cpp	/^bool ProcwatcherIMV::checkClientKnown()$/;"	f	class:ProcwatcherIMV
checkIMUnitID	imunit/src/imunit/IMUnitLibrary.cpp	/^void IMUnitLibrary::checkIMUnitID(TNC_IMUnitID imUnitID) throw (ResultException)$/;"	f	class:tncfhh::iml::IMUnitLibrary
checkIMUnitLibraryIsInitialized	imunit/src/imunit/IMUnitLibrary.cpp	/^void IMUnitLibrary::checkIMUnitLibraryIsInitialized() throw (ResultException)$/;"	f	class:tncfhh::iml::IMUnitLibrary
checkIMVID	tncs/src/tncs/iel/soh/SOH1Protocol.cpp	/^void SOH1Protocol::checkIMVID(TNC_IMVID imvID, std::map<TNC_IMVID, IMV *>::iterator &iter) throw (std::domain_error)$/;"	f	class:tncfhh::iel::soh::SOH1Protocol
checkIMVID	tncs/src/tncs/iel/tnc1/TNC1Protocol.cpp	/^void TNC1Protocol::checkIMVID(TNC_IMVID imvID, std::map<TNC_IMVID, IMV *>::iterator &iter) throw (std::domain_error)$/;"	f	class:tncfhh::iel::tnc1::TNC1Protocol
checkInitialize	imunit/src/imunit/IMUnitLibrary.cpp	/^void IMUnitLibrary::checkInitialize(TNC_IMUnitID imUnitID,$/;"	f	class:tncfhh::iml::IMUnitLibrary
checkLog4cxxInitialized	imunit/src/imunit/IMUnitLibrary.cpp	/^bool IMUnitLibrary::checkLog4cxxInitialized()$/;"	f	class:tncfhh::iml::IMUnitLibrary
checkNotifyConnectionChange	imunit/src/imunit/imc/IMCLibrary.cpp	/^void IMCLibrary::checkNotifyConnectionChange(TNC_IMCID imcID, TNC_ConnectionID connectionID, TNC_ConnectionState newState) throw (ResultException)$/;"	f	class:tncfhh::iml::IMCLibrary
checkNotifyConnectionChange	imunit/src/imunit/imv/IMVLibrary.cpp	/^void IMVLibrary::checkNotifyConnectionChange(TNC_IMVID imvID, TNC_ConnectionID connectionID, TNC_ConnectionState newState) throw (ResultException)$/;"	f	class:tncfhh::iml::IMVLibrary
checkOperationalStatus	imcv/clamav/imc/src/ClamavIMC.cpp	/^void ClamavIMC::checkOperationalStatus() {$/;"	f	class:ClamavIMC
checkParameters	naaeap/src/naaeap/logic/Defragmentation.cpp	/^void Defragmentation::checkParameters(TNC_ConnectionID conID, const EapTncFragment &input) throw (std::logic_error)$/;"	f	class:tncfhh::nal::Defragmentation
checkProvideBindFunction	imunit/src/imunit/imc/IMCLibrary.cpp	/^void IMCLibrary::checkProvideBindFunction(TNC_IMCID imcID, TNC_TNCC_BindFunctionPointer bindFunction) throw (ResultException)$/;"	f	class:tncfhh::iml::IMCLibrary
checkProvideBindFunction	imunit/src/imunit/imv/IMVLibrary.cpp	/^void IMVLibrary::checkProvideBindFunction(TNC_IMVID imvID, TNC_TNCS_BindFunctionPointer bindFunction) throw (ResultException)$/;"	f	class:tncfhh::iml::IMVLibrary
checkReceiveMessage	imunit/src/imunit/IMUnitLibrary.cpp	/^void IMUnitLibrary::checkReceiveMessage(TNC_IMUnitID id,$/;"	f	class:tncfhh::iml::IMUnitLibrary
checkSolicitRecommendation	imunit/src/imunit/imv/IMVLibrary.cpp	/^void IMVLibrary::checkSolicitRecommendation(TNC_IMVID imvID, TNC_ConnectionID connectionID) throw (ResultException)$/;"	f	class:tncfhh::iml::IMVLibrary
checkTerminate	imunit/src/imunit/imc/IMCLibrary.cpp	/^void IMCLibrary::checkTerminate(TNC_IMCID imcID) throw (ResultException)$/;"	f	class:tncfhh::iml::IMCLibrary
checkTerminate	imunit/src/imunit/imv/IMVLibrary.cpp	/^void IMVLibrary::checkTerminate(TNC_IMVID imvID) throw (ResultException)$/;"	f	class:tncfhh::iml::IMVLibrary
cid	imunit/src/imunit/imc/TNCC.h	/^	TNC_ConnectionID cid;$/;"	m	class:tncfhh::iml::TNCC
cid	imunit/src/imunit/imv/TNCS.h	/^	TNC_ConnectionID cid;$/;"	m	class:tncfhh::iml::TNCS
cid	tncsim/src/server/tncfhh/TncfhhTNCS.h	/^	TNC_ConnectionID cid;$/;"	m	class:tncsim::server::tncfhh::TncfhhTNCS
clamconfPath	imcv/clamav/imc/src/ClamavIMC.h	/^    std::string clamconfPath;$/;"	m	class:ClamavIMC
clamdSocketPath	imcv/clamav/imc/src/ClamavIMC.h	/^    std::string clamdSocketPath;$/;"	m	class:ClamavIMC
clean	vpn/naavpn/src/naavpn/MessageHandler.cpp	/^MessageHandler::clean() {$/;"	f	class:tnc::MessageHandler
cleanup	imcv/attestation/imv/src/AttestationIMV.cpp	/^void AttestationIMV::cleanup()$/;"	f	class:AttestationIMV
cleanup	imcv/platid/imv/src/PlatidIMV.cpp	/^void PlatidIMV::cleanup()$/;"	f	class:PlatidIMV
cleanup1	imcv/attestation/imc/src/AttestationIMC.cpp	/^void AttestationIMC::cleanup1(void) {$/;"	f	class:AttestationIMC
cleanup1	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^void ProcwatcherIMC::cleanup1(void) {$/;"	f	class:ProcwatcherIMC
cleanup2	imcv/attestation/imc/src/AttestationIMC.cpp	/^void AttestationIMC::cleanup2(void) {$/;"	f	class:AttestationIMC
cleanup2	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^void ProcwatcherIMC::cleanup2(void) {$/;"	f	class:ProcwatcherIMC
cleanup3	imcv/attestation/imc/src/AttestationIMC.cpp	/^void AttestationIMC::cleanup3(void) {$/;"	f	class:AttestationIMC
cleanup3	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^void ProcwatcherIMC::cleanup3(void) {$/;"	f	class:ProcwatcherIMC
cleanup4	imcv/attestation/imc/src/AttestationIMC.cpp	/^void AttestationIMC::cleanup4(void) {$/;"	f	class:AttestationIMC
cleanup4	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^void ProcwatcherIMC::cleanup4(void) {$/;"	f	class:ProcwatcherIMC
cleanup5	imcv/attestation/imc/src/AttestationIMC.cpp	/^void AttestationIMC::cleanup5(void) {$/;"	f	class:AttestationIMC
cleanup5	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^void ProcwatcherIMC::cleanup5(void) {$/;"	f	class:ProcwatcherIMC
client	tncsim/src/client/AbstractTNCC.cpp	/^namespace client {$/;"	n	namespace:tncsim	file:
client	tncsim/src/client/AbstractTNCC.h	/^namespace client {$/;"	n	namespace:tncsim
client	tncsim/src/client/libtnc/LibtncTNCC.cpp	/^namespace client {$/;"	n	namespace:tncsim	file:
client	tncsim/src/client/libtnc/LibtncTNCC.h	/^namespace client {$/;"	n	namespace:tncsim
client	tncsim/src/tncsim.cpp	/^namespace client {$/;"	n	namespace:tncsim	file:
clientError	imcv/hostscanner/imv/src/HostScannerIMV.cpp	/^TNC_Result HostScannerIMV::clientError(std::string s)$/;"	f	class:HostScannerIMV
close	imcv/hostscanner/imc/src/HostScannerIMC.h	/^	enum Status {open, close};$/;"	e	enum:HostScannerIMC::Status
close	imcv/hostscanner/imv/src/HostScannerIMV.h	/^    	enum Status {open, close, whatever};$/;"	e	enum:HostScannerIMV::Status
compareVersionStrings	imcv/clamav/imv/src/ClamavIMV.cpp	/^bool ClamavIMV::compareVersionStrings(std::string in, std::string policy)$/;"	f	class:ClamavIMV
complete	imcv/attestation/imv/src/AttestationIMVPolicyManager.h	/^	complete$/;"	e	enum:tncfhh::iml::QuoteType
complete	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.h	/^	complete$/;"	e	enum:tncfhh::iml::QuoteType
conID	tncs/src/tncs/iel/Connection.h	/^	TNC_ConnectionID conID;$/;"	m	class:tncfhh::iel::Connection
conID	tncs/src/tncs/iel/IMV.h	/^	TNC_ConnectionID conID;$/;"	m	class:tncfhh::iel::IMV
conIdCounter	tncs/src/tncs/iel/Coordinator.h	/^	TNC_UInt32 conIdCounter;$/;"	m	class:tncfhh::iel::Coordinator
conn_id	vpn/naavpn/src/naavpn/MessageHandler.h	/^	TNC_ConnectionID conn_id;$/;"	m	class:tnc::MessageHandler
connection	vpn/vpnclient/src/vpnclient/LibTNCClient.h	/^	libtnc_tncc_connection *connection;$/;"	m	class:tnc::LibTNCClient
connectionID	imunit/src/imunit/AbstractIMUnit.h	/^	const TNC_ConnectionID connectionID;$/;"	m	class:tncfhh::iml::AbstractIMUnit
connectionState	imunit/src/imunit/AbstractIMUnit.h	/^	TNC_ConnectionState connectionState;$/;"	m	class:tncfhh::iml::AbstractIMUnit
connectionState	tncs/src/tncs/exception/ConnectionStateException.h	/^	TNC_ConnectionState connectionState;$/;"	m	class:tncfhh::iel::ConnectionStateException
connectionState	tncs/src/tncs/iel/Connection.h	/^	TNC_ConnectionState connectionState;$/;"	m	class:tncfhh::iel::Connection
connections	tncs/src/tncs/iel/Coordinator.h	/^	std::map<TNC_ConnectionID, Connection *> connections;$/;"	m	class:tncfhh::iel::Coordinator
constructEnvelope	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.cpp	/^Envelope *IFTTLSConnection::constructEnvelope()$/;"	f	class:ifttls::IFTTLSConnection
context_	vpn/libtncvpn/src/tncvpn/ssl/Server.h	/^    boost::asio::ssl::context context_;$/;"	m	class:tnc::ssl::Server
coordinator	tncs/src/tncs/iel/Coordinator.cpp	/^Coordinator coordinator;$/;"	m	namespace:tncfhh::iel	file:
copyData	vpn/libtncvpn/src/tncvpn/libtnac/TLVBuffer.h	/^	void copyData(unsigned packet_len) {$/;"	f	class:TLVBuffer
copyToString	tncutil/src/tncutil/XercesString.cpp	/^std::string & XercesString::copyToString(std::string & sstr)$/;"	f	class:tncfhh::XercesString
count	imcv/dummy/imc/src/DummyIMC.h	/^	unsigned int count;$/;"	m	class:DummyIMC
count	imcv/hostscanner/imv/src/HostScannerIMV.h	/^    	unsigned int count;$/;"	m	class:HostScannerIMV
createAttribute	tncxacml/src/tncxacml/XACMLHelper.cpp	/^xercesc::DOMElement* XACMLHelper::createAttribute($/;"	f	class:tncfhh::iml::XACMLHelper
createConnection	tncsim/src/client/libtnc/LibtncTNCC.cpp	/^void LibtncTNCC::createConnection(TNC_ConnectionID)$/;"	f	class:tncsim::client::libtnc::LibtncTNCC
createConnection	tncsim/src/server/libtnc/LibtncTNCS.cpp	/^void LibtncTNCS::createConnection(TNC_ConnectionID)$/;"	f	class:tncsim::server::libtnc::LibtncTNCS
createConnection	tncsim/src/server/tncfhh/TncfhhTNCS.cpp	/^void TncfhhTNCS::createConnection(TNC_ConnectionID)$/;"	f	class:tncsim::server::tncfhh::TncfhhTNCS
createNewImcInstance	imcv/attestation/imc/src/AttestationIMCLibrary.cpp	/^AbstractIMC *AttestationIMCLibrary::createNewImcInstance(TNC_ConnectionID conId)$/;"	f	class:AttestationIMCLibrary
createNewImcInstance	imcv/clamav/imc/src/ClamavIMCLibrary.cpp	/^tncfhh::iml::AbstractIMC *ClamavIMCLibrary::createNewImcInstance(TNC_ConnectionID conID)$/;"	f	class:ClamavIMCLibrary
createNewImcInstance	imcv/dummy/imc/src/DummyIMCLibrary.cpp	/^tncfhh::iml::AbstractIMC *DummyIMCLibrary::createNewImcInstance(TNC_ConnectionID conID)$/;"	f	class:DummyIMCLibrary
createNewImcInstance	imcv/example/imc/src.bk/ExampleIMCLibrary.cpp	/^tncfhh::iml::AbstractIMC *ExampleIMCLibrary::createNewImcInstance(TNC_ConnectionID conID)$/;"	f	class:ExampleIMCLibrary
createNewImcInstance	imcv/example/imc/src/ExampleIMCLibrary.cpp	/^tncfhh::iml::AbstractIMC *ExampleIMCLibrary::createNewImcInstance(TNC_ConnectionID conID)$/;"	f	class:ExampleIMCLibrary
createNewImcInstance	imcv/hostscanner/imc/src/HostScannerIMCLibrary.cpp	/^tncfhh::iml::AbstractIMC *HostScannerIMCLibrary::createNewImcInstance(TNC_ConnectionID conID)$/;"	f	class:HostScannerIMCLibrary
createNewImcInstance	imcv/platid/imc/src/PlatidIMCLibrary.cpp	/^AbstractIMC *PlatidIMCLibrary::createNewImcInstance(TNC_ConnectionID conId)$/;"	f	class:PlatidIMCLibrary
createNewImcInstance	imcv/procwatcher/imc/src.bk/ExampleIMCLibrary.cpp	/^tncfhh::iml::AbstractIMC *ExampleIMCLibrary::createNewImcInstance(TNC_ConnectionID conID)$/;"	f	class:ExampleIMCLibrary
createNewImcInstance	imcv/procwatcher/imc/src/ProcwatcherIMCLibrary.cpp	/^tncfhh::iml::AbstractIMC *ProcwatcherIMCLibrary::createNewImcInstance(TNC_ConnectionID conID)$/;"	f	class:ProcwatcherIMCLibrary
createNewImvInstance	imcv/attestation/imv/src/AttestationIMVLibrary.cpp	/^AbstractIMV * AttestationIMVLibrary::createNewImvInstance(TNC_ConnectionID connid)$/;"	f	class:AttestationIMVLibrary
createNewImvInstance	imcv/clamav/imv/src/ClamavIMVLibrary.cpp	/^tncfhh::iml::AbstractIMV *ClamavIMVLibrary::createNewImvInstance(TNC_ConnectionID conID)$/;"	f	class:ClamavIMVLibrary
createNewImvInstance	imcv/dummy/imv/src/DummyIMVLibrary.cpp	/^tncfhh::iml::AbstractIMV *DummyIMVLibrary::createNewImvInstance(TNC_ConnectionID conID)$/;"	f	class:DummyIMVLibrary
createNewImvInstance	imcv/example/imv/src.bk/ExampleIMVLibrary.cpp	/^tncfhh::iml::AbstractIMV *ExampleIMVLibrary::createNewImvInstance(TNC_ConnectionID conID)$/;"	f	class:ExampleIMVLibrary
createNewImvInstance	imcv/example/imv/src/ExampleIMVLibrary.cpp	/^tncfhh::iml::AbstractIMV *ExampleIMVLibrary::createNewImvInstance(TNC_ConnectionID conID)$/;"	f	class:ExampleIMVLibrary
createNewImvInstance	imcv/hostscanner/imv/src/HostScannerIMVLibrary.cpp	/^tncfhh::iml::AbstractIMV *HostScannerIMVLibrary::createNewImvInstance(TNC_ConnectionID conID)$/;"	f	class:HostScannerIMVLibrary
createNewImvInstance	imcv/platid/imv/src/PlatidIMVLibrary.cpp	/^AbstractIMV * PlatidIMVLibrary::createNewImvInstance(TNC_ConnectionID connid)$/;"	f	class:PlatidIMVLibrary
createNewImvInstance	imcv/procwatcher/imv/src.bk/ExampleIMVLibrary.cpp	/^tncfhh::iml::AbstractIMV *ExampleIMVLibrary::createNewImvInstance(TNC_ConnectionID conID)$/;"	f	class:ExampleIMVLibrary
createNewImvInstance	imcv/procwatcher/imv/src/ProcwatcherIMVLibrary.cpp	/^tncfhh::iml::AbstractIMV *ProcwatcherIMVLibrary::createNewImvInstance(TNC_ConnectionID conID)$/;"	f	class:ProcwatcherIMVLibrary
createRequest	tncxacml/src/tncxacml/XACMLHelper.cpp	/^DOMDocument* XACMLHelper::createRequest() {$/;"	f	class:tncfhh::iml::XACMLHelper
createSubject	tncxacml/src/tncxacml/XACMLHelper.cpp	/^xercesc::DOMElement* XACMLHelper::createSubject(\/*in*\/DOMDocument* request) {$/;"	f	class:tncfhh::iml::XACMLHelper
createSubject	tncxacml/src/tncxacml/XACMLHelper.cpp	/^xercesc::DOMElement* XACMLHelper::createSubject(\/*in*\/DOMDocument* request, \/*in*\/$/;"	f	class:tncfhh::iml::XACMLHelper
curHeader	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.h	/^	uint8_t curHeader[Envelope::IFT_HEADER_LENGTH];$/;"	m	class:ifttls::IFTTLSConnection
curIdentifier	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.h	/^	uint32_t curIdentifier;$/;"	m	class:ifttls::IFTTLSConnection
curMessage	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.h	/^	uint8_t *curMessage;$/;"	m	class:ifttls::IFTTLSConnection
curMsgLength	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.h	/^	uint32_t curMsgLength;$/;"	m	class:ifttls::IFTTLSConnection
curMsgLength_	vpn/naavpn/src/naavpn/TNCSession.h	/^	uint32_t curMsgLength_;$/;"	m	class:tnc::TNCSession
curMsgLength_	vpn/vpnclient/src/vpnclient/TNCClient.h	/^	uint32_t curMsgLength_;$/;"	m	class:tnc::TNCClient
curMsg_	vpn/naavpn/src/naavpn/TNCSession.h	/^	unsigned char *curMsg_;$/;"	m	class:tnc::TNCSession
curMsg_	vpn/vpnclient/src/vpnclient/TNCClient.h	/^	char *curMsg_;$/;"	m	class:tnc::TNCClient
currentEntry	imcv/attestation/imv/src/AttestationIMV.h	/^	unsigned int		currentEntry;$/;"	m	class:AttestationIMV
data	tncs/src/tncs/iel/TNCCSData.h	/^	TNC_BufferReference data;$/;"	m	class:tncfhh::iel::TNCCSData
data	tncs/src/tncs/iel/tnc1/IMCIMVMessage.h	/^	TNC_BufferReference data;$/;"	m	class:tncfhh::iel::tnc1::IMCIMVMessage
data	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageBase64.h	/^	TNC_BufferReference data;$/;"	m	class:tncfhh::iel::tnc1::TNCCTNCSMessageBase64
data	tncsim/src/TNCCSData.h	/^	TNC_BufferReference data;$/;"	m	class:tncsim::TNCCSData
dataLength	tncs/src/tncs/iel/TNCCSData.h	/^	TNC_UInt32 dataLength;$/;"	m	class:tncfhh::iel::TNCCSData
dataLength	tncs/src/tncs/iel/tnc1/IMCIMVMessage.h	/^	TNC_UInt32 dataLength;$/;"	m	class:tncfhh::iel::tnc1::IMCIMVMessage
dataLength	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageBase64.h	/^	TNC_UInt32 dataLength;$/;"	m	class:tncfhh::iel::tnc1::TNCCTNCSMessageBase64
dataLength	tncsim/src/TNCCSData.h	/^	TNC_UInt32 dataLength;$/;"	m	class:tncsim::TNCCSData
data_	vpn/libtncvpn/src/tncvpn/ssl/Session.h	/^	char data_[max_length];$/;"	m	class:tnc::ssl::Session
data_type_rfc822_name	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::data_type_rfc822_name = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
data_type_rfc822_name	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string data_type_rfc822_name;$/;"	m	class:tncfhh::iml::XACMLConstants
data_type_xml_date_time	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::data_type_xml_date_time = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
data_type_xml_date_time	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string data_type_xml_date_time;$/;"	m	class:tncfhh::iml::XACMLConstants
data_type_xml_integer	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::data_type_xml_integer = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
data_type_xml_integer	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string data_type_xml_integer;$/;"	m	class:tncfhh::iml::XACMLConstants
data_type_xml_string	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::data_type_xml_string = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
data_type_xml_string	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string data_type_xml_string;$/;"	m	class:tncfhh::iml::XACMLConstants
db	vpn/vpnpep/src/vpnpep/AssessmentScheduler.h	/^	tnc::EndpointDB *db;$/;"	m	class:tnc::AssessmentScheduler
db	vpn/vpnpep/src/vpnpep/PEPServer.h	/^	tnc::EndpointDB *db;$/;"	m	class:tnc::PEPServer
db	vpn/vpnpep/src/vpnpep/PEPSession.h	/^	tnc::EndpointDB *db;$/;"	m	class:tnc::PEPSession
defragment	naaeap/src/naaeap/logic/Defragmentation.cpp	/^iel::TNCCSData Defragmentation::defragment(TNC_ConnectionID conID, const EapTncFragment &input) throw (std::logic_error, AcknowledgementException)$/;"	f	class:tncfhh::nal::Defragmentation
deframentation	naaeap/src/naaeap/naaeap.cpp	/^static tncfhh::nal::Defragmentation deframentation;$/;"	m	namespace:tncfhh::naaeap	file:
deleteAllMessages	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^void TNCCSBatch::deleteAllMessages()$/;"	f	class:tncfhh::iel::tnc1::TNCCSBatch
display_sha1_digest	hash/ps.cpp	/^void display_sha1_digest(u_int8_t *digest)$/;"	f
doHandshake	vpn/libtncvpn/src/tncvpn/ssl/Session.h	/^	void doHandshake() {$/;"	f	class:tnc::ssl::Session
doLocalEvaluation	imcv/clamav/imv/src/ClamavIMV.cpp	/^TNC_IMV_Action_Recommendation ClamavIMV::doLocalEvaluation(std::vector<Measurement>* measurements) {$/;"	f	class:ClamavIMV
doOperations	vpn/naavpn/src/naavpn/TNCSession.cpp	/^void TNCSession::doOperations() {$/;"	f	class:tnc::TNCSession
doOperations	vpn/vpnclient/src/vpnclient/TNCClient.cpp	/^void TNCClient::doOperations()$/;"	f	class:tnc::TNCClient
doQuote	imcv/attestation/imc/src/AttestationIMC.cpp	/^int AttestationIMC::doQuote(PcrSelection& ps, TNC_BufferReference nonce)$/;"	f	class:AttestationIMC
doXACMLEvaluation	imcv/clamav/imv/src/ClamavIMV.cpp	/^bool ClamavIMV::doXACMLEvaluation(std::vector<Measurement>* measurements) {$/;"	f	class:ClamavIMV
doXACMLEvaluation	tncs/src/tncs/iel/tnc1/TNC1Protocol.cpp	/^bool TNC1Protocol::doXACMLEvaluation(std::list<IMV*> imvs, TNC_IMV_Action_Recommendation &recommendation)$/;"	f	class:tncfhh::iel::tnc1::TNC1Protocol
doc	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageXML.h	/^	xercesc::DOMDocument * doc;$/;"	m	class:tncfhh::iel::tnc1::TNCCTNCSMessageXML
done	vpn/naavpn/src/naavpn/MessageHandler.cpp	/^MessageHandler::done() {$/;"	f	class:tnc::MessageHandler
endpoints	vpn/vpnpep/src/vpnpep/EndpointDB.h	/^	EP_HashMap endpoints;$/;"	m	class:tnc::EndpointDB
enforceBinaryIso	vpn/vpnpep/src/vpnpep/EnforcementManager.h	/^void enforceBinaryIso(char* ip, char recommendation) {$/;"	f
engine	imcv/platid/imc/src/PlatidIMC.h	/^	ENGINE *engine;$/;"	m	class:PlatidIMC
engine_id	imcv/platid/imc/src/testing.c	/^const char engine_id[] = "tpm";$/;"	v
entries	imcv/attestation/imv/src/AttestationIMV.h	/^	vector<PcrEntry>	entries;$/;"	m	class:AttestationIMV
entry	imcv/procwatcher/imv/src/ProcwatcherIMV.h	/^    vector<FileEntry> entry;$/;"	m	class:ProcwatcherIMV
ep	vpn/naavpn/src/naavpn/MessageHandler.h	/^	tnc::Endpoint *ep;$/;"	m	class:tnc::MessageHandler
ep	vpn/naavpn/src/naavpn/TNCSession.h	/^	tnc::Endpoint *ep;$/;"	m	class:tnc::TNCSession
eq	imcv/clamav/imv/src/ClamavIMV.h	/^		eq,$/;"	e	enum:ClamavIMV::Operant
error	tncs/src/tncs/iel/IMV.h	/^	bool error;$/;"	m	class:tncfhh::iel::IMV
error	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^	virtual void error (const xercesc::SAXParseException &exc)$/;"	f	class:tncfhh::iel::tnc1::StrictErrorHandler	file:
errorMsg	vpn/libtncvpn/src/tncvpn/ifttls/exceptions/ReceiveException.h	/^	std::string errorMsg;$/;"	m	class:ReceiveException
errorMsg	vpn/libtncvpn/src/tncvpn/ifttls/exceptions/VersionException.h	/^	std::string errorMsg;$/;"	m	class:VersionException
evaluation	tncs/src/tncs/iel/IMV.h	/^	TNC_IMV_Evaluation_Result evaluation;$/;"	m	class:tncfhh::iel::IMV
evaluationResult	imunit/src/imunit/imv/AbstractIMV.h	/^    	TNC_IMV_Evaluation_Result evaluationResult;$/;"	m	class:tncfhh::iml::AbstractIMV
exchangeXACMLData	tncxacml/src/tncxacml/XACMLHelper.cpp	/^std::string XACMLHelper::exchangeXACMLData(xercesc::DOMDocument* request) {$/;"	f	class:tncfhh::iml::XACMLHelper
existsTNCCSBatchBuffer	naaeap/src/naaeap/logic/Defragmentation.cpp	/^bool Defragmentation::existsTNCCSBatchBuffer(TNC_ConnectionID conID) const$/;"	f	class:tncfhh::nal::Defragmentation
expectVersionNegotiation	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.cpp	/^void IFTTLSConnection::expectVersionNegotiation()$/;"	f	class:ifttls::IFTTLSConnection
fatalError	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^	virtual void fatalError (const xercesc::SAXParseException &exc)$/;"	f	class:tncfhh::iel::tnc1::StrictErrorHandler	file:
file	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.h	/^        char file[50];$/;"	m	class:tncfhh::iml::FileEntry
file	tncs/src/tncs/iel/IMVProperties.h	/^	std::string file;$/;"	m	class:tncfhh::iel::IMVProperties
fileEntries	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.h	/^    std::vector<FileEntry> fileEntries;$/;"	m	class:tncfhh::iml::ProcwatcherIMVPolicyManager
find	imcv/example/imc/src/ExampleIMC.cpp	/^bool ExampleIMC::Policy::find(std::string cmd){ for (int i=0;i<paths.size();++i) if(cmd.find(paths[i]) == 0) return true;  return false; }$/;"	f	class:ExampleIMC::Policy
find	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^bool ProcwatcherIMC::Policy::find(std::string cmd){ for (int i=0;i<paths.size();++i) if(cmd.find(paths[i]) == 0) return true;  return false; }$/;"	f	class:ProcwatcherIMC::Policy
find_matched	imcv/example/imc/src/ExampleIMC.cpp	/^ExampleIMC::find_matched ( std::stringstream &ss)$/;"	f	class:ExampleIMC
find_matched	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^ProcwatcherIMC::find_matched ( std::stringstream &ss)$/;"	f	class:ProcwatcherIMC
finished_	vpn/naavpn/src/naavpn/MessageHandler.h	/^	bool finished_;$/;"	m	class:tnc::MessageHandler
finished_	vpn/vpnclient/src/vpnclient/LibTNCClient.h	/^	bool wantRead_, wantWrite_, finished_;$/;"	m	class:tnc::LibTNCClient
firstMessage	imcv/attestation/imv/src/AttestationIMV.h	/^	bool				firstMessage;$/;"	m	class:AttestationIMV
firstMessage	imcv/procwatcher/imv/src/ProcwatcherIMV.h	/^    bool firstMessage;$/;"	m	class:ProcwatcherIMV
fragment	naaeap/src/naaeap/data/EapTncFragment.h	/^	TNC_BufferReference fragment;$/;"	m	class:tncfhh::nal::EapTncFragment
fragment	naaeap/src/naaeap/logic/Fragmentation.cpp	/^EapTncFragment Fragmentation::fragment(TNC_ConnectionID conID, const iel::TNCCSData &input) throw (std::logic_error)$/;"	f	class:tncfhh::nal::Fragmentation
fragmentLength	naaeap/src/naaeap/data/EapTncFragment.h	/^	TNC_UInt32 fragmentLength;$/;"	m	class:tncfhh::nal::EapTncFragment
fragmentation	naaeap/src/naaeap/naaeap.cpp	/^static tncfhh::nal::Fragmentation fragmentation;$/;"	m	namespace:tncfhh::naaeap	file:
freeBuffers	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.cpp	/^void IFTTLSConnection::freeBuffers()$/;"	f	class:ifttls::IFTTLSConnection
generateAndSendNonce	imcv/platid/imv/src/PlatidIMV.cpp	/^int PlatidIMV::generateAndSendNonce()$/;"	f	class:PlatidIMV
get	tncutil/src/tncutil/Configuration.cpp	/^std::string Configuration::get(std::string key) {$/;"	f	class:tncfhh::Configuration
getActionRecommendation	tncs/src/tncs/iel/Policy.cpp	/^TNC_IMV_Action_Recommendation Policy::getActionRecommendation(const std::list<IMV *> &imvs)$/;"	f	class:tncfhh::iel::Policy
getActivateFragmentation	naaeap/src/naaeap/naaeap.cpp	/^int getActivateFragmentation()$/;"	f
getActive	naaeap/src/naaeap/logic/Fragmentation.cpp	/^bool Fragmentation::getActive()$/;"	f	class:tncfhh::nal::Fragmentation
getAddress	vpn/libtncvpn/src/tncvpn/iel/Endpoint.cpp	/^Endpoint::getAddress() {$/;"	f	class:tnc::Endpoint
getAttribute	imunit/src/imunit/imv/TNCS.cpp	/^bool TNCS::getAttribute(\/*in*\/ TNC_AttributeID attributeID, \/*in*\/ TNC_UInt32 bufferLength, \/*out*\/ TNC_BufferReference buffer, \/*out*\/ TNC_UInt32 *pOutValueLength) throw (ResultException)$/;"	f	class:tncfhh::iml::TNCS
getAttribute	tncs/src/tncs/iel/Connection.cpp	/^void Connection::getAttribute(TNC_IMVID imvID, TNC_AttributeID attributeID, TNC_UInt32 bufferLength, TNC_BufferReference buffer, TNC_UInt32 *pOutValueLength)  throw (ResultException)$/;"	f	class:tncfhh::iel::Connection
getAttribute	tncs/src/tncs/iel/Coordinator.cpp	/^void Coordinator::getAttribute(TNC_IMVID imvID, TNC_ConnectionID connectionID, TNC_AttributeID attributeID, TNC_UInt32 bufferLength, TNC_BufferReference buffer, TNC_UInt32 *pOutValueLength)$/;"	f	class:tncfhh::iel::Coordinator
getAttribute	tncs/src/tncs/iel/soh/SOH1Protocol.cpp	/^void SOH1Protocol::getAttribute(TNC_IMVID imvID, TNC_AttributeID attributeID, TNC_UInt32 bufferLength, \/*out*\/ TNC_BufferReference buffer, \/*out*\/ TNC_UInt32 *pOutValueLength)$/;"	f	class:tncfhh::iel::soh::SOH1Protocol
getAttribute	tncs/src/tncs/iel/tnc1/TNC1Protocol.cpp	/^void TNC1Protocol::getAttribute(TNC_IMVID imvID, TNC_AttributeID attributeID, TNC_UInt32 bufferLength, \/*out*\/ TNC_BufferReference buffer, \/*out*\/ TNC_UInt32 *pOutValueLength)$/;"	f	class:tncfhh::iel::tnc1::TNC1Protocol
getAttributePointer	imunit/src/imunit/imv/IMVLibrary.h	/^		TNC_TNCS_GetAttributePointer getAttributePointer;$/;"	m	struct:tncfhh::iml::IMVLibrary::TNCS_FunctionPointers
getAttributeValue	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^XercesString TNCCSBatch::getAttributeValue(xercesc::DOMNode & node, const XercesString & attName) throw(TNCCSProtocolNotSupportedException)$/;"	f	class:tncfhh::iel::tnc1::TNCCSBatch
getClient	tncsim/src/client/libtnc/LibtncTNCC.cpp	/^client::AbstractTNCC * getClient(std::string &tncConfig)$/;"	f	namespace:tncsim::client
getConnection	naaeap/src/naaeap/naaeap.cpp	/^TNC_Result getConnection(\/* in *\/ const char* input,$/;"	f
getConnection	tncs/src/tncs/iel/Coordinator.cpp	/^TNC_ConnectionID Coordinator::getConnection(std::string input)$/;"	f	class:tncfhh::iel::Coordinator
getConnectionById	tncs/src/tncs/iel/Coordinator.cpp	/^Connection *Coordinator::getConnectionById(TNC_ConnectionID conID) throw (std::runtime_error)$/;"	f	class:tncfhh::iel::Coordinator
getConnectionID	imunit/src/imunit/AbstractIMUnit.cpp	/^TNC_ConnectionID AbstractIMUnit::getConnectionID() const$/;"	f	class:tncfhh::iml::AbstractIMUnit
getConnectionID	tncs/src/tncs/iel/IMV.cpp	/^TNC_ConnectionID IMV::getConnectionID()$/;"	f	class:tncfhh::iel::IMV
getConnectionState	imunit/src/imunit/AbstractIMUnit.cpp	/^TNC_ConnectionState AbstractIMUnit::getConnectionState() const {$/;"	f	class:tncfhh::iml::AbstractIMUnit
getConnectionState	tncs/src/tncs/exception/ConnectionStateException.cpp	/^TNC_ConnectionState ConnectionStateException::getConnectionState() const$/;"	f	class:tncfhh::iel::ConnectionStateException
getConnectionState	tncs/src/tncs/iel/Connection.cpp	/^TNC_ConnectionState Connection::getConnectionState()$/;"	f	class:tncfhh::iel::Connection
getConnectionState	tncs/src/tncs/iel/Coordinator.cpp	/^TNC_ConnectionState Coordinator::getConnectionState(TNC_ConnectionID connectionID)$/;"	f	class:tncfhh::iel::Coordinator
getData	naaeap/src/naaeap/data/EapTncFragment.cpp	/^TNC_BufferReference EapTncFragment::getData() const$/;"	f	class:tncfhh::nal::EapTncFragment
getData	tncs/src/tncs/iel/TNCCSData.cpp	/^TNC_BufferConstReference TNCCSData::getData() const$/;"	f	class:tncfhh::iel::TNCCSData
getData	tncs/src/tncs/iel/TNCCSData.cpp	/^TNC_BufferReference TNCCSData::getData()$/;"	f	class:tncfhh::iel::TNCCSData
getData	tncs/src/tncs/iel/tnc1/IMCIMVMessage.cpp	/^TNC_BufferReference IMCIMVMessage::getData()$/;"	f	class:tncfhh::iel::tnc1::IMCIMVMessage
getData	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageBase64.cpp	/^TNC_BufferReference TNCCTNCSMessageBase64::getData()$/;"	f	class:tncfhh::iel::tnc1::TNCCTNCSMessageBase64
getData	tncsim/src/TNCCSData.cpp	/^TNC_BufferReference TNCCSData::getData()$/;"	f	class:tncsim::TNCCSData
getData	tncsim/src/TNCCSData.cpp	/^const TNC_BufferReference TNCCSData::getData() const$/;"	f	class:tncsim::TNCCSData
getDataLength	naaeap/src/naaeap/data/EapTncFragment.cpp	/^TNC_UInt32 EapTncFragment::getDataLength() const$/;"	f	class:tncfhh::nal::EapTncFragment
getDataLength	tncs/src/tncs/iel/tnc1/IMCIMVMessage.cpp	/^TNC_UInt32 IMCIMVMessage::getDataLength()$/;"	f	class:tncfhh::iel::tnc1::IMCIMVMessage
getDataLength	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageBase64.cpp	/^TNC_UInt32 TNCCTNCSMessageBase64::getDataLength()$/;"	f	class:tncfhh::iel::tnc1::TNCCTNCSMessageBase64
getEndpoints	vpn/vpnpep/src/vpnpep/EndpointDB.cpp	/^EndpointDB::getEndpoints() {$/;"	f	class:tnc::EndpointDB
getEvaluation	tncs/src/tncs/iel/IMV.cpp	/^TNC_IMV_Evaluation_Result IMV::getEvaluation()$/;"	f	class:tncfhh::iel::IMV
getFile	tncs/src/tncs/iel/IMVProperties.cpp	/^std::string IMVProperties::getFile() const$/;"	f	class:tncfhh::iel::IMVProperties
getFileEntries	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.cpp	/^std::vector<FileEntry> ProcwatcherIMVPolicyManager::getFileEntries()$/;"	f	class:tncfhh::iml::ProcwatcherIMVPolicyManager
getFragment	naaeap/src/naaeap/data/EapTncFragment.cpp	/^TNC_BufferConstReference EapTncFragment::getFragment() const$/;"	f	class:tncfhh::nal::EapTncFragment
getFragmentLength	naaeap/src/naaeap/data/EapTncFragment.cpp	/^TNC_UInt32 EapTncFragment::getFragmentLength() const$/;"	f	class:tncfhh::nal::EapTncFragment
getHighestPcr	imcv/attestation/imc/src/PcrSelection.cpp	/^long PcrSelection::getHighestPcr(void)$/;"	f	class:PcrSelection
getID	tncs/src/tncs/iel/IMVProperties.cpp	/^TNC_IMVID IMVProperties::getID() const$/;"	f	class:tncfhh::iel::IMVProperties
getIMUnitLibraryID	imunit/src/imunit/IMUnitLibrary.cpp	/^TNC_IMUnitID IMUnitLibrary::getIMUnitLibraryID()$/;"	f	class:tncfhh::iml::IMUnitLibrary
getIMUnitLibraryInitialized	imunit/src/imunit/IMUnitLibrary.cpp	/^bool IMUnitLibrary::getIMUnitLibraryInitialized()$/;"	f	class:tncfhh::iml::IMUnitLibrary
getIMUnitLibraryName	imunit/src/imunit/IMUnitLibrary.cpp	/^std::string IMUnitLibrary::getIMUnitLibraryName()$/;"	f	class:tncfhh::iml::IMUnitLibrary
getIMVProperties	tncs/src/tncs/iel/IMV.cpp	/^const IMVProperties *IMV::getIMVProperties()$/;"	f	class:tncfhh::iel::IMV
getIMVPropertiesById	tncs/src/tncs/iel/Coordinator.cpp	/^IMVProperties *Coordinator::getIMVPropertiesById(TNC_IMVID imvID) throw (ResultException)$/;"	f	class:tncfhh::iel::Coordinator
getIdentifier	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.h	/^	uint32_t getIdentifier() const$/;"	f	class:ifttls::Envelope
getIfImcImvVersion	imunit/src/imunit/IMUnitLibrary.cpp	/^TNC_Version IMUnitLibrary::getIfImcImvVersion()$/;"	f	class:tncfhh::iml::IMUnitLibrary
getImcImvMessages	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^std::list<IMCIMVMessage *> TNCCSBatch::getImcImvMessages()$/;"	f	class:tncfhh::iel::tnc1::TNCCSBatch
getImcInstances	imunit/src/imunit/imc/IMCLibrary.cpp	/^AbstractIMC * IMCLibrary::getImcInstances(TNC_ConnectionID id) throw (ResultException)$/;"	f	class:tncfhh::iml::IMCLibrary
getImvById	tncs/src/tncs/iel/Connection.cpp	/^IMV *Connection::getImvById(TNC_IMVID imvID) throw (std::runtime_error)$/;"	f	class:tncfhh::iel::Connection
getImvInstances	imunit/src/imunit/imv/IMVLibrary.cpp	/^tncfhh::iml::AbstractIMV * IMVLibrary::getImvInstances(TNC_ConnectionID id) throw (ResultException)$/;"	f	class:tncfhh::iml::IMVLibrary
getIp	vpn/libtncvpn/src/tncvpn/libtnac/AllowDenyPacket.cpp	/^AllowDenyPacket::getIp() const {$/;"	f	class:pep::AllowDenyPacket
getLastAssessment	vpn/libtncvpn/src/tncvpn/iel/Endpoint.cpp	/^Endpoint::getLastAssessment() const {$/;"	f	class:tnc::Endpoint
getLastTnccsData	tncs/src/tncs/exception/ConnectionStateExceptionWithTNCCSData.cpp	/^TNCCSData ConnectionStateExceptionWithTNCCSData::getLastTnccsData() const$/;"	f	class:tncfhh::iel::ConnectionStateExceptionWithTNCCSData
getLength	tncs/src/tncs/iel/TNCCSData.cpp	/^TNC_UInt32 TNCCSData::getLength() const$/;"	f	class:tncfhh::iel::TNCCSData
getLength	tncsim/src/TNCCSData.cpp	/^TNC_UInt32 TNCCSData::getLength() const$/;"	f	class:tncsim::TNCCSData
getLength	vpn/libtncvpn/src/tncvpn/ifttls/VersionRequestMessage.h	/^	uint32_t getLength() {$/;"	f	class:ifttls::VersionRequestMessage
getLength	vpn/libtncvpn/src/tncvpn/ifttls/VersionResponseMessage.h	/^	uint32_t getLength() {$/;"	f	class:ifttls::VersionResponseMessage
getMaxVersion	vpn/libtncvpn/src/tncvpn/ifttls/VersionRequestMessage.h	/^	uint8_t getMaxVersion() const { return max_vers; };$/;"	f	class:ifttls::VersionRequestMessage
getMessage	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.cpp	/^char* Envelope::getMessage()$/;"	f	class:ifttls::Envelope
getMessage	vpn/libtncvpn/src/tncvpn/ifttls/VersionRequestMessage.h	/^	char* getMessage() {$/;"	f	class:ifttls::VersionRequestMessage
getMessage	vpn/libtncvpn/src/tncvpn/ifttls/VersionResponseMessage.h	/^	char* getMessage() {$/;"	f	class:ifttls::VersionResponseMessage
getMessage	vpn/libtncvpn/src/tncvpn/ifttls/exceptions/ReceiveException.cpp	/^std::string ReceiveException::getMessage()$/;"	f	class:ReceiveException
getMessage	vpn/libtncvpn/src/tncvpn/ifttls/exceptions/VersionException.cpp	/^std::string VersionException::getMessage()$/;"	f	class:VersionException
getMessage	vpn/vpnclient/src/vpnclient/LibTNCClient.cpp	/^ifttls::Envelope *LibTNCClient::getMessage()$/;"	f	class:tnc::LibTNCClient
getMessage	vpn/vpnclient/src/vpnclient/TNCMockClient.h	/^	tncfhh::iel::TNCCSData getMessage() {$/;"	f	class:TNCMockClient
getMessageLength	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.cpp	/^Envelope::getMessageLength() const {$/;"	f	class:ifttls::Envelope
getMessageType	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.cpp	/^uint32_t Envelope::getMessageType() const {$/;"	f	class:ifttls::Envelope
getMessageTypeCount	imunit/src/imunit/IMUnitLibrary.cpp	/^TNC_UInt32 IMUnitLibrary::getMessageTypeCount()$/;"	f	class:tncfhh::iml::IMUnitLibrary
getMessageTypeList	imunit/src/imunit/IMUnitLibrary.cpp	/^TNC_MessageTypeList IMUnitLibrary::getMessageTypeList()$/;"	f	class:tncfhh::iml::IMUnitLibrary
getMessageValue	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.cpp	/^char* Envelope::getMessageValue()$/;"	f	class:ifttls::Envelope
getMessageValueLength	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.cpp	/^uint32_t Envelope::getMessageValueLength() const$/;"	f	class:ifttls::Envelope
getMinVersion	vpn/libtncvpn/src/tncvpn/ifttls/VersionRequestMessage.h	/^	uint8_t getMinVersion() const { return min_vers; };$/;"	f	class:ifttls::VersionRequestMessage
getName	tncs/src/tncs/iel/IMVProperties.cpp	/^std::string IMVProperties::getName() const$/;"	f	class:tncfhh::iel::IMVProperties
getNewTnccsData	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^TNCCSData TNCCSBatch::getNewTnccsData() throw (std::runtime_error)$/;"	f	class:tncfhh::iel::tnc1::TNCCSBatch
getNextFragment	naaeap/src/naaeap/logic/Fragmentation.cpp	/^EapTncFragment Fragmentation::getNextFragment(TNC_ConnectionID conID) throw (std::logic_error)$/;"	f	class:tncfhh::nal::Fragmentation
getNextIdentifier	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.h	/^	uint32_t getNextIdentifier() {$/;"	f	class:ifttls::IFTTLSConnection
getObligation	tncxacml/src/tncxacml/XACMLHelper.cpp	/^std::string XACMLHelper::getObligation(\/*in*\/ DOMDocument* response) {$/;"	f	class:tncfhh::iml::XACMLHelper
getPEPForEndpoint	vpn/naavpn/src/naavpn/PEPNotifier.cpp	/^std::string PEPNotifier::getPEPForEndpoint(boost::asio::ip::address *ip) {$/;"	f	class:tnc::PEPNotifier
getPacket	vpn/libtncvpn/src/tncvpn/libtnac/AllowDenyPacket.cpp	/^AllowDenyPacket::getPacket() {$/;"	f	class:pep::AllowDenyPacket
getPacket	vpn/libtncvpn/src/tncvpn/libtnac/TLVBuffer.h	/^	char* getPacket() {$/;"	f	class:TLVBuffer
getPacketLenght	vpn/libtncvpn/src/tncvpn/libtnac/TLVBuffer.h	/^	T getPacketLenght() {$/;"	f	class:TLVBuffer
getPacketSize	vpn/libtncvpn/src/tncvpn/libtnac/AllowDenyPacket.cpp	/^AllowDenyPacket::getPacketSize() const {$/;"	f	class:pep::AllowDenyPacket
getPassword	vpn/libtncvpn/src/tncvpn/ssl/Server.h	/^    std::string getPassword() const {$/;"	f	class:tnc::ssl::Server
getPcrCount	imcv/attestation/imc/src/PcrSelection.cpp	/^UINT16 PcrSelection::getPcrCount(void)$/;"	f	class:PcrSelection
getPcrEntries	imcv/attestation/imv/src/AttestationIMVPolicyManager.cpp	/^std::vector<PcrEntry> AttestationIMVPolicyManager::getPcrEntries()$/;"	f	class:tncfhh::iml::AttestationIMVPolicyManager
getPcrEntries	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.cpp	/^std::vector<PcrEntry> ProcwatcherIMVPolicyManager::getPcrEntries()$/;"	f	class:tncfhh::iml::ProcwatcherIMVPolicyManager
getPcrList	imcv/attestation/imc/src/PcrSelection.cpp	/^std::list<long>& PcrSelection::getPcrList(void)$/;"	f	class:PcrSelection
getPosition	naaeap/src/naaeap/data/EapTncBuffer.cpp	/^TNC_UInt32 EapTncBuffer::getPosition() const$/;"	f	class:tncfhh::nal::EapTncBuffer
getPrefVersion	vpn/libtncvpn/src/tncvpn/ifttls/VersionRequestMessage.h	/^	uint8_t getPrefVersion() const { return pref_vers; };$/;"	f	class:ifttls::VersionRequestMessage
getProperties	tncutil/src/tncutil/ConfigurationService.h	/^	property_t getProperties() const {$/;"	f	class:tncfhh::ConfigurationService
getProtocolName	tncs/src/tncs/iel/AbstractTNCCSProtocol.cpp	/^std::string AbstractTNCCSProtocol::getProtocolName() const$/;"	f	class:tncfhh::iel::AbstractTNCCSProtocol
getQuoteType	imcv/attestation/imv/src/AttestationIMVPolicyManager.cpp	/^QuoteType AttestationIMVPolicyManager::getQuoteType()$/;"	f	class:tncfhh::iml::AttestationIMVPolicyManager
getQuoteType	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.cpp	/^QuoteType ProcwatcherIMVPolicyManager::getQuoteType()$/;"	f	class:tncfhh::iml::ProcwatcherIMVPolicyManager
getRecommendation	tncs/src/tncs/iel/IMV.cpp	/^TNC_IMV_Action_Recommendation IMV::getRecommendation()$/;"	f	class:tncfhh::iel::IMV
getRecommendation	vpn/libtncvpn/src/tncvpn/libtnac/AllowDenyPacket.cpp	/^AllowDenyPacket::getRecommendation() const {$/;"	f	class:pep::AllowDenyPacket
getReplyMessage	vpn/naavpn/src/naavpn/MessageHandler.cpp	/^MessageHandler::getReplyMessage() {$/;"	f	class:tnc::MessageHandler
getReturnValue	imunit/src/imunit/exception/ResultException.cpp	/^TNC_Result ResultException::getReturnValue() const$/;"	f	class:tncfhh::iml::ResultException
getReturnValue	tncs/src/tncs/exception/ResultException.cpp	/^TNC_Result ResultException::getReturnValue() const$/;"	f	class:tncfhh::iel::ResultException
getRound	imunit/src/imunit/AbstractIMUnit.cpp	/^TNC_UInt32 AbstractIMUnit::getRound() const$/;"	f	class:tncfhh::iml::AbstractIMUnit
getServer	tncsim/src/server/libtnc/LibtncTNCS.cpp	/^server::AbstractTNCS * getServer(std::string &tncConfig)$/;"	f	namespace:tncsim::server
getServer	tncsim/src/server/tncfhh/TncfhhTNCS.cpp	/^server::AbstractTNCS * getServer(std::string &tncConfig)$/;"	f	namespace:tncsim::server
getSymbol	tncs/src/tncs/iel/IMVProperties.cpp	/^lt_ptr IMVProperties::getSymbol(lt_dlhandle handle, const char *name) throw (std::runtime_error)$/;"	f	class:tncfhh::iel::IMVProperties
getTNCCFunctionPointer	imunit/src/imunit/imc/IMCLibrary.cpp	/^void * IMCLibrary::getTNCCFunctionPointer(const char *functionName, TNC_BindFunctionPointer tncBindFunction) throw (ResultException)$/;"	f	class:tncfhh::iml::IMCLibrary
getTNCCSData	naaeap/src/naaeap/data/EapTncBuffer.cpp	/^iel::TNCCSData EapTncBuffer::getTNCCSData() const$/;"	f	class:tncfhh::nal::EapTncBuffer
getTNCCSDataLength	naaeap/src/naaeap/data/EapTncFragment.cpp	/^TNC_UInt32 EapTncFragment::getTNCCSDataLength() const$/;"	f	class:tncfhh::nal::EapTncFragment
getTNCSFunctionPointer	imunit/src/imunit/imv/IMVLibrary.cpp	/^void * IMVLibrary::getTNCSFunctionPointer(const char *functionName, TNC_BindFunctionPointer tncBindFunction) throw (ResultException)$/;"	f	class:tncfhh::iml::IMVLibrary
getTnccTncsMessages	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^std::list<TNCCTNCSMessage *> TNCCSBatch::getTnccTncsMessages()$/;"	f	class:tncfhh::iel::tnc1::TNCCSBatch
getType	tncs/src/tncs/iel/tnc1/IMCIMVMessage.cpp	/^TNC_MessageType IMCIMVMessage::getType()$/;"	f	class:tncfhh::iel::tnc1::IMCIMVMessage
getType	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^TNC_UInt32 TNCCSBatch::getType(xercesc::DOMElement & xmlType) throw (TNCCSProtocolNotSupportedException)$/;"	f	class:tncfhh::iel::tnc1::TNCCSBatch
getType	tncs/src/tncs/iel/tnc1/TNCCTNCSMessage.cpp	/^TNC_MessageType TNCCTNCSMessage::getType()$/;"	f	class:tncfhh::iel::tnc1::TNCCTNCSMessage
getVersion	vpn/libtncvpn/src/tncvpn/ifttls/VersionResponseMessage.h	/^	uint8_t getVersion() const { return version; }$/;"	f	class:ifttls::VersionResponseMessage
getXACMLRecommendation	tncxacml/src/tncxacml/XACMLHelper.cpp	/^TNC_IMV_Action_Recommendation XACMLHelper::getXACMLRecommendation($/;"	f	class:tncfhh::iml::XACMLHelper
getXML	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageXML.cpp	/^xercesc::DOMElement * TNCCTNCSMessageXML::getXML()$/;"	f	class:tncfhh::iel::tnc1::TNCCTNCSMessageXML
gt	imcv/clamav/imv/src/ClamavIMV.h	/^		gt,$/;"	e	enum:ClamavIMV::Operant
gte	imcv/clamav/imv/src/ClamavIMV.h	/^		gte,$/;"	e	enum:ClamavIMV::Operant
hAIK	imcv/attestation/imc/src/AttestationIMC.h	/^	TSS_HKEY	hAIK;$/;"	m	class:AttestationIMC
hAIK	imcv/procwatcher/imc/src/ProcwatcherIMC.h	/^    TSS_HKEY    hAIK;$/;"	m	class:ProcwatcherIMC
hContext	imcv/attestation/imc/src/AttestationIMC.h	/^	TSS_HCONTEXT 	hContext;$/;"	m	class:AttestationIMC
hContext	imcv/procwatcher/imc/src/ProcwatcherIMC.h	/^    TSS_HCONTEXT    hContext;$/;"	m	class:ProcwatcherIMC
hSRK	imcv/attestation/imc/src/AttestationIMC.h	/^	TSS_HKEY	hSRK;$/;"	m	class:AttestationIMC
hSRK	imcv/procwatcher/imc/src/ProcwatcherIMC.h	/^    TSS_HKEY    hSRK;$/;"	m	class:ProcwatcherIMC
hTPM	imcv/attestation/imc/src/AttestationIMC.h	/^	TSS_HTPM	hTPM;$/;"	m	class:AttestationIMC
hTPM	imcv/procwatcher/imc/src/ProcwatcherIMC.h	/^    TSS_HTPM    hTPM;$/;"	m	class:ProcwatcherIMC
handle	tncs/src/tncs/iel/IMVProperties.h	/^	lt_dlhandle handle;$/;"	m	class:tncfhh::iel::IMVProperties
handleAccept	vpn/naavpn/src/naavpn/TNCServer.cpp	/^void TNCServer::handleAccept(TNCSession* new_session, const boost::system::error_code& error) {$/;"	f	class:tnc::TNCServer
handleAcceptCompleted	vpn/vpnpep/src/vpnpep/PEPServer.h	/^	void handleAcceptCompleted(PEPSession* new_session,$/;"	f	class:tnc::PEPServer
handleClient	vpn/naavpn/src/naavpn/TNCSession.cpp	/^void TNCSession::handleClient() {$/;"	f	class:tnc::TNCSession
handleClient	vpn/vpnpep/src/vpnpep/PEPSession.h	/^	void handleClient() {$/;"	f	class:tnc::PEPSession
handleFatalError	tncs/src/tncs/iel/IMVProperties.cpp	/^void IMVProperties::handleFatalError()$/;"	f	class:tncfhh::iel::IMVProperties
handleFirstAndOnlyFragment	naaeap/src/naaeap/logic/Defragmentation.cpp	/^iel::TNCCSData Defragmentation::handleFirstAndOnlyFragment(TNC_ConnectionID conID, const EapTncFragment &input) throw (std::logic_error)$/;"	f	class:tncfhh::nal::Defragmentation
handleFirstFragment	naaeap/src/naaeap/logic/Defragmentation.cpp	/^void Defragmentation::handleFirstFragment(TNC_ConnectionID conID, const EapTncFragment &input) throw (std::logic_error)$/;"	f	class:tncfhh::nal::Defragmentation
handleHandshakeCompleted	vpn/naavpn/src/naavpn/PEPClient.cpp	/^void PEPClient::handleHandshakeCompleted() {$/;"	f	class:tnc::PEPClient
handleLastOrOnlyFragment	naaeap/src/naaeap/logic/Defragmentation.cpp	/^iel::TNCCSData Defragmentation::handleLastOrOnlyFragment(TNC_ConnectionID conID, const EapTncFragment &input) throw (std::logic_error)$/;"	f	class:tncfhh::nal::Defragmentation
handleMessage	vpn/naavpn/src/naavpn/MessageHandler.cpp	/^MessageHandler::handleMessage(Envelope* message) {$/;"	f	class:tnc::MessageHandler
handleMiddleFragment	naaeap/src/naaeap/logic/Defragmentation.cpp	/^void Defragmentation::handleMiddleFragment(TNC_ConnectionID conID, const EapTncFragment &input) throw (std::logic_error)$/;"	f	class:tncfhh::nal::Defragmentation
handleOtherError	tncs/src/tncs/iel/IMV.cpp	/^void IMV::handleOtherError()$/;"	f	class:tncfhh::iel::IMV
handleReadCompleted	vpn/vpnpep/src/vpnpep/PEPSession.h	/^	void handleReadCompleted(const boost::system::error_code& error, size_t bytes_transferred) {$/;"	f	class:tnc::PEPSession
handleTnccs20Batch	vpn/naavpn/src/naavpn/MessageHandler.cpp	/^MessageHandler::handleTnccs20Batch(Envelope* message) {$/;"	f	class:tnc::MessageHandler
handleWrite	vpn/naavpn/src/naavpn/PEPClient.cpp	/^void PEPClient::handleWrite(const boost::system::error_code& error, size_t bytes_transferred) {$/;"	f	class:tnc::PEPClient
handler	vpn/naavpn/src/naavpn/TNCSession.h	/^	MessageHandler *handler;$/;"	m	class:tnc::TNCSession
hasError	tncs/src/tncs/iel/IMV.cpp	/^bool IMV::hasError() const$/;"	f	class:tncfhh::iel::IMV
hasFatalError	tncs/src/tncs/iel/IMVProperties.h	/^	bool hasFatalError; \/\/ TODO - support for reinitialization$/;"	m	class:tncfhh::iel::IMVProperties
hasLengthIncluded	naaeap/src/naaeap/data/EapTncFragment.cpp	/^bool EapTncFragment::hasLengthIncluded() const$/;"	f	class:tncfhh::nal::EapTncFragment
hasMessageType	tncs/src/tncs/iel/IMVProperties.cpp	/^bool IMVProperties::hasMessageType(TNC_MessageType messageType) const$/;"	f	class:tncfhh::iel::IMVProperties
hasMoreFragments	naaeap/src/naaeap/data/EapTncFragment.cpp	/^bool EapTncFragment::hasMoreFragments() const$/;"	f	class:tncfhh::nal::EapTncFragment
hasProvideRecommendation	tncs/src/tncs/iel/IMV.cpp	/^bool IMV::hasProvideRecommendation()$/;"	f	class:tncfhh::iel::IMV
hasReplyMessage	vpn/naavpn/src/naavpn/MessageHandler.cpp	/^MessageHandler::hasReplyMessage() const {$/;"	f	class:tnc::MessageHandler
hashAll	imcv/procwatcher/imv/src/ProcwatcherIMV.h	/^    unsigned char * hashAll;$/;"	m	class:ProcwatcherIMV
header	vpn/vpnclient/src/vpnclient/TNCClient.h	/^	char header[ifttls::Envelope::IFT_HEADER_LENGTH];$/;"	m	class:tnc::TNCClient
header_	vpn/naavpn/src/naavpn/TNCSession.h	/^	unsigned char header_[ifttls::Envelope::IFT_HEADER_LENGTH];$/;"	m	class:tnc::TNCSession
header_len	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.h	/^	static const int header_len = 16;$/;"	m	class:ifttls::Envelope
id	tncs/src/tncs/iel/IMVProperties.h	/^	TNC_IMVID id;$/;"	m	class:tncfhh::iel::IMVProperties
id	tncs/src/tncs/iel/tnc1/TNCCSBatch.h	/^	TNC_UInt32 id;$/;"	m	class:tncfhh::iel::tnc1::TNCCSBatch
iel	tncs/src/tncs/exception/ConnectionStateException.cpp	/^namespace iel$/;"	n	namespace:tncfhh	file:
iel	tncs/src/tncs/exception/ConnectionStateException.h	/^namespace iel$/;"	n	namespace:tncfhh
iel	tncs/src/tncs/exception/ConnectionStateExceptionWithTNCCSData.cpp	/^namespace iel$/;"	n	namespace:tncfhh	file:
iel	tncs/src/tncs/exception/ConnectionStateExceptionWithTNCCSData.h	/^namespace iel$/;"	n	namespace:tncfhh
iel	tncs/src/tncs/exception/ResultException.cpp	/^namespace iel$/;"	n	namespace:tncfhh	file:
iel	tncs/src/tncs/exception/ResultException.h	/^namespace iel$/;"	n	namespace:tncfhh
iel	tncs/src/tncs/exception/TNCCSProtocolNotSupportedException.cpp	/^namespace iel$/;"	n	namespace:tncfhh	file:
iel	tncs/src/tncs/exception/TNCCSProtocolNotSupportedException.h	/^namespace iel$/;"	n	namespace:tncfhh
iel	tncs/src/tncs/iel/AbstractTNCCSProtocol.cpp	/^namespace iel {$/;"	n	namespace:tncfhh	file:
iel	tncs/src/tncs/iel/AbstractTNCCSProtocol.h	/^namespace iel {$/;"	n	namespace:tncfhh
iel	tncs/src/tncs/iel/Connection.cpp	/^namespace iel {$/;"	n	namespace:tncfhh	file:
iel	tncs/src/tncs/iel/Connection.h	/^namespace iel {$/;"	n	namespace:tncfhh
iel	tncs/src/tncs/iel/Coordinator.cpp	/^namespace iel {$/;"	n	namespace:tncfhh	file:
iel	tncs/src/tncs/iel/Coordinator.h	/^namespace iel {$/;"	n	namespace:tncfhh
iel	tncs/src/tncs/iel/IMV.cpp	/^namespace iel {$/;"	n	namespace:tncfhh	file:
iel	tncs/src/tncs/iel/IMV.h	/^namespace iel {$/;"	n	namespace:tncfhh
iel	tncs/src/tncs/iel/IMVProperties.cpp	/^namespace iel {$/;"	n	namespace:tncfhh	file:
iel	tncs/src/tncs/iel/IMVProperties.h	/^namespace iel {$/;"	n	namespace:tncfhh
iel	tncs/src/tncs/iel/Policy.cpp	/^namespace iel {$/;"	n	namespace:tncfhh	file:
iel	tncs/src/tncs/iel/Policy.h	/^namespace iel {$/;"	n	namespace:tncfhh
iel	tncs/src/tncs/iel/TNCCSData.cpp	/^namespace iel {$/;"	n	namespace:tncfhh	file:
iel	tncs/src/tncs/iel/TNCCSData.h	/^namespace iel$/;"	n	namespace:tncfhh
iel	tncs/src/tncs/iel/soh/SOH1Protocol.cpp	/^namespace iel {$/;"	n	namespace:tncfhh	file:
iel	tncs/src/tncs/iel/soh/SOH1Protocol.h	/^namespace iel {$/;"	n	namespace:tncfhh
iel	tncs/src/tncs/iel/tnc1/IMCIMVMessage.cpp	/^namespace iel {$/;"	n	namespace:tncfhh	file:
iel	tncs/src/tncs/iel/tnc1/IMCIMVMessage.h	/^namespace iel$/;"	n	namespace:tncfhh
iel	tncs/src/tncs/iel/tnc1/TNC1Protocol.cpp	/^namespace iel {$/;"	n	namespace:tncfhh	file:
iel	tncs/src/tncs/iel/tnc1/TNC1Protocol.h	/^namespace iel {$/;"	n	namespace:tncfhh
iel	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^namespace iel {$/;"	n	namespace:tncfhh	file:
iel	tncs/src/tncs/iel/tnc1/TNCCSBatch.h	/^namespace iel {$/;"	n	namespace:tncfhh
iel	tncs/src/tncs/iel/tnc1/TNCCTNCSMessage.cpp	/^namespace iel {$/;"	n	namespace:tncfhh	file:
iel	tncs/src/tncs/iel/tnc1/TNCCTNCSMessage.h	/^namespace iel {$/;"	n	namespace:tncfhh
iel	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageBase64.cpp	/^namespace iel$/;"	n	namespace:tncfhh	file:
iel	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageBase64.h	/^namespace iel {$/;"	n	namespace:tncfhh
iel	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageXML.cpp	/^namespace iel$/;"	n	namespace:tncfhh	file:
iel	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageXML.h	/^namespace iel {$/;"	n	namespace:tncfhh
ifImcImvVersion	imunit/src/imunit/IMUnitLibrary.h	/^	TNC_Version ifImcImvVersion;$/;"	m	class:tncfhh::iml::IMUnitLibrary
ifimvVersion	tncs/src/tncs/iel/IMVProperties.h	/^	TNC_Version ifimvVersion;$/;"	m	class:tncfhh::iel::IMVProperties
iftnccsNamespaceURI	tncs/src/tncs/iel/tnc1/TNCCSBatch.h	/^	static const XercesString iftnccsNamespaceURI;$/;"	m	class:tncfhh::iel::tnc1::TNCCSBatch
ifttls	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.cpp	/^namespace ifttls {$/;"	n	file:
ifttls	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.h	/^namespace ifttls {$/;"	n
ifttls	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.cpp	/^namespace ifttls {$/;"	n	file:
ifttls	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.h	/^namespace ifttls {$/;"	n
ifttls	vpn/libtncvpn/src/tncvpn/ifttls/VersionRequestMessage.h	/^namespace ifttls {$/;"	n
ifttls	vpn/libtncvpn/src/tncvpn/ifttls/VersionResponseMessage.h	/^namespace ifttls {$/;"	n
ifttlsConnection	vpn/naavpn/src/naavpn/TNCSession.h	/^	ifttls::IFTTLSConnection *ifttlsConnection;$/;"	m	class:tnc::TNCSession
ifttlsConnection	vpn/vpnclient/src/vpnclient/TNCClient.h	/^	ifttls::IFTTLSConnection ifttlsConnection;$/;"	m	class:tnc::TNCClient
imUnitLibraryID	imunit/src/imunit/IMUnitLibrary.h	/^	TNC_IMUnitID imUnitLibraryID;$/;"	m	class:tncfhh::iml::IMUnitLibrary
imUnitLibraryName	imunit/src/imunit/IMUnitLibrary.h	/^	std::string imUnitLibraryName;$/;"	m	class:tncfhh::iml::IMUnitLibrary
imcImvMessages	tncs/src/tncs/iel/tnc1/TNCCSBatch.h	/^	std::list<IMCIMVMessage *> imcImvMessages;$/;"	m	class:tncfhh::iel::tnc1::TNCCSBatch
imcInstances	imunit/src/imunit/imc/IMCLibrary.h	/^	std::map<TNC_ConnectionID, AbstractIMC *> imcInstances;$/;"	m	class:tncfhh::iml::IMCLibrary
iml	imcv/attestation/imv/src/AttestationIMVPolicyManager.cpp	/^namespace iml {$/;"	n	namespace:tncfhh	file:
iml	imcv/attestation/imv/src/AttestationIMVPolicyManager.h	/^namespace iml {$/;"	n	namespace:tncfhh
iml	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.cpp	/^namespace iml {$/;"	n	namespace:tncfhh	file:
iml	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.h	/^namespace iml {$/;"	n	namespace:tncfhh
iml	imunit/src/imunit/AbstractIMUnit.cpp	/^namespace iml {$/;"	n	namespace:tncfhh	file:
iml	imunit/src/imunit/AbstractIMUnit.h	/^namespace iml {$/;"	n	namespace:tncfhh
iml	imunit/src/imunit/IMUnitLibrary.cpp	/^namespace iml {$/;"	n	namespace:tncfhh	file:
iml	imunit/src/imunit/IMUnitLibrary.h	/^namespace iml {$/;"	n	namespace:tncfhh
iml	imunit/src/imunit/exception/ResultException.cpp	/^namespace iml$/;"	n	namespace:tncfhh	file:
iml	imunit/src/imunit/exception/ResultException.h	/^namespace iml$/;"	n	namespace:tncfhh
iml	imunit/src/imunit/imc/AbstractIMC.cpp	/^namespace iml {$/;"	n	namespace:tncfhh	file:
iml	imunit/src/imunit/imc/AbstractIMC.h	/^namespace iml {$/;"	n	namespace:tncfhh
iml	imunit/src/imunit/imc/IMCLibrary.cpp	/^namespace iml {$/;"	n	namespace:tncfhh	file:
iml	imunit/src/imunit/imc/IMCLibrary.h	/^namespace iml {$/;"	n	namespace:tncfhh
iml	imunit/src/imunit/imc/TNCC.cpp	/^namespace iml {$/;"	n	namespace:tncfhh	file:
iml	imunit/src/imunit/imc/TNCC.h	/^namespace iml {$/;"	n	namespace:tncfhh
iml	imunit/src/imunit/imv/AbstractIMV.cpp	/^namespace iml {$/;"	n	namespace:tncfhh	file:
iml	imunit/src/imunit/imv/AbstractIMV.h	/^namespace iml {$/;"	n	namespace:tncfhh
iml	imunit/src/imunit/imv/IMVLibrary.cpp	/^namespace iml {$/;"	n	namespace:tncfhh	file:
iml	imunit/src/imunit/imv/IMVLibrary.h	/^namespace iml {$/;"	n	namespace:tncfhh
iml	imunit/src/imunit/imv/TNCS.cpp	/^namespace iml {$/;"	n	namespace:tncfhh	file:
iml	imunit/src/imunit/imv/TNCS.h	/^namespace iml {$/;"	n	namespace:tncfhh
iml	tncxacml/src/tncxacml/XACMLConstants.cpp	/^namespace iml {$/;"	n	namespace:tncfhh	file:
iml	tncxacml/src/tncxacml/XACMLConstants.h	/^namespace iml {$/;"	n	namespace:tncfhh
iml	tncxacml/src/tncxacml/XACMLHelper.cpp	/^namespace iml {$/;"	n	namespace:tncfhh	file:
iml	tncxacml/src/tncxacml/XACMLHelper.h	/^namespace iml {$/;"	n	namespace:tncfhh
imvIdCounter	tncs/src/tncs/iel/Coordinator.h	/^	TNC_UInt32 imvIdCounter;$/;"	m	class:tncfhh::iel::Coordinator
imvInstances	imunit/src/imunit/imv/IMVLibrary.h	/^	std::map<TNC_ConnectionID, AbstractIMV *> imvInstances;$/;"	m	class:tncfhh::iml::IMVLibrary
imvInstances	tncs/src/tncs/iel/Connection.h	/^	std::map<TNC_IMVID, IMV*> imvInstances;$/;"	m	class:tncfhh::iel::Connection
imvProperties	tncs/src/tncs/iel/Coordinator.h	/^	std::map<TNC_IMVID, IMVProperties *> imvProperties;$/;"	m	class:tncfhh::iel::Coordinator
imvProperties	tncs/src/tncs/iel/IMV.h	/^	IMVProperties *imvProperties;$/;"	m	class:tncfhh::iel::IMV
imvs	tncs/src/tncs/iel/AbstractTNCCSProtocol.h	/^	std::map<TNC_IMVID, IMV*> imvs;$/;"	m	class:tncfhh::iel::AbstractTNCCSProtocol
inBatchEnding	tncs/src/tncs/iel/IMV.h	/^	bool inBatchEnding;$/;"	m	class:tncfhh::iel::IMV
inNotifyConnectionChange	tncs/src/tncs/iel/IMV.h	/^	bool inNotifyConnectionChange;$/;"	m	class:tncfhh::iel::IMV
inReceiveMessage	tncs/src/tncs/iel/IMV.h	/^	bool inReceiveMessage;$/;"	m	class:tncfhh::iel::IMV
inSolicitRecommendation	tncs/src/tncs/iel/IMV.h	/^	bool inSolicitRecommendation;$/;"	m	class:tncfhh::iel::IMV
incoming	tncs/src/tncs/iel/tnc1/TNC1Protocol.h	/^	TNCCSBatch incoming;$/;"	m	class:tncfhh::iel::tnc1::TNC1Protocol
index	imcv/attestation/imv/src/AttestationIMVPolicyManager.h	/^	unsigned int index;$/;"	m	class:tncfhh::iml::PcrEntry
index	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.h	/^	unsigned int index;$/;"	m	class:tncfhh::iml::PcrEntry
info_arch	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_platform	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
init	imcv/attestation/imc/src/PcrSelection.cpp	/^void PcrSelection::init(TNC_BufferReference br, UINT16 length) {$/;"	f	class:PcrSelection
init	imcv/example/imc/src/ExampleIMC.cpp	/^void ExampleIMC::Policy::init(){paths.clear();}$/;"	f	class:ExampleIMC::Policy
init	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^void ProcwatcherIMC::Policy::init(){paths.clear();}$/;"	f	class:ProcwatcherIMC::Policy
initTpmStuff	imcv/attestation/imc/src/AttestationIMC.cpp	/^int AttestationIMC::initTpmStuff() {$/;"	f	class:AttestationIMC
initTpmStuff	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^int ProcwatcherIMC::initTpmStuff() {$/;"	f	class:ProcwatcherIMC
initialize	imunit/src/imunit/IMUnitLibrary.cpp	/^TNC_Result IMUnitLibrary::initialize(TNC_IMUnitID imUnitID,$/;"	f	class:tncfhh::iml::IMUnitLibrary
initialize	naaeap/src/naaeap/naaeap.cpp	/^TNC_IMV_API TNC_Result initialize(\/* in *\/ const char* tnc_config)$/;"	f
initialize	tncs/src/tncs/iel/Coordinator.cpp	/^void Coordinator::initialize() throw (std::domain_error)$/;"	f	class:tncfhh::iel::Coordinator
initialize	tncs/src/tncs/iel/Coordinator.cpp	/^void Coordinator::initialize(std::string file) throw (std::domain_error)$/;"	f	class:tncfhh::iel::Coordinator
initializeDefault	naaeap/src/naaeap/naaeap.cpp	/^TNC_IMV_API TNC_Result initializeDefault()$/;"	f
initializeEngine	imcv/platid/imc/src/PlatidIMC.cpp	/^int PlatidIMC::initializeEngine(void)$/;"	f	class:PlatidIMC
initializePointer	tncs/src/tncs/iel/IMVProperties.h	/^	TNC_IMV_InitializePointer initializePointer; \/\/Mandatory$/;"	m	class:tncfhh::iel::IMVProperties
initialized	imcv/attestation/imc/src/AttestationIMC.h	/^	bool				initialized;$/;"	m	class:AttestationIMC
initialized	imcv/platid/imc/src/PlatidIMC.h	/^	bool initialized;$/;"	m	class:PlatidIMC
initialized	imcv/procwatcher/imc/src/ProcwatcherIMC.h	/^    bool initialized;$/;"	m	class:ProcwatcherIMC
instance	tncutil/src/tncutil/Configuration.cpp	/^Configuration* Configuration::instance() {$/;"	f	class:tncfhh::Configuration
instance	tncutil/src/tncutil/ConfigurationService.h	/^	static ConfigurationService* instance() {$/;"	f	class:tncfhh::ConfigurationService
int eapttls  _process  EAP  _HANDLER  handler  tls  _session  _t  tls  _session 	doc/freeradius-eapttls-patch/rlm_eap_ttls.tex	/^\\paragraph{int eapttls\\_process(EAP\\_HANDLER* handler, tls\\_session\\_t* tls\\_session)}$/;"	P
io_service_	vpn/libtncvpn/src/tncvpn/ssl/Server.h	/^    boost::asio::io_service& io_service_;$/;"	m	class:tnc::ssl::Server
ip	vpn/libtncvpn/src/tncvpn/libtnac/AllowDenyPacket.h	/^	char* ip;$/;"	m	class:pep::AllowDenyPacket
ip_version_identifier	vpn/libtncvpn/src/tncvpn/libtnac/AllowDenyPacket.cpp	/^const char ip_version_identifier = 4;$/;"	m	namespace:pep	file:
isASN1	imcv/attestation/imv/src/AttestationIMV.cpp	/^bool AttestationIMV::isASN1(TNC_BufferReference message, TNC_UInt32 length)$/;"	f	class:AttestationIMV
isASN1	imcv/procwatcher/imv/src/ProcwatcherIMV.cpp	/^bool ProcwatcherIMV::isASN1(TNC_BufferReference message, TNC_UInt32 length)$/;"	f	class:ProcwatcherIMV
isAikKnown	imcv/attestation/imv/src/AttestationIMVPolicyManager.cpp	/^bool AttestationIMVPolicyManager::isAikKnown(std::string fingerprint)$/;"	f	class:tncfhh::iml::AttestationIMVPolicyManager
isAikKnown	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.cpp	/^bool ProcwatcherIMVPolicyManager::isAikKnown(std::string fingerprint)$/;"	f	class:tncfhh::iml::ProcwatcherIMVPolicyManager
isCertKnown	imcv/platid/imv/src/FileCertManager.cpp	/^bool FileCertManager::isCertKnown(std::string dn, std::string fingerprint)$/;"	f	class:FileCertManager
isFinished	vpn/naavpn/src/naavpn/MessageHandler.h	/^	bool isFinished() const { return finished_; }$/;"	f	class:tnc::MessageHandler
isFinished	vpn/vpnclient/src/vpnclient/LibTNCClient.h	/^	bool isFinished() const { return finished_; };$/;"	f	class:tnc::LibTNCClient
isFirst	tncs/src/tncs/iel/tnc1/TNC1Protocol.h	/^	bool isFirst;$/;"	m	class:tncfhh::iel::tnc1::TNC1Protocol
isIMUnitLibraryInitialized	imunit/src/imunit/IMUnitLibrary.h	/^	bool isIMUnitLibraryInitialized;$/;"	m	class:tncfhh::iml::IMUnitLibrary
isInBatchEnding	tncs/src/tncs/iel/IMV.cpp	/^bool IMV::isInBatchEnding()$/;"	f	class:tncfhh::iel::IMV
isInNotifyConnectionChange	tncs/src/tncs/iel/IMV.cpp	/^bool IMV::isInNotifyConnectionChange()$/;"	f	class:tncfhh::iel::IMV
isInReceiveMessage	tncs/src/tncs/iel/IMV.cpp	/^bool IMV::isInReceiveMessage()$/;"	f	class:tncfhh::iel::IMV
isInSolicitRecommendation	tncs/src/tncs/iel/IMV.cpp	/^bool IMV::isInSolicitRecommendation()$/;"	f	class:tncfhh::iel::IMV
isInit	tncs/src/tncs/iel/Coordinator.h	/^	bool isInit;$/;"	m	class:tncfhh::iel::Coordinator
isNewPacket	vpn/libtncvpn/src/tncvpn/libtnac/TLVBuffer.h	/^	bool isNewPacket() {$/;"	f	class:TLVBuffer
isPacketComplete	vpn/libtncvpn/src/tncvpn/libtnac/TLVBuffer.h	/^	bool isPacketComplete() {$/;"	f	class:TLVBuffer
isProvideRecommendationSet	tncs/src/tncs/iel/IMV.h	/^	bool isProvideRecommendationSet;$/;"	m	class:tncfhh::iel::IMV
key	imcv/clamav/imv/src/ClamavIMV.h	/^		Key key;$/;"	m	class:ClamavIMV::Measurement
key	imcv/clamav/imv/src/ClamavIMV.h	/^		Key key;$/;"	m	class:ClamavIMV::PolicyEntry
keyAsString	imcv/clamav/imv/src/ClamavIMV.h	/^		std::string keyAsString;$/;"	m	class:ClamavIMV::Measurement
knownAiks	imcv/attestation/imv/src/AttestationIMVPolicyManager.h	/^	std::vector<std::string> knownAiks;$/;"	m	class:tncfhh::iml::AttestationIMVPolicyManager
knownAiks	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.h	/^	std::vector<std::string> knownAiks;$/;"	m	class:tncfhh::iml::ProcwatcherIMVPolicyManager
lastData	tncsim/src/server/Finished.h	/^	TNCCSData lastData;$/;"	m	class:tncsim::server::Finished
lastTnccsData	tncs/src/tncs/exception/ConnectionStateExceptionWithTNCCSData.h	/^	TNCCSData lastTnccsData;$/;"	m	class:tncfhh::iel::ConnectionStateExceptionWithTNCCSData
last_assessment	vpn/libtncvpn/src/tncvpn/iel/Endpoint.h	/^	time_t last_assessment;$/;"	m	class:tnc::Endpoint
lengthIncluded	naaeap/src/naaeap/data/EapTncFragment.h	/^	bool lengthIncluded;$/;"	m	class:tncfhh::nal::EapTncFragment
libTncClient	vpn/vpnclient/src/vpnclient/TNCClient.h	/^	LibTNCClient libTncClient;$/;"	m	class:tnc::TNCClient
libtnc	tncsim/src/client/libtnc/LibtncTNCC.cpp	/^namespace libtnc {$/;"	n	namespace:tncsim::client	file:
libtnc	tncsim/src/client/libtnc/LibtncTNCC.h	/^namespace libtnc {$/;"	n	namespace:tncsim::client
libtnc	tncsim/src/server/libtnc/LibtncTNCS.cpp	/^namespace libtnc {$/;"	n	namespace:tncsim::server	file:
libtnc	tncsim/src/server/libtnc/LibtncTNCS.h	/^namespace libtnc {$/;"	n	namespace:tncsim::server
loadAikBlob	imcv/attestation/imc/src/AttestationIMC.cpp	/^int AttestationIMC::loadAikBlob()$/;"	f	class:AttestationIMC
loadAikBlob	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^int ProcwatcherIMC::loadAikBlob()$/;"	f	class:ProcwatcherIMC
loadBlobToBuf	imcv/attestation/imc/src/AttestationIMC.cpp	/^int AttestationIMC::loadBlobToBuf(TNC_BufferReference *buf, const char *filename)$/;"	f	class:AttestationIMC
loadBlobToBuf	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^int ProcwatcherIMC::loadBlobToBuf(TNC_BufferReference *buf, const char *filename)$/;"	f	class:ProcwatcherIMC
loadCertificate	imcv/platid/imc/src/PlatidIMC.cpp	/^int PlatidIMC::loadCertificate(void)$/;"	f	class:PlatidIMC
loadCertsFromFile	imcv/platid/imv/src/FileCertManager.cpp	/^int FileCertManager::loadCertsFromFile(const char *certfile)$/;"	f	class:FileCertManager
loadConfigFile	imcv/attestation/imc/src/AttestationIMC.cpp	/^int AttestationIMC::loadConfigFile(void)$/;"	f	class:AttestationIMC
loadConfigFile	imcv/platid/imc/src/PlatidIMC.cpp	/^int PlatidIMC::loadConfigFile(void)$/;"	f	class:PlatidIMC
loadConfigFile	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^int ProcwatcherIMC::loadConfigFile(void)$/;"	f	class:ProcwatcherIMC
loadPKey	imcv/attestation/imv/src/AttestationIMV.cpp	/^int AttestationIMV::loadPKey(void)$/;"	f	class:AttestationIMV
loadPKey	imcv/platid/imv/src/PlatidIMV.cpp	/^int PlatidIMV::loadPKey(void)$/;"	f	class:PlatidIMV
loadPKey	imcv/procwatcher/imv/src/ProcwatcherIMV.cpp	/^int ProcwatcherIMV::loadPKey(void)$/;"	f	class:ProcwatcherIMV
loadRSA	imcv/attestation/imv/src/AttestationIMV.cpp	/^int AttestationIMV::loadRSA(void)$/;"	f	class:AttestationIMV
loadRSA	imcv/platid/imv/src/PlatidIMV.cpp	/^int PlatidIMV::loadRSA(void)$/;"	f	class:PlatidIMV
loadRSA	imcv/procwatcher/imv/src/ProcwatcherIMV.cpp	/^int ProcwatcherIMV::loadRSA(void)$/;"	f	class:ProcwatcherIMV
loadRsa	imcv/platid/imc/src/PlatidIMC.cpp	/^int PlatidIMC::loadRsa()$/;"	f	class:PlatidIMC
loadX509Cert	imcv/attestation/imv/src/AttestationIMV.cpp	/^int AttestationIMV::loadX509Cert(TNC_BufferReference message, TNC_UInt32 length)$/;"	f	class:AttestationIMV
loadX509Cert	imcv/platid/imv/src/PlatidIMV.cpp	/^int PlatidIMV::loadX509Cert(TNC_BufferReference message, TNC_UInt32 length)$/;"	f	class:PlatidIMV
loadX509Cert	imcv/procwatcher/imv/src/ProcwatcherIMV.cpp	/^int ProcwatcherIMV::loadX509Cert(TNC_BufferReference message, TNC_UInt32 length)$/;"	f	class:ProcwatcherIMV
loadX509Certificate	imcv/attestation/imc/src/AttestationIMC.cpp	/^int AttestationIMC::loadX509Certificate(void)$/;"	f	class:AttestationIMC
loadX509Certificate	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^int ProcwatcherIMC::loadX509Certificate(void)$/;"	f	class:ProcwatcherIMC
localFileAction	imcv/dummy/imc/src/DummyIMC.h	/^	std::string localFileAction;$/;"	m	class:DummyIMC
logger	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.cpp	/^static log4cxx::LoggerPtr logger = log4cxx::Logger::getLogger(LOGNAME);$/;"	v	file:
logger	vpn/naavpn/src/naavpn/MessageHandler.cpp	/^static log4cxx::LoggerPtr logger = log4cxx::Logger::getLogger(LOGNAME);$/;"	v	file:
logger	vpn/naavpn/src/naavpn/TNCServer.cpp	/^static log4cxx::LoggerPtr logger = log4cxx::Logger::getLogger(LOGNAME);$/;"	v	file:
logger	vpn/naavpn/src/naavpn/TNCSession.cpp	/^static log4cxx::LoggerPtr logger = log4cxx::Logger::getLogger(LOGNAME);$/;"	v	file:
logger	vpn/vpnclient/src/vpnclient/LibTNCClient.cpp	/^static log4cxx::LoggerPtr logger = log4cxx::Logger::getLogger(LOGNAME);$/;"	m	namespace:tnc	file:
logger	vpn/vpnclient/src/vpnclient/TNCClient.cpp	/^static log4cxx::LoggerPtr logger = log4cxx::Logger::getLogger(LOGNAME);$/;"	v	file:
lt	imcv/clamav/imv/src/ClamavIMV.h	/^		lt,$/;"	e	enum:ClamavIMV::Operant
lte	imcv/clamav/imv/src/ClamavIMV.h	/^		lte,$/;"	e	enum:ClamavIMV::Operant
main	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f
main	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	hash/ps.cpp	/^int main (void)$/;"	f
main	imcv/attestation/imv/test/main.cpp	/^int main()$/;"	f
main	imcv/platid/imc/src/testing.c	/^int main()$/;"	f
main	tncsim/src/tncsim.cpp	/^int main(int argc, char **argv) {$/;"	f
main	vpn/naavpn/src/server/main.cpp	/^int main(int argc, char* argv[]) {$/;"	f
main	vpn/vpnclient/src/vpnclient/main.cpp	/^int main(int argc, char* argv[]) {$/;"	f
main	vpn/vpnpep/src/vpnpep/main.cpp	/^int main(int argc, char **argv) {$/;"	f
map	tncutil/src/tncutil/Configuration.h	/^	std::map<std::string,std::string> map;$/;"	m	class:tncfhh::Configuration
maxFragmentDataSize	naaeap/src/naaeap/logic/Fragmentation.h	/^	TNC_UInt32 maxFragmentDataSize;$/;"	m	class:tncfhh::nal::Fragmentation
maxPcr	imcv/attestation/imc/src/PcrSelection.h	/^	long maxPcr;$/;"	m	class:PcrSelection
max_length	vpn/libtncvpn/src/tncvpn/ssl/Client.h	/^	max_length = 1024$/;"	e	enum:tnc::ssl::__anon1
max_length	vpn/libtncvpn/src/tncvpn/ssl/Session.h	/^	enum { max_length = 1024 };$/;"	e	enum:tnc::ssl::Session::__anon2
max_pkt_size	vpn/libtncvpn/src/tncvpn/libtnac/TLVBuffer.h	/^	unsigned max_pkt_size;$/;"	m	class:TLVBuffer
max_vers	vpn/libtncvpn/src/tncvpn/ifttls/VersionRequestMessage.h	/^	uint8_t max_vers;$/;"	m	class:ifttls::VersionRequestMessage
measure	imcv/clamav/imc/src/ClamavIMC.cpp	/^void ClamavIMC::measure(){$/;"	f	class:ClamavIMC
message	imunit/src/imunit/exception/ResultException.h	/^    std::string message;$/;"	m	class:tncfhh::iml::ResultException
message	tncs/src/tncs/exception/ResultException.h	/^	std::string message;$/;"	m	class:tncfhh::iel::ResultException
message	tncs/src/tncs/exception/TNCCSProtocolNotSupportedException.h	/^	std::string message;$/;"	m	class:tncfhh::iel::TNCCSProtocolNotSupportedException
messageTypeList	imunit/src/imunit/IMUnitLibrary.h	/^	TNC_MessageTypeList messageTypeList;$/;"	m	class:tncfhh::iml::IMUnitLibrary
messageTypes	tncs/src/tncs/iel/IMVProperties.h	/^	std::list<TNC_MessageType> messageTypes;$/;"	m	class:tncfhh::iel::IMVProperties
message_identifier	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.h	/^	uint32_t message_identifier;$/;"	m	class:ifttls::Envelope
message_length	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.h	/^	uint32_t message_length;$/;"	m	class:ifttls::Envelope
message_type	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.h	/^	uint32_t message_type;$/;"	m	class:ifttls::Envelope
message_type_vendor_id	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.cpp	/^char Envelope::message_type_vendor_id[] = {0x00, 0x55, 0x97};$/;"	m	class:ifttls::Envelope	file:
message_type_vendor_id	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.h	/^	static char message_type_vendor_id[];$/;"	m	class:ifttls::Envelope
message_value	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.h	/^	char*    message_value;$/;"	m	class:ifttls::Envelope
min_vers	vpn/libtncvpn/src/tncvpn/ifttls/VersionRequestMessage.h	/^	uint8_t min_vers;$/;"	m	class:ifttls::VersionRequestMessage
moreFragments	naaeap/src/naaeap/data/EapTncFragment.h	/^	bool moreFragments;$/;"	m	class:tncfhh::nal::EapTncFragment
msgCountCur	imcv/dummy/imv/src/DummyIMV.h	/^	int msgCountCur;$/;"	m	class:DummyIMV
msgCountMax	imcv/dummy/imv/src/DummyIMV.h	/^	int msgCountMax;$/;"	m	class:DummyIMV
msg_count	vpn/vpnclient/src/vpnclient/TNCMockClient.h	/^	int msg_count;$/;"	m	class:TNCMockClient
myImcConn	tncsim/src/client/libtnc/LibtncTNCC.h	/^	libtnc_tncc_connection* myImcConn;$/;"	m	class:tncsim::client::libtnc::LibtncTNCC
myImvConn	tncsim/src/server/libtnc/LibtncTNCS.h	/^	libtnc_tncs_connection* myImvConn;$/;"	m	class:tncsim::server::libtnc::LibtncTNCS
nPCR	imcv/attestation/imc/src/AttestationIMC.h	/^	UINT32		nPCR;$/;"	m	class:AttestationIMC
naaeap	naaeap/src/naaeap/naaeap.cpp	/^namespace naaeap {$/;"	n	namespace:tncfhh	file:
nal	naaeap/src/naaeap/data/EapTncBuffer.cpp	/^namespace nal$/;"	n	namespace:tncfhh	file:
nal	naaeap/src/naaeap/data/EapTncBuffer.h	/^namespace nal$/;"	n	namespace:tncfhh
nal	naaeap/src/naaeap/data/EapTncFragment.cpp	/^namespace nal$/;"	n	namespace:tncfhh	file:
nal	naaeap/src/naaeap/data/EapTncFragment.h	/^namespace nal$/;"	n	namespace:tncfhh
nal	naaeap/src/naaeap/exception/AcknowledgementException.cpp	/^namespace nal {$/;"	n	namespace:tncfhh	file:
nal	naaeap/src/naaeap/exception/AcknowledgementException.h	/^namespace nal {$/;"	n	namespace:tncfhh
nal	naaeap/src/naaeap/logic/Defragmentation.cpp	/^namespace nal$/;"	n	namespace:tncfhh	file:
nal	naaeap/src/naaeap/logic/Defragmentation.h	/^namespace nal$/;"	n	namespace:tncfhh
nal	naaeap/src/naaeap/logic/Fragmentation.cpp	/^namespace nal$/;"	n	namespace:tncfhh	file:
nal	naaeap/src/naaeap/logic/Fragmentation.h	/^namespace nal$/;"	n	namespace:tncfhh
name	tncs/src/tncs/iel/IMVProperties.h	/^	std::string name;$/;"	m	class:tncfhh::iel::IMVProperties
new_packet	vpn/libtncvpn/src/tncvpn/libtnac/TLVBuffer.h	/^	bool new_packet;$/;"	m	class:TLVBuffer
nextPacket	vpn/libtncvpn/src/tncvpn/libtnac/TLVBuffer.h	/^	void nextPacket() {$/;"	f	class:TLVBuffer
nonce	imcv/procwatcher/imc/src/ProcwatcherIMC.h	/^    unsigned char *nonce;$/;"	m	class:ProcwatcherIMC
nonceBuf	imcv/procwatcher/imv/src/ProcwatcherIMV.h	/^    unsigned char *nonceBuf ; $/;"	m	class:ProcwatcherIMV
nonceSent	imcv/platid/imv/src/PlatidIMV.h	/^	bool			nonceSent;$/;"	m	class:PlatidIMV
noop	imcv/attestation/imc/src/AttestationIMC.cpp	/^static void noop() {$/;"	f	file:
noop	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^static void noop()$/;"	f	file:
nothingWrong	imcv/attestation/imv/src/AttestationIMV.h	/^	bool				nothingWrong;$/;"	m	class:AttestationIMV
nothingWrong	imcv/platid/imv/src/PlatidIMV.h	/^	bool			nothingWrong;$/;"	m	class:PlatidIMV
nothingWrong	imcv/procwatcher/imv/src/ProcwatcherIMV.h	/^    bool nothingWrong;$/;"	m	class:ProcwatcherIMV
notifyConnectionChange	imcv/attestation/imc/src/AttestationIMC.cpp	/^TNC_Result AttestationIMC::notifyConnectionChange()$/;"	f	class:AttestationIMC
notifyConnectionChange	imcv/attestation/imv/src/AttestationIMV.cpp	/^TNC_Result AttestationIMV::notifyConnectionChange(TNC_ConnectionState newState)$/;"	f	class:AttestationIMV
notifyConnectionChange	imcv/clamav/imv/src/ClamavIMV.cpp	/^TNC_Result ClamavIMV::notifyConnectionChange() {$/;"	f	class:ClamavIMV
notifyConnectionChange	imcv/dummy/imv/src/DummyIMV.cpp	/^TNC_Result DummyIMV::notifyConnectionChange() {$/;"	f	class:DummyIMV
notifyConnectionChange	imcv/example/imc/src.bk/ExampleIMC.cpp	/^TNC_Result ExampleIMC::notifyConnectionChange()$/;"	f	class:ExampleIMC
notifyConnectionChange	imcv/example/imc/src/ExampleIMC.cpp	/^TNC_Result ExampleIMC::notifyConnectionChange()$/;"	f	class:ExampleIMC
notifyConnectionChange	imcv/example/imv/src.bk/ExampleIMV.cpp	/^TNC_Result ExampleIMV::notifyConnectionChange()$/;"	f	class:ExampleIMV
notifyConnectionChange	imcv/example/imv/src/ExampleIMV.cpp	/^TNC_Result ExampleIMV::notifyConnectionChange()$/;"	f	class:ExampleIMV
notifyConnectionChange	imcv/hostscanner/imv/src/HostScannerIMV.cpp	/^TNC_Result HostScannerIMV::notifyConnectionChange()$/;"	f	class:HostScannerIMV
notifyConnectionChange	imcv/platid/imc/src/PlatidIMC.cpp	/^TNC_Result PlatidIMC::notifyConnectionChange()$/;"	f	class:PlatidIMC
notifyConnectionChange	imcv/platid/imv/src/PlatidIMV.cpp	/^TNC_Result PlatidIMV::notifyConnectionChange(TNC_ConnectionState newState)$/;"	f	class:PlatidIMV
notifyConnectionChange	imcv/procwatcher/imc/src.bk/ExampleIMC.cpp	/^TNC_Result ExampleIMC::notifyConnectionChange()$/;"	f	class:ExampleIMC
notifyConnectionChange	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^TNC_Result ProcwatcherIMC::notifyConnectionChange()$/;"	f	class:ProcwatcherIMC
notifyConnectionChange	imcv/procwatcher/imv/src.bk/ExampleIMV.cpp	/^TNC_Result ExampleIMV::notifyConnectionChange()$/;"	f	class:ExampleIMV
notifyConnectionChange	imcv/procwatcher/imv/src/ProcwatcherIMV.cpp	/^TNC_Result ProcwatcherIMV::notifyConnectionChange()$/;"	f	class:ProcwatcherIMV
notifyConnectionChange	imunit/src/imunit/AbstractIMUnit.cpp	/^TNC_Result AbstractIMUnit::notifyConnectionChange()$/;"	f	class:tncfhh::iml::AbstractIMUnit
notifyConnectionChange	imunit/src/imunit/AbstractIMUnit.cpp	/^TNC_Result AbstractIMUnit::notifyConnectionChange(TNC_ConnectionState newState)$/;"	f	class:tncfhh::iml::AbstractIMUnit
notifyConnectionChange	imunit/src/imunit/imc/IMCLibrary.cpp	/^TNC_Result IMCLibrary::notifyConnectionChange(TNC_IMCID imcID, TNC_ConnectionID connectionID, TNC_ConnectionState newState)$/;"	f	class:tncfhh::iml::IMCLibrary
notifyConnectionChange	imunit/src/imunit/imv/AbstractIMV.cpp	/^TNC_Result AbstractIMV::notifyConnectionChange(TNC_ConnectionState newState)$/;"	f	class:tncfhh::iml::AbstractIMV
notifyConnectionChange	imunit/src/imunit/imv/IMVLibrary.cpp	/^TNC_Result IMVLibrary::notifyConnectionChange(TNC_IMVID imvID, TNC_ConnectionID connectionID, TNC_ConnectionState newState)$/;"	f	class:tncfhh::iml::IMVLibrary
notifyConnectionChange	tncs/src/tncs/iel/IMV.cpp	/^void IMV::notifyConnectionChange(TNC_ConnectionState connectionState)$/;"	f	class:tncfhh::iel::IMV
notifyConnectionChangeHandshake	tncs/src/tncs/iel/AbstractTNCCSProtocol.cpp	/^void AbstractTNCCSProtocol::notifyConnectionChangeHandshake()$/;"	f	class:tncfhh::iel::AbstractTNCCSProtocol
notifyConnectionChangeHandshake	tncs/src/tncs/iel/Connection.cpp	/^void Connection::notifyConnectionChangeHandshake()$/;"	f	class:tncfhh::iel::Connection
notifyConnectionChangeHandshake	tncs/src/tncs/iel/tnc1/TNC1Protocol.cpp	/^void TNC1Protocol::notifyConnectionChangeHandshake()$/;"	f	class:tncfhh::iel::tnc1::TNC1Protocol
notifyConnectionChangePointer	tncs/src/tncs/iel/IMVProperties.h	/^	TNC_IMV_NotifyConnectionChangePointer notifyConnectionChangePointer; \/\/Optional$/;"	m	class:tncfhh::iel::IMVProperties
offset	vpn/libtncvpn/src/tncvpn/libtnac/TLVBuffer.h	/^	unsigned offset;$/;"	m	class:TLVBuffer
open	imcv/hostscanner/imc/src/HostScannerIMC.h	/^	enum Status {open, close};$/;"	e	enum:HostScannerIMC::Status
open	imcv/hostscanner/imv/src/HostScannerIMV.h	/^    	enum Status {open, close, whatever};$/;"	e	enum:HostScannerIMV::Status
operant	imcv/clamav/imv/src/ClamavIMV.h	/^		Operant operant;$/;"	m	class:ClamavIMV::PolicyEntry
operator ()	vpn/vpnpep/src/vpnpep/AssessmentScheduler.h	/^	void operator()() {$/;"	f	class:tnc::AssessmentScheduler
operator +	tncs/src/tncs/iel/string_helper.h	/^inline std::string operator+(std::string const& l, char const r[])$/;"	f	namespace:tncfhh
operator +	tncs/src/tncs/iel/string_helper.h	/^inline std::string operator+(std::string const& l, const void * r)$/;"	f	namespace:tncfhh
operator +	tncs/src/tncs/iel/string_helper.h	/^inline std::string operator+(std::string const& l, std::string const& r)$/;"	f	namespace:tncfhh
operator +	tncs/src/tncs/iel/string_helper.h	/^inline std::string operator+(std::string const& l, unsigned int const& r)$/;"	f	namespace:tncfhh
operator =	naaeap/src/naaeap/data/EapTncBuffer.cpp	/^EapTncBuffer &EapTncBuffer::operator=(const EapTncBuffer &tnccsBuffer)$/;"	f	class:tncfhh::nal::EapTncBuffer
operator =	naaeap/src/naaeap/data/EapTncFragment.cpp	/^EapTncFragment & EapTncFragment::operator=(const EapTncFragment & source)$/;"	f	class:tncfhh::nal::EapTncFragment
operator =	tncs/src/tncs/iel/TNCCSData.cpp	/^TNCCSData& TNCCSData::operator=(TNCCSData const& assign_data)$/;"	f	class:tncfhh::iel::TNCCSData
operator =	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^TNCCSBatch & TNCCSBatch::operator=(const TNCCSData & tnccsData) throw (TNCCSProtocolNotSupportedException)$/;"	f	class:tncfhh::iel::tnc1::TNCCSBatch
operator =	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageXML.cpp	/^TNCCTNCSMessageXML& TNCCTNCSMessageXML::operator=(const TNCCTNCSMessageXML&) throw (std::runtime_error)$/;"	f	class:tncfhh::iel::tnc1::TNCCTNCSMessageXML
operator =	tncsim/src/TNCCSData.cpp	/^TNCCSData& TNCCSData::operator=(TNCCSData const& assign_data)$/;"	f	class:tncsim::TNCCSData
operator =	tncutil/src/tncutil/XercesString.cpp	/^XercesString & XercesString::operator=(const XMLCh * xstr)$/;"	f	class:tncfhh::XercesString
out	hash/ps.cpp	/^char out[SHA1_LENGTH + 20];$/;"	v
out	imcv/clamav/imc/src/ClamavIMC.h	/^    std::stringstream out;$/;"	m	class:ClamavIMC
outgoing	tncs/src/tncs/iel/tnc1/TNC1Protocol.h	/^	TNCCSBatch outgoing;$/;"	m	class:tncfhh::iel::tnc1::TNC1Protocol
output_hex	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.cpp	/^static void output_hex(const char *msg, size_t size)$/;"	f	file:
pImcLibrary	imunit/src/imunit/imc/TNCC.h	/^	IMCLibrary *pImcLibrary;$/;"	m	class:tncfhh::iml::TNCC
pImvLibrary	imunit/src/imunit/imv/TNCS.h	/^	IMVLibrary *pImvLibrary;$/;"	m	class:tncfhh::iml::TNCS
pKey	imcv/attestation/imv/src/AttestationIMV.h	/^	EVP_PKEY			*pKey;$/;"	m	class:AttestationIMV
pKey	imcv/platid/imv/src/PlatidIMV.h	/^	EVP_PKEY		*pKey;$/;"	m	class:PlatidIMV
pKey	imcv/procwatcher/imv/src/ProcwatcherIMV.h	/^    EVP_PKEY            *pKey; $/;"	m	class:ProcwatcherIMV
packet	vpn/libtncvpn/src/tncvpn/libtnac/AllowDenyPacket.h	/^	char* packet;$/;"	m	class:pep::AllowDenyPacket
packet	vpn/libtncvpn/src/tncvpn/libtnac/TLVBuffer.h	/^	char* packet;$/;"	m	class:TLVBuffer
packet_complete	vpn/libtncvpn/src/tncvpn/libtnac/TLVBuffer.h	/^	bool packet_complete;$/;"	m	class:TLVBuffer
packet_identifier	vpn/libtncvpn/src/tncvpn/libtnac/AllowDenyPacket.cpp	/^const char* packet_identifier = "PEP";$/;"	m	namespace:pep	file:
packet_len	vpn/libtncvpn/src/tncvpn/libtnac/TLVBuffer.h	/^	T packet_len;$/;"	m	class:TLVBuffer
parse	vpn/libtncvpn/src/tncvpn/libtnac/TLVBuffer.h	/^	void parse() {$/;"	f	class:TLVBuffer
parseIncomingXMLData	tncxacml/src/tncxacml/XACMLHelper.cpp	/^xercesc::DOMDocument* XACMLHelper::parseIncomingXMLData($/;"	f	class:tncfhh::iml::XACMLHelper
parsePolicy	imcv/attestation/imv/src/AttestationIMVPolicyManager.cpp	/^void AttestationIMVPolicyManager::parsePolicy(const char * policyFile)$/;"	f	class:tncfhh::iml::AttestationIMVPolicyManager
parsePolicy	imcv/clamav/imv/src/ClamavIMV.cpp	/^void ClamavIMV::parsePolicy() {$/;"	f	class:ClamavIMV
parsePolicy	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.cpp	/^void ProcwatcherIMVPolicyManager::parsePolicy(const char * policyFile)$/;"	f	class:tncfhh::iml::ProcwatcherIMVPolicyManager
parsePolicyLine	imcv/attestation/imv/src/AttestationIMVPolicyManager.cpp	/^void AttestationIMVPolicyManager::parsePolicyLine(std::string &line)$/;"	f	class:tncfhh::iml::AttestationIMVPolicyManager
parsePolicyLine	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.cpp	/^void ProcwatcherIMVPolicyManager::parsePolicyLine(std::string &line)$/;"	f	class:tncfhh::iml::ProcwatcherIMVPolicyManager
parsePolicyLineAik	imcv/attestation/imv/src/AttestationIMVPolicyManager.cpp	/^void AttestationIMVPolicyManager::parsePolicyLineAik(std::string &line)$/;"	f	class:tncfhh::iml::AttestationIMVPolicyManager
parsePolicyLineAik	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.cpp	/^void ProcwatcherIMVPolicyManager::parsePolicyLineAik(std::string &line)$/;"	f	class:tncfhh::iml::ProcwatcherIMVPolicyManager
parsePolicyLineFile	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.cpp	/^void ProcwatcherIMVPolicyManager::parsePolicyLineFile(std::string &line)$/;"	f	class:tncfhh::iml::ProcwatcherIMVPolicyManager
parsePolicyLinePcr	imcv/attestation/imv/src/AttestationIMVPolicyManager.cpp	/^void AttestationIMVPolicyManager::parsePolicyLinePcr(std::string &line)$/;"	f	class:tncfhh::iml::AttestationIMVPolicyManager
parsePolicyLinePcr	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.cpp	/^void ProcwatcherIMVPolicyManager::parsePolicyLinePcr(std::string &line)$/;"	f	class:tncfhh::iml::ProcwatcherIMVPolicyManager
parsePolicyLineQuoteType	imcv/attestation/imv/src/AttestationIMVPolicyManager.cpp	/^void AttestationIMVPolicyManager::parsePolicyLineQuoteType(std::string &line)$/;"	f	class:tncfhh::iml::AttestationIMVPolicyManager
parsePolicyLineQuoteType	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.cpp	/^void ProcwatcherIMVPolicyManager::parsePolicyLineQuoteType(std::string &line)$/;"	f	class:tncfhh::iml::ProcwatcherIMVPolicyManager
parseResponse	tncxacml/src/tncxacml/XACMLHelper.cpp	/^TNC_IMV_Action_Recommendation XACMLHelper::parseResponse($/;"	f	class:tncfhh::iml::XACMLHelper
parseResults	imcv/clamav/imc/src/ClamavIMC.cpp	/^void ClamavIMC::parseResults(){$/;"	f	class:ClamavIMC
parseTncConfigFile	tncs/src/tncs/iel/Coordinator.cpp	/^std::vector<std::string> Coordinator::parseTncConfigFile(std::string file) throw (std::runtime_error)$/;"	f	class:tncfhh::iel::Coordinator
paths	imcv/example/imc/src/ExampleIMC.h	/^       std::vector<std::string> paths;$/;"	m	class:ExampleIMC::Policy
paths	imcv/procwatcher/imc/src/ProcwatcherIMC.h	/^            std::vector<std::string> paths;$/;"	m	class:ProcwatcherIMC::Policy
pck_ptr	vpn/libtncvpn/src/tncvpn/libtnac/AllowDenyPacket.h	/^	char* pck_ptr;$/;"	m	class:pep::AllowDenyPacket
pck_size	vpn/libtncvpn/src/tncvpn/libtnac/AllowDenyPacket.h	/^	unsigned int pck_size;$/;"	m	class:pep::AllowDenyPacket
pcrEntries	imcv/attestation/imv/src/AttestationIMVPolicyManager.h	/^    std::vector<PcrEntry> pcrEntries;$/;"	m	class:tncfhh::iml::AttestationIMVPolicyManager
pcrEntries	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.h	/^	std::vector<PcrEntry> pcrEntries;$/;"	m	class:tncfhh::iml::ProcwatcherIMVPolicyManager
pep	vpn/libtncvpn/src/tncvpn/libtnac/AllowDenyPacket.cpp	/^namespace pep {$/;"	n	file:
pep	vpn/libtncvpn/src/tncvpn/libtnac/AllowDenyPacket.h	/^namespace pep {$/;"	n
platid	doc/tncfhh.tex	/^\\subsection{platid}$/;"	u
policy	imcv/example/imc/src/ExampleIMC.h	/^    Policy policy;$/;"	m	class:ExampleIMC
policy	imcv/procwatcher/imc/src/ProcwatcherIMC.h	/^    Policy policy;$/;"	m	class:ProcwatcherIMC
policy	tncs/src/tncs/iel/AbstractTNCCSProtocol.h	/^	Policy policy;$/;"	m	class:tncfhh::iel::AbstractTNCCSProtocol
policyEntries	imcv/clamav/imv/src/ClamavIMV.h	/^	std::vector<PolicyEntry> policyEntries;$/;"	m	class:ClamavIMV
policyManager	imcv/attestation/imv/src/AttestationIMV.h	/^    AttestationIMVPolicyManager	*policyManager;$/;"	m	class:AttestationIMV
policyManager	imcv/attestation/imv/src/AttestationIMVLibrary.h	/^	AttestationIMVPolicyManager *policyManager;$/;"	m	class:AttestationIMVLibrary
policyManager	imcv/procwatcher/imv/src/ProcwatcherIMV.h	/^    ProcwatcherIMVPolicyManager *policyManager;$/;"	m	class:ProcwatcherIMV
policyManager	imcv/procwatcher/imv/src/ProcwatcherIMVLibrary.h	/^    tncfhh::iml::ProcwatcherIMVPolicyManager *policyManager;$/;"	m	class:ProcwatcherIMVLibrary
policys	imcv/hostscanner/imv/src/HostScannerIMV.h	/^    	std::vector<Policy> policys;$/;"	m	class:HostScannerIMV
port	imcv/hostscanner/imc/src/HostScannerIMC.h	/^			unsigned short port;$/;"	m	class:HostScannerIMC::Policy
port	imcv/hostscanner/imv/src/HostScannerIMV.h	/^    			unsigned short port;$/;"	m	class:HostScannerIMV::Policy
position	naaeap/src/naaeap/data/EapTncBuffer.h	/^	TNC_UInt32 position;$/;"	m	class:tncfhh::nal::EapTncBuffer
pre_negotiation_finished	vpn/naavpn/src/naavpn/MessageHandler.h	/^	bool pre_negotiation_finished;$/;"	m	class:tnc::MessageHandler
pre_negotiation_finished	vpn/vpnclient/src/vpnclient/TNCClient.h	/^	bool pre_negotiation_finished;$/;"	m	class:tnc::TNCClient
pref_vers	vpn/libtncvpn/src/tncvpn/ifttls/VersionRequestMessage.h	/^	uint8_t pref_vers;$/;"	m	class:ifttls::VersionRequestMessage
printAddress	vpn/naavpn/src/naavpn/PEPNotifier.h	/^	void printAddress(char oct[]) {$/;"	f	class:tnc::PEPNotifier
printAllEndpoints	vpn/vpnpep/src/vpnpep/EndpointDB.cpp	/^EndpointDB::printAllEndpoints() const {$/;"	f	class:tnc::EndpointDB
printBinaryOut	tncsim/src/tncsim.cpp	/^void printBinaryOut(const unsigned char * const packet, unsigned long packetLength, std::string text = "", std::ostream &cout = std::cout)$/;"	f
printMessage	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.cpp	/^void Envelope::printMessage() {$/;"	f	class:ifttls::Envelope
printMessage	vpn/libtncvpn/src/tncvpn/libtnac/AllowDenyPacket.cpp	/^AllowDenyPacket::printMessage() const {$/;"	f	class:pep::AllowDenyPacket
printSeperate	tncsim/src/tncsim.cpp	/^void printSeperate(const char * out) {$/;"	f
printSeperateFinished	tncsim/src/tncsim.cpp	/^void printSeperateFinished(const char * out, TNC_IMV_Action_Recommendation r) {$/;"	f
printSeperateRound	tncsim/src/tncsim.cpp	/^void printSeperateRound(const char * out, unsigned int r) {$/;"	f
privateKeyFile	imcv/platid/imc/src/PlatidIMC.h	/^	string privateKeyFile;$/;"	m	class:PlatidIMC
processAikKeyLine	imcv/attestation/imc/src/AttestationIMC.cpp	/^void AttestationIMC::processAikKeyLine(string line)$/;"	f	class:AttestationIMC
processAikKeyLine	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^void ProcwatcherIMC::processAikKeyLine(string line)$/;"	f	class:ProcwatcherIMC
processCertificateFileLine	imcv/platid/imc/src/PlatidIMC.cpp	/^void PlatidIMC::processCertificateFileLine(string line)$/;"	f	class:PlatidIMC
processCertificateLine	imcv/attestation/imc/src/AttestationIMC.cpp	/^void AttestationIMC::processCertificateLine(string line)$/;"	f	class:AttestationIMC
processCertificateLine	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^void ProcwatcherIMC::processCertificateLine(string line)$/;"	f	class:ProcwatcherIMC
processConfigLine	imcv/attestation/imc/src/AttestationIMC.cpp	/^int AttestationIMC::processConfigLine(string configLine)$/;"	f	class:AttestationIMC
processConfigLine	imcv/platid/imc/src/PlatidIMC.cpp	/^int PlatidIMC::processConfigLine(string configLine)$/;"	f	class:PlatidIMC
processConfigLine	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^int ProcwatcherIMC::processConfigLine(string configLine)$/;"	f	class:ProcwatcherIMC
processEAPTNCData	naaeap/src/naaeap/naaeap.cpp	/^TNC_Result processEAPTNCData($/;"	f
processFirstMessage	imcv/attestation/imv/src/AttestationIMV.cpp	/^int AttestationIMV::processFirstMessage(TNC_BufferReference message, TNC_UInt32 length)$/;"	f	class:AttestationIMV
processFirstMessage	imcv/platid/imv/src/PlatidIMV.cpp	/^int PlatidIMV::processFirstMessage(TNC_BufferReference message, TNC_UInt32 length)$/;"	f	class:PlatidIMV
processFirstMessage	imcv/procwatcher/imv/src/ProcwatcherIMV.cpp	/^int ProcwatcherIMV::processFirstMessage(TNC_BufferReference message, TNC_UInt32 length)$/;"	f	class:ProcwatcherIMV
processPrivateKeyLine	imcv/platid/imc/src/PlatidIMC.cpp	/^void PlatidIMC::processPrivateKeyLine(string line)$/;"	f	class:PlatidIMC
processTNCCSData	tncs/src/tncs/iel/AbstractTNCCSProtocol.cpp	/^TNCCSData AbstractTNCCSProtocol::processTNCCSData(TNCCSData incomingTNCCSData) throw (ConnectionStateException, TNCCSProtocolNotSupportedException)$/;"	f	class:tncfhh::iel::AbstractTNCCSProtocol
processTNCCSData	tncs/src/tncs/iel/Connection.cpp	/^TNCCSData Connection::processTNCCSData(const TNCCSData & receivedData) throw (ConnectionStateException, ConnectionStateExceptionWithTNCCSData, TNCCSProtocolNotSupportedException)$/;"	f	class:tncfhh::iel::Connection
processTNCCSData	tncs/src/tncs/iel/Coordinator.cpp	/^TNCCSData Coordinator::processTNCCSData(TNC_ConnectionID conID, const TNCCSData & receivedData) throw (ConnectionStateException, ConnectionStateExceptionWithTNCCSData, std::logic_error)$/;"	f	class:tncfhh::iel::Coordinator
processTNCCSData	tncs/src/tncs/iel/soh/SOH1Protocol.cpp	/^TNCCSData SOH1Protocol::processTNCCSData(TNCCSData incomingTNCCSData) throw (ConnectionStateException, TNCCSProtocolNotSupportedException)$/;"	f	class:tncfhh::iel::soh::SOH1Protocol
processTNCCSData	tncs/src/tncs/iel/tnc1/TNC1Protocol.cpp	/^TNCCSData TNC1Protocol::processTNCCSData(TNCCSData incomingTNCCSData) throw (ConnectionStateException, TNCCSProtocolNotSupportedException)$/;"	f	class:tncfhh::iel::tnc1::TNC1Protocol
processUseWksLine	imcv/platid/imc/src/PlatidIMC.cpp	/^void PlatidIMC::processUseWksLine(string line)$/;"	f	class:PlatidIMC
prop_type	imcv/example/imv/src/ExampleIMV.h	/^typedef std::pair<std::string,std::string> prop_type;$/;"	t	class:ExampleIMV
prop_type	imcv/procwatcher/imv/src/ProcwatcherIMV.h	/^typedef std::pair<std::string,std::string> prop_type;$/;"	t	class:ProcwatcherIMV
properties	tncutil/src/tncutil/ConfigurationService.h	/^	property_t properties;$/;"	m	class:tncfhh::ConfigurationService
property_t	tncutil/src/tncutil/ConfigurationService.h	/^typedef std::vector<std::pair<std::string,std::string> > property_t;$/;"	t
protocol	imcv/hostscanner/imc/src/HostScannerIMC.h	/^			Protocol protocol;$/;"	m	class:HostScannerIMC::Policy
protocol	imcv/hostscanner/imv/src/HostScannerIMV.h	/^    			Protocol protocol;$/;"	m	class:HostScannerIMV::Policy
protocolName	tncs/src/tncs/iel/AbstractTNCCSProtocol.h	/^	std::string protocolName;$/;"	m	class:tncfhh::iel::AbstractTNCCSProtocol
provideBindFunction	imunit/src/imunit/imc/IMCLibrary.cpp	/^TNC_Result IMCLibrary::provideBindFunction(TNC_IMCID imcID, TNC_TNCC_BindFunctionPointer bindFunction)$/;"	f	class:tncfhh::iml::IMCLibrary
provideBindFunction	imunit/src/imunit/imv/IMVLibrary.cpp	/^TNC_Result IMVLibrary::provideBindFunction(TNC_IMVID imvID, TNC_TNCS_BindFunctionPointer bindFunction)$/;"	f	class:tncfhh::iml::IMVLibrary
provideBindFunctionPointer	tncs/src/tncs/iel/IMVProperties.h	/^	TNC_IMV_ProvideBindFunctionPointer provideBindFunctionPointer; \/\/Mandatory$/;"	m	class:tncfhh::iel::IMVProperties
provideRecommendation	imunit/src/imunit/imv/TNCS.cpp	/^void TNCS::provideRecommendation(TNC_IMV_Action_Recommendation recommendation, TNC_IMV_Evaluation_Result evaluation) throw (ResultException)$/;"	f	class:tncfhh::iml::TNCS
provideRecommendation	tncs/src/tncs/iel/Connection.cpp	/^void Connection::provideRecommendation(TNC_IMVID imvID,$/;"	f	class:tncfhh::iel::Connection
provideRecommendation	tncs/src/tncs/iel/Coordinator.cpp	/^void Coordinator::provideRecommendation(TNC_IMVID imvID, TNC_ConnectionID connectionID, TNC_IMV_Action_Recommendation recommendation, TNC_IMV_Evaluation_Result evaluation)$/;"	f	class:tncfhh::iel::Coordinator
provideRecommendationPointer	imunit/src/imunit/imv/IMVLibrary.h	/^		TNC_TNCS_ProvideRecommendationPointer provideRecommendationPointer;$/;"	m	struct:tncfhh::iml::IMVLibrary::TNCS_FunctionPointers
putData	vpn/vpnclient/src/vpnclient/LibTNCClient.cpp	/^void LibTNCClient::putData(ifttls::Envelope *env)$/;"	f	class:tnc::LibTNCClient
putMessage	vpn/vpnclient/src/vpnclient/TNCMockClient.h	/^	void putMessage(tncfhh::iel::TNCCSData data) {$/;"	f	class:TNCMockClient
quoteDigest	imcv/attestation/imv/src/AttestationIMV.h	/^	TNC_Buffer			quoteDigest[SHA_DIGEST_LENGTH];$/;"	m	class:AttestationIMV
quoteType	imcv/attestation/imv/src/AttestationIMV.h	/^	QuoteType			quoteType;$/;"	m	class:AttestationIMV
quoteType	imcv/attestation/imv/src/AttestationIMVPolicyManager.h	/^	QuoteType quoteType;$/;"	m	class:tncfhh::iml::AttestationIMVPolicyManager
quoteType	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.h	/^	QuoteType quoteType;$/;"	m	class:tncfhh::iml::ProcwatcherIMVPolicyManager
randNonce	imcv/platid/imv/src/PlatidIMV.h	/^	TNC_BufferReference	randNonce;$/;"	m	class:PlatidIMV
randNonceLength	imcv/platid/imv/src/PlatidIMV.h	/^	TNC_UInt32		randNonceLength;$/;"	m	class:PlatidIMV
readAllProperties	imcv/example/imv/src/ExampleIMV.cpp	/^std::vector<ExampleIMV::prop_type> ExampleIMV::readAllProperties(std::istream &in)$/;"	f	class:ExampleIMV
readAllProperties	imcv/hostscanner/imv/src/HostScannerIMV.cpp	/^std::vector<std::pair<std::string,std::string> > HostScannerIMV::readAllProperties(std::istream &in)$/;"	f	class:HostScannerIMV
readAllProperties	imcv/procwatcher/imv/src/ProcwatcherIMV.cpp	/^std::vector<ProcwatcherIMV::prop_type> ProcwatcherIMV::readAllProperties(std::istream &in)$/;"	f	class:ProcwatcherIMV
readConfiguration	imcv/clamav/imc/src/ClamavIMC.cpp	/^void ClamavIMC::readConfiguration() {$/;"	f	class:ClamavIMC
readConfiguration	tncutil/src/tncutil/ConfigurationService.cpp	/^std::vector<std::pair<std::string,std::string> > ConfigurationService::readConfiguration() {$/;"	f	class:tncfhh::ConfigurationService
readFile	vpn/vpnclient/src/vpnclient/TNCMockClient.h	/^	std::string readFile(const char* file_name) {$/;"	f	class:TNCMockClient
readHeader	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.cpp	/^void IFTTLSConnection::readHeader()$/;"	f	class:ifttls::IFTTLSConnection
readLine	imcv/example/imv/src/ExampleIMV.cpp	/^bool ExampleIMV::readLine(std::istream &in, char *buf, const int size)$/;"	f	class:ExampleIMV
readLine	imcv/hostscanner/imc/src/HostScannerIMC.cpp	/^bool HostScannerIMC::readLine(std::istream *in, char *buf, const int size) {$/;"	f	class:HostScannerIMC
readLine	imcv/hostscanner/imv/src/HostScannerIMV.cpp	/^bool HostScannerIMV::readLine(std::istream &in, char *buf, const int size)$/;"	f	class:HostScannerIMV
readLine	imcv/procwatcher/imv/src/ProcwatcherIMV.cpp	/^bool ProcwatcherIMV::readLine(std::istream &in, char *buf, const int size)$/;"	f	class:ProcwatcherIMV
readRestOfMessage	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.cpp	/^void IFTTLSConnection::readRestOfMessage()$/;"	f	class:ifttls::IFTTLSConnection
read_len	vpn/libtncvpn/src/tncvpn/libtnac/TLVBuffer.h	/^	unsigned read_len;$/;"	m	class:TLVBuffer
read_policy	imcv/example/imc/src/ExampleIMC.cpp	/^ExampleIMC::read_policy (  )$/;"	f	class:ExampleIMC
read_policy	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^ProcwatcherIMC::read_policy (  )$/;"	f	class:ProcwatcherIMC
rec	tncsim/src/server/Finished.h	/^	TNC_IMV_Action_Recommendation rec;$/;"	m	class:tncsim::server::Finished
receiveMessage	imcv/attestation/imc/src/AttestationIMC.cpp	/^TNC_Result AttestationIMC::receiveMessage(TNC_BufferReference message,$/;"	f	class:AttestationIMC
receiveMessage	imcv/attestation/imv/src/AttestationIMV.cpp	/^TNC_Result AttestationIMV::receiveMessage(TNC_BufferReference message,$/;"	f	class:AttestationIMV
receiveMessage	imcv/clamav/imc/src/ClamavIMC.cpp	/^TNC_Result ClamavIMC::receiveMessage(TNC_BufferReference message,$/;"	f	class:ClamavIMC
receiveMessage	imcv/clamav/imv/src/ClamavIMV.cpp	/^TNC_Result ClamavIMV::receiveMessage(TNC_BufferReference message,$/;"	f	class:ClamavIMV
receiveMessage	imcv/dummy/imc/src/DummyIMC.cpp	/^TNC_Result DummyIMC::receiveMessage(TNC_BufferReference message,$/;"	f	class:DummyIMC
receiveMessage	imcv/dummy/imv/src/DummyIMV.cpp	/^TNC_Result DummyIMV::receiveMessage(TNC_BufferReference message,$/;"	f	class:DummyIMV
receiveMessage	imcv/example/imc/src.bk/ExampleIMC.cpp	/^TNC_Result ExampleIMC::receiveMessage(TNC_BufferReference message,$/;"	f	class:ExampleIMC
receiveMessage	imcv/example/imc/src/ExampleIMC.cpp	/^TNC_Result ExampleIMC::receiveMessage(TNC_BufferReference message,$/;"	f	class:ExampleIMC
receiveMessage	imcv/example/imv/src.bk/ExampleIMV.cpp	/^TNC_Result ExampleIMV::receiveMessage(TNC_BufferReference message,$/;"	f	class:ExampleIMV
receiveMessage	imcv/example/imv/src/ExampleIMV.cpp	/^TNC_Result ExampleIMV::receiveMessage(TNC_BufferReference message,$/;"	f	class:ExampleIMV
receiveMessage	imcv/hostscanner/imc/src/HostScannerIMC.cpp	/^TNC_Result HostScannerIMC::receiveMessage(TNC_BufferReference message, TNC_UInt32 messageLength, TNC_MessageType messageType)$/;"	f	class:HostScannerIMC
receiveMessage	imcv/hostscanner/imv/src/HostScannerIMV.cpp	/^TNC_Result HostScannerIMV::receiveMessage(TNC_BufferReference message, TNC_UInt32 messageLength, TNC_MessageType messageType)$/;"	f	class:HostScannerIMV
receiveMessage	imcv/platid/imc/src/PlatidIMC.cpp	/^TNC_Result PlatidIMC::receiveMessage(TNC_BufferReference message,$/;"	f	class:PlatidIMC
receiveMessage	imcv/platid/imv/src/PlatidIMV.cpp	/^TNC_Result PlatidIMV::receiveMessage(TNC_BufferReference message,$/;"	f	class:PlatidIMV
receiveMessage	imcv/procwatcher/imc/src.bk/ExampleIMC.cpp	/^TNC_Result ExampleIMC::receiveMessage(TNC_BufferReference message,$/;"	f	class:ExampleIMC
receiveMessage	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^TNC_Result ProcwatcherIMC::receiveMessage(TNC_BufferReference message,$/;"	f	class:ProcwatcherIMC
receiveMessage	imcv/procwatcher/imv/src.bk/ExampleIMV.cpp	/^TNC_Result ExampleIMV::receiveMessage(TNC_BufferReference message,$/;"	f	class:ExampleIMV
receiveMessage	imcv/procwatcher/imv/src/ProcwatcherIMV.cpp	/^TNC_Result ProcwatcherIMV::receiveMessage(TNC_BufferReference message,$/;"	f	class:ProcwatcherIMV
receiveMessage	imunit/src/imunit/AbstractIMUnit.cpp	/^TNC_Result AbstractIMUnit::receiveMessage(TNC_BufferReference message,$/;"	f	class:tncfhh::iml::AbstractIMUnit
receiveMessage	imunit/src/imunit/imc/IMCLibrary.cpp	/^TNC_Result IMCLibrary::receiveMessage(TNC_IMCID imcID, TNC_ConnectionID connectionID,$/;"	f	class:tncfhh::iml::IMCLibrary
receiveMessage	imunit/src/imunit/imv/IMVLibrary.cpp	/^TNC_Result IMVLibrary::receiveMessage(TNC_IMVID imvID, TNC_ConnectionID connectionID,$/;"	f	class:tncfhh::iml::IMVLibrary
receiveMessage	tncs/src/tncs/iel/IMV.cpp	/^void IMV::receiveMessage(TNC_BufferReference message, TNC_UInt32 messageLength, TNC_MessageType messageType)$/;"	f	class:tncfhh::iel::IMV
receiveMessage	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.cpp	/^Envelope *IFTTLSConnection::receiveMessage()$/;"	f	class:ifttls::IFTTLSConnection
receiveMessageLongPointer	tncs/src/tncs/iel/IMVProperties.h	/^	TNC_IMV_ReceiveMessageLongPointer receiveMessageLongPointer; \/\/Optional$/;"	m	class:tncfhh::iel::IMVProperties
receiveMessagePointer	tncs/src/tncs/iel/IMVProperties.h	/^	TNC_IMV_ReceiveMessagePointer receiveMessagePointer; \/\/Optional$/;"	m	class:tncfhh::iel::IMVProperties
receiveMessageSOHPointer	tncs/src/tncs/iel/IMVProperties.h	/^	TNC_IMV_ReceiveMessageSOHPointer receiveMessageSOHPointer; \/\/Optional$/;"	m	class:tncfhh::iel::IMVProperties
receiveTNCCSData	tncsim/src/client/libtnc/LibtncTNCC.cpp	/^TNCCSData LibtncTNCC::receiveTNCCSData(const TNCCSData & data)$/;"	f	class:tncsim::client::libtnc::LibtncTNCC
receiveTNCCSData	tncsim/src/server/libtnc/LibtncTNCS.cpp	/^TNCCSData LibtncTNCS::receiveTNCCSData(const TNCCSData & data) throw(Finished)$/;"	f	class:tncsim::server::libtnc::LibtncTNCS
receiveTNCCSData	tncsim/src/server/tncfhh/TncfhhTNCS.cpp	/^TNCCSData TncfhhTNCS::receiveTNCCSData(const TNCCSData & data) throw(Finished)$/;"	f	class:tncsim::server::tncfhh::TncfhhTNCS
recipient	tncs/src/tncs/iel/tnc1/TNCCSBatch.h	/^	Recipient recipient;$/;"	m	class:tncfhh::iel::tnc1::TNCCSBatch
recommendation	tncs/src/tncs/iel/IMV.h	/^	TNC_IMV_Action_Recommendation recommendation;$/;"	m	class:tncfhh::iel::IMV
recommendation	vpn/libtncvpn/src/tncvpn/libtnac/AllowDenyPacket.h	/^	char recommendation;$/;"	m	class:pep::AllowDenyPacket
recommendation	vpn/naavpn/src/naavpn/PEPClient.h	/^	char recommendation;$/;"	m	class:tnc::PEPClient
remove	vpn/vpnpep/src/vpnpep/EndpointDB.cpp	/^EndpointDB::remove(Endpoint *ep) {$/;"	f	class:tnc::EndpointDB
reply_	vpn/libtncvpn/src/tncvpn/ssl/Client.h	/^	char reply_[max_length];$/;"	m	class:tnc::ssl::Client
reply_msg	vpn/naavpn/src/naavpn/MessageHandler.h	/^	ifttls::Envelope* reply_msg;$/;"	m	class:tnc::MessageHandler
reportMessageTypes	tncs/src/tncs/iel/Coordinator.cpp	/^void Coordinator::reportMessageTypes(TNC_IMVID imvID, TNC_MessageTypeList supportedTypes, TNC_UInt32 typeCount)$/;"	f	class:tncfhh::iel::Coordinator
reportMessageTypes	tncs/src/tncs/iel/IMVProperties.cpp	/^void IMVProperties::reportMessageTypes(TNC_MessageTypeList supportedTypes, TNC_UInt32 typeCount)$/;"	f	class:tncfhh::iel::IMVProperties
reportMessageTypesPointer	imunit/src/imunit/imc/IMCLibrary.h	/^		TNC_TNCC_ReportMessageTypesPointer reportMessageTypesPointer;$/;"	m	struct:tncfhh::iml::IMCLibrary::TNCC_FunctionPointers
reportMessageTypesPointer	imunit/src/imunit/imv/IMVLibrary.h	/^		TNC_TNCS_ReportMessageTypesPointer reportMessageTypesPointer;$/;"	m	struct:tncfhh::iml::IMVLibrary::TNCS_FunctionPointers
requestHandshakeRetry	imunit/src/imunit/imc/TNCC.cpp	/^void TNCC::requestHandshakeRetry(TNC_RetryReason reason) throw (ResultException)$/;"	f	class:tncfhh::iml::TNCC
requestHandshakeRetry	imunit/src/imunit/imv/TNCS.cpp	/^void TNCS::requestHandshakeRetry(TNC_RetryReason reason) throw (ResultException)$/;"	f	class:tncfhh::iml::TNCS
requestHandshakeRetry	tncs/src/tncs/iel/Connection.cpp	/^void Connection::requestHandshakeRetry(TNC_IMVID imvID, TNC_RetryReason reason) throw (ResultException)$/;"	f	class:tncfhh::iel::Connection
requestHandshakeRetry	tncs/src/tncs/iel/Coordinator.cpp	/^void Coordinator::requestHandshakeRetry(TNC_IMVID imvID, TNC_ConnectionID connectionID, TNC_RetryReason reason)$/;"	f	class:tncfhh::iel::Coordinator
requestHandshakeRetry	tncs/src/tncs/iel/soh/SOH1Protocol.cpp	/^void SOH1Protocol::requestHandshakeRetry(TNC_IMVID imvID, TNC_RetryReason reason)$/;"	f	class:tncfhh::iel::soh::SOH1Protocol
requestHandshakeRetry	tncs/src/tncs/iel/tnc1/TNC1Protocol.cpp	/^void TNC1Protocol::requestHandshakeRetry(TNC_IMVID imvID, TNC_RetryReason reason)$/;"	f	class:tncfhh::iel::tnc1::TNC1Protocol
requestHandshakeRetryPointer	imunit/src/imunit/imc/IMCLibrary.h	/^		TNC_TNCC_RequestHandshakeRetryPointer requestHandshakeRetryPointer;$/;"	m	struct:tncfhh::iml::IMCLibrary::TNCC_FunctionPointers
requestHandshakeRetryPointer	imunit/src/imunit/imv/IMVLibrary.h	/^		TNC_TNCS_RequestHandshakeRetryPointer requestHandshakeRetryPointer;$/;"	m	struct:tncfhh::iml::IMVLibrary::TNCS_FunctionPointers
request_	vpn/libtncvpn/src/tncvpn/ssl/Client.h	/^	char request_[max_length];$/;"	m	class:tnc::ssl::Client
reserved	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.h	/^	uint8_t  reserved;$/;"	m	class:ifttls::Envelope
reserved	vpn/libtncvpn/src/tncvpn/ifttls/VersionRequestMessage.h	/^	uint8_t reserved;$/;"	m	class:ifttls::VersionRequestMessage
reserved	vpn/libtncvpn/src/tncvpn/ifttls/VersionResponseMessage.h	/^	char reserved[3];$/;"	m	class:ifttls::VersionResponseMessage
reset	naaeap/src/naaeap/logic/Defragmentation.cpp	/^void Defragmentation::reset(TNC_ConnectionID conID)$/;"	f	class:tncfhh::nal::Defragmentation
reset	naaeap/src/naaeap/logic/Fragmentation.cpp	/^void Fragmentation::reset(TNC_ConnectionID conID)$/;"	f	class:tncfhh::nal::Fragmentation
resetID	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^void TNCCSBatch::resetID()$/;"	f	class:tncfhh::iel::tnc1::TNCCSBatch
resetPolicy	tncs/src/tncs/iel/Policy.cpp	/^void Policy::resetPolicy()$/;"	f	class:tncfhh::iel::Policy
resultClamconf	imcv/clamav/imc/src/ClamavIMC.h	/^    std::string resultClamconf;$/;"	m	class:ClamavIMC
resultOperationalStatus	imcv/clamav/imc/src/ClamavIMC.h	/^    ClamavIMCLibrary::OperationalStatus resultOperationalStatus;$/;"	m	class:ClamavIMC
returnValue	imunit/src/imunit/exception/ResultException.h	/^	TNC_Result returnValue;$/;"	m	class:tncfhh::iml::ResultException
returnValue	tncs/src/tncs/exception/ResultException.h	/^	TNC_Result returnValue;$/;"	m	class:tncfhh::iel::ResultException
round	imunit/src/imunit/AbstractIMUnit.h	/^	TNC_UInt32 round;$/;"	m	class:tncfhh::iml::AbstractIMUnit
rsa	imcv/attestation/imv/src/AttestationIMV.h	/^	RSA					*rsa;$/;"	m	class:AttestationIMV
rsa	imcv/platid/imc/src/PlatidIMC.h	/^	RSA *rsa;$/;"	m	class:PlatidIMC
rsa	imcv/platid/imv/src/PlatidIMV.h	/^	RSA			*rsa;$/;"	m	class:PlatidIMV
rsa	imcv/procwatcher/imv/src/ProcwatcherIMV.h	/^    RSA                 *rsa;$/;"	m	class:ProcwatcherIMV
savePolicyEntry	imcv/clamav/imv/src/ClamavIMV.cpp	/^void ClamavIMV::savePolicyEntry(std::string key, std::string operant, std::string value) {$/;"	f	class:ClamavIMV
selectedPcrs	imcv/attestation/imc/src/PcrSelection.h	/^	std::list<long> selectedPcrs;$/;"	m	class:PcrSelection
sendAllow	vpn/naavpn/src/naavpn/PEPNotifier.cpp	/^void PEPNotifier::sendAllow(Endpoint* ep) {$/;"	f	class:tnc::PEPNotifier
sendBinaryRecommendation	vpn/naavpn/src/naavpn/PEPNotifier.cpp	/^void PEPNotifier::sendBinaryRecommendation(Endpoint* ep, char recommendation) {$/;"	f	class:tnc::PEPNotifier
sendDeny	vpn/naavpn/src/naavpn/PEPNotifier.cpp	/^void PEPNotifier::sendDeny(Endpoint* ep) {$/;"	f	class:tnc::PEPNotifier
sendMessage	imunit/src/imunit/imc/TNCC.cpp	/^void TNCC::sendMessage(TNC_BufferReference message, TNC_UInt32 messageLength, TNC_MessageType messageType) throw (ResultException)$/;"	f	class:tncfhh::iml::TNCC
sendMessage	imunit/src/imunit/imc/TNCC.cpp	/^void TNCC::sendMessage(TNC_BufferReference message, TNC_UInt32 messageLength, TNC_VendorID vendorId, TNC_MessageSubtype messageSubtype) throw (ResultException)$/;"	f	class:tncfhh::iml::TNCC
sendMessage	imunit/src/imunit/imv/TNCS.cpp	/^void TNCS::sendMessage(TNC_BufferReference message, TNC_UInt32 messageLength, TNC_MessageType messageType) throw (ResultException)$/;"	f	class:tncfhh::iml::TNCS
sendMessage	imunit/src/imunit/imv/TNCS.cpp	/^void TNCS::sendMessage(TNC_BufferReference message, TNC_UInt32 messageLength, TNC_VendorID vendorId, TNC_MessageSubtype messageSubtype) throw (ResultException)$/;"	f	class:tncfhh::iml::TNCS
sendMessage	tncs/src/tncs/iel/Connection.cpp	/^void Connection::sendMessage(TNC_IMVID imvID, TNC_BufferReference message,$/;"	f	class:tncfhh::iel::Connection
sendMessage	tncs/src/tncs/iel/Coordinator.cpp	/^void Coordinator::sendMessage(TNC_IMVID imvID, TNC_ConnectionID connectionID, TNC_BufferReference message, TNC_UInt32 messageLength, TNC_MessageType messageType)$/;"	f	class:tncfhh::iel::Coordinator
sendMessage	tncs/src/tncs/iel/soh/SOH1Protocol.cpp	/^void SOH1Protocol::sendMessage(TNC_IMVID imvID, TNC_BufferReference message, TNC_UInt32 messageLength, TNC_MessageType messageType)$/;"	f	class:tncfhh::iel::soh::SOH1Protocol
sendMessage	tncs/src/tncs/iel/tnc1/TNC1Protocol.cpp	/^void TNC1Protocol::sendMessage(TNC_IMVID imvID, TNC_BufferReference message, TNC_UInt32 messageLength, TNC_MessageType messageType)$/;"	f	class:tncfhh::iel::tnc1::TNC1Protocol
sendMessage	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.cpp	/^void IFTTLSConnection::sendMessage(Envelope *env)$/;"	f	class:ifttls::IFTTLSConnection
sendMessagePointer	imunit/src/imunit/imc/IMCLibrary.h	/^		TNC_TNCC_SendMessagePointer sendMessagePointer;$/;"	m	struct:tncfhh::iml::IMCLibrary::TNCC_FunctionPointers
sendMessagePointer	imunit/src/imunit/imv/IMVLibrary.h	/^		TNC_TNCS_SendMessagePointer sendMessagePointer;$/;"	m	struct:tncfhh::iml::IMVLibrary::TNCS_FunctionPointers
sendQuoteRequest	imcv/attestation/imv/src/AttestationIMV.cpp	/^int AttestationIMV::sendQuoteRequest(std::vector<PcrEntry>& entries)$/;"	f	class:AttestationIMV
server	tncsim/src/server/AbstractTNCS.cpp	/^namespace server {$/;"	n	namespace:tncsim	file:
server	tncsim/src/server/AbstractTNCS.h	/^namespace server {$/;"	n	namespace:tncsim
server	tncsim/src/server/Finished.cpp	/^namespace server {$/;"	n	namespace:tncsim	file:
server	tncsim/src/server/Finished.h	/^namespace server {$/;"	n	namespace:tncsim
server	tncsim/src/server/libtnc/LibtncTNCS.cpp	/^namespace server {$/;"	n	namespace:tncsim	file:
server	tncsim/src/server/libtnc/LibtncTNCS.h	/^namespace server {$/;"	n	namespace:tncsim
server	tncsim/src/server/tncfhh/TncfhhTNCS.cpp	/^namespace server {$/;"	n	namespace:tncsim	file:
server	tncsim/src/server/tncfhh/TncfhhTNCS.h	/^namespace server {$/;"	n	namespace:tncsim
server	tncsim/src/tncsim.cpp	/^namespace server {$/;"	n	namespace:tncsim	file:
set	tncutil/src/tncutil/Configuration.cpp	/^void Configuration::set(std::string key, std::string value) {$/;"	f	class:tncfhh::Configuration
setActivateFragmentation	naaeap/src/naaeap/naaeap.cpp	/^void setActivateFragmentation(int active)$/;"	f
setActive	naaeap/src/naaeap/logic/Fragmentation.cpp	/^void Fragmentation::setActive(bool active)$/;"	f	class:tncfhh::nal::Fragmentation
setAttribute	imunit/src/imunit/imv/TNCS.cpp	/^bool TNCS::setAttribute(TNC_AttributeID attributeID, TNC_UInt32 bufferLength, TNC_BufferReference buffer) throw (ResultException)$/;"	f	class:tncfhh::iml::TNCS
setAttribute	tncs/src/tncs/iel/Connection.cpp	/^void Connection::setAttribute(TNC_IMVID imvID, TNC_AttributeID attributeID, TNC_UInt32 bufferLength, TNC_BufferReference buffer)  throw (ResultException)$/;"	f	class:tncfhh::iel::Connection
setAttribute	tncs/src/tncs/iel/Coordinator.cpp	/^void Coordinator::setAttribute(TNC_IMVID imvID, TNC_ConnectionID connectionID, TNC_AttributeID attributeID, TNC_UInt32 bufferLength, TNC_BufferReference buffer)$/;"	f	class:tncfhh::iel::Coordinator
setAttribute	tncs/src/tncs/iel/soh/SOH1Protocol.cpp	/^void SOH1Protocol::setAttribute(TNC_IMVID imvID,  TNC_AttributeID attributeID, TNC_UInt32 bufferLength, TNC_BufferReference buffer)$/;"	f	class:tncfhh::iel::soh::SOH1Protocol
setAttribute	tncs/src/tncs/iel/tnc1/TNC1Protocol.cpp	/^void TNC1Protocol::setAttribute(TNC_IMVID imvID,  TNC_AttributeID attributeID, TNC_UInt32 bufferLength, TNC_BufferReference buffer)$/;"	f	class:tncfhh::iel::tnc1::TNC1Protocol
setAttributePointer	imunit/src/imunit/imv/IMVLibrary.h	/^		TNC_TNCS_SetAttributePointer setAttributePointer;$/;"	m	struct:tncfhh::iml::IMVLibrary::TNCS_FunctionPointers
setData	tncsim/src/TNCCSData.cpp	/^void TNCCSData::setData(const unsigned char * data, TNC_UInt32 dataLength) throw (std::invalid_argument)$/;"	f	class:tncsim::TNCCSData
setIMUnitLibraryID	imunit/src/imunit/IMUnitLibrary.cpp	/^void IMUnitLibrary::setIMUnitLibraryID(TNC_IMUnitID id)$/;"	f	class:tncfhh::iml::IMUnitLibrary
setIMUnitLibraryInitialized	imunit/src/imunit/IMUnitLibrary.cpp	/^void IMUnitLibrary::setIMUnitLibraryInitialized(bool initialized)$/;"	f	class:tncfhh::iml::IMUnitLibrary
setIMUnitLibraryName	imunit/src/imunit/IMUnitLibrary.cpp	/^void IMUnitLibrary::setIMUnitLibraryName(std::string &imUnitLibraryName)$/;"	f	class:tncfhh::iml::IMUnitLibrary
setIdentifier	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.h	/^	void setIdentifier(uint32_t identifier) {$/;"	f	class:ifttls::Envelope
setIfImcImvVersion	imunit/src/imunit/IMUnitLibrary.cpp	/^void IMUnitLibrary::setIfImcImvVersion(TNC_Version version)$/;"	f	class:tncfhh::iml::IMUnitLibrary
setNumberOfPcrs	imcv/attestation/imc/src/AttestationIMC.cpp	/^int AttestationIMC::setNumberOfPcrs(void)$/;"	f	class:AttestationIMC
setOutput	naaeap/src/naaeap/naaeap.cpp	/^void setOutput($/;"	f
setProvideRecommendation	tncs/src/tncs/iel/IMV.cpp	/^void IMV::setProvideRecommendation(TNC_IMV_Action_Recommendation recommendation, TNC_IMV_Evaluation_Result evaluation)$/;"	f	class:tncfhh::iel::IMV
signNonce	imcv/platid/imc/src/PlatidIMC.cpp	/^int PlatidIMC::signNonce(TNC_BufferReference nonce, TNC_UInt32 length,$/;"	f	class:PlatidIMC
signature	imcv/attestation/imc/src/AttestationIMC.h	/^	TNC_BufferReference		signature;$/;"	m	class:AttestationIMC
signatureLength	imcv/attestation/imc/src/AttestationIMC.h	/^	TNC_UInt32			signatureLength;$/;"	m	class:AttestationIMC
single	imcv/attestation/imv/src/AttestationIMVPolicyManager.h	/^	single,$/;"	e	enum:tncfhh::iml::QuoteType
single	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.h	/^	single,$/;"	e	enum:tncfhh::iml::QuoteType
socket	vpn/libtncvpn/src/tncvpn/ssl/Session.h	/^	ssl_socket::lowest_layer_type& socket() {$/;"	f	class:tnc::ssl::Session
socket_	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.h	/^	ssl::stream<ip::tcp::socket>& socket_;$/;"	m	class:ifttls::IFTTLSConnection
socket_	vpn/libtncvpn/src/tncvpn/ssl/Client.h	/^	boost::asio::ssl::stream<boost::asio::ip::tcp::socket> socket_;$/;"	m	class:tnc::ssl::Client
socket_	vpn/libtncvpn/src/tncvpn/ssl/Session.h	/^	ssl_socket socket_;$/;"	m	class:tnc::ssl::Session
soh	tncs/src/tncs/iel/soh/SOH1Protocol.cpp	/^namespace soh {$/;"	n	namespace:tncfhh::iel	file:
soh	tncs/src/tncs/iel/soh/SOH1Protocol.h	/^namespace soh {$/;"	n	namespace:tncfhh::iel
solicitRecommendation	imcv/attestation/imv/src/AttestationIMV.cpp	/^TNC_Result AttestationIMV::solicitRecommendation()$/;"	f	class:AttestationIMV
solicitRecommendation	imcv/platid/imv/src/PlatidIMV.cpp	/^TNC_Result PlatidIMV::solicitRecommendation()$/;"	f	class:PlatidIMV
solicitRecommendation	imunit/src/imunit/imv/AbstractIMV.cpp	/^TNC_Result AbstractIMV::solicitRecommendation()$/;"	f	class:tncfhh::iml::AbstractIMV
solicitRecommendation	imunit/src/imunit/imv/IMVLibrary.cpp	/^TNC_Result IMVLibrary::solicitRecommendation(TNC_IMVID imvID, TNC_ConnectionID connectionID)$/;"	f	class:tncfhh::iml::IMVLibrary
solicitRecommendation	tncs/src/tncs/iel/IMV.cpp	/^void IMV::solicitRecommendation()$/;"	f	class:tncfhh::iel::IMV
solicitRecommendationPointer	tncs/src/tncs/iel/IMVProperties.h	/^	TNC_IMV_SolicitRecommendationPointer solicitRecommendationPointer; \/\/Mandatory$/;"	m	class:tncfhh::iel::IMVProperties
splitIpv4	vpn/naavpn/src/naavpn/PEPNotifier.cpp	/^void PEPNotifier::splitIpv4(std::string ip, char *oct) {$/;"	f	class:tnc::PEPNotifier
srkPolicy	imcv/attestation/imc/src/AttestationIMC.h	/^	TSS_HPOLICY srkPolicy;$/;"	m	class:AttestationIMC
srkPolicy	imcv/procwatcher/imc/src/ProcwatcherIMC.h	/^    TSS_HPOLICY srkPolicy;$/;"	m	class:ProcwatcherIMC
ssl	vpn/libtncvpn/src/tncvpn/ssl/Client.h	/^namespace ssl {$/;"	n	namespace:tnc
ssl	vpn/libtncvpn/src/tncvpn/ssl/Server.h	/^namespace ssl {$/;"	n	namespace:tnc
ssl	vpn/libtncvpn/src/tncvpn/ssl/Session.h	/^namespace ssl {$/;"	n	namespace:tnc
ssl_socket	vpn/libtncvpn/src/tncvpn/ssl/Session.h	/^typedef boost::asio::ssl::stream<boost::asio::ip::tcp::socket> ssl_socket;$/;"	t	namespace:tnc::ssl
startVersionNegotiation	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.cpp	/^void IFTTLSConnection::startVersionNegotiation()$/;"	f	class:ifttls::IFTTLSConnection
static int eapttls  _authenticate  void  arg  EAP  _HANDLER  handler 	doc/freeradius-eapttls-patch/rlm_eap_ttls.tex	/^\\subparagraph{static int eapttls\\_authenticate(void* arg, EAP\\_HANDLER* handler)}$/;"	G
status	imcv/hostscanner/imc/src/HostScannerIMC.h	/^			Status status;$/;"	m	class:HostScannerIMC::Policy
status	imcv/hostscanner/imv/src/HostScannerIMV.h	/^    			Status status;$/;"	m	class:HostScannerIMV::Policy
storeUsername	naaeap/src/naaeap/naaeap.cpp	/^TNC_Result storeUsername($/;"	f
stringToByteArray	imcv/attestation/imv/src/AttestationIMVPolicyManager.cpp	/^void PcrEntry::stringToByteArray(const std::string &valueAsString)$/;"	f	class:tncfhh::iml::PcrEntry
stringToByteArray	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.cpp	/^void PcrEntry::stringToByteArray(const std::string &valueAsString)$/;"	f	class:tncfhh::iml::PcrEntry
stringToConId	tncs/src/tncs/iel/Coordinator.h	/^	std::map<std::string, TNC_ConnectionID> stringToConId;$/;"	m	class:tncfhh::iel::Coordinator
struct rlm  _eap  _ttls  _t	doc/freeradius-eapttls-patch/rlm_eap_ttls.tex	/^\\paragraph{struct rlm\\_eap\\_ttls\\_t}$/;"	P
struct ttls  _tunnel  _t	doc/freeradius-eapttls-patch/rlm_eap_ttls.tex	/^\\paragraph{struct ttls\\_tunnel\\_t}$/;"	P
subject_category_tnc_ifm_attribute_installed_packages	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::subject_category_tnc_ifm_attribute_installed_packages = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
subject_category_tnc_ifm_attribute_installed_packages	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string subject_category_tnc_ifm_attribute_installed_packages;$/;"	m	class:tncfhh::iml::XACMLConstants
subject_category_tnc_ifm_attribute_numeric_version	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::subject_category_tnc_ifm_attribute_numeric_version = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
subject_category_tnc_ifm_attribute_numeric_version	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string subject_category_tnc_ifm_attribute_numeric_version;$/;"	m	class:tncfhh::iml::XACMLConstants
subject_category_tnc_ifm_attribute_operational_status	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::subject_category_tnc_ifm_attribute_operational_status = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
subject_category_tnc_ifm_attribute_operational_status	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string subject_category_tnc_ifm_attribute_operational_status;$/;"	m	class:tncfhh::iml::XACMLConstants
subject_category_tnc_ifm_attribute_product_information	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::subject_category_tnc_ifm_attribute_product_information = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
subject_category_tnc_ifm_attribute_product_information	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string subject_category_tnc_ifm_attribute_product_information;$/;"	m	class:tncfhh::iml::XACMLConstants
subject_category_tnc_ifm_attribute_string_version	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::subject_category_tnc_ifm_attribute_string_version = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
subject_category_tnc_ifm_attribute_string_version	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string subject_category_tnc_ifm_attribute_string_version;$/;"	m	class:tncfhh::iml::XACMLConstants
subject_category_tnc_ifm_component	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::subject_category_tnc_ifm_component = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
subject_category_tnc_ifm_component	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string subject_category_tnc_ifm_component;$/;"	m	class:tncfhh::iml::XACMLConstants
subject_category_tnc_tncs	tncxacml/src/tncxacml/XACMLConstants.cpp	/^const std::string XACMLConstants::subject_category_tnc_tncs = std::string($/;"	m	class:tncfhh::iml::XACMLConstants	file:
subject_category_tnc_tncs	tncxacml/src/tncxacml/XACMLConstants.h	/^	static const std::string subject_category_tnc_tncs;$/;"	m	class:tncfhh::iml::XACMLConstants
supportGetAttribute	imunit/src/imunit/imv/TNCS.cpp	/^bool TNCS::supportGetAttribute()$/;"	f	class:tncfhh::iml::TNCS
supportSetAttribute	imunit/src/imunit/imv/TNCS.cpp	/^bool TNCS::supportSetAttribute()$/;"	f	class:tncfhh::iml::TNCS
swLoadEvpPkey	imcv/platid/imc/src/PlatidIMC.cpp	/^EVP_PKEY * PlatidIMC::swLoadEvpPkey()$/;"	f	class:PlatidIMC
temp_line	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.h	/^    char * temp_line;$/;"	m	class:tncfhh::iml::ProcwatcherIMVPolicyManager
terminate	imunit/src/imunit/imc/IMCLibrary.cpp	/^TNC_Result IMCLibrary::terminate(TNC_IMCID imcID)$/;"	f	class:tncfhh::iml::IMCLibrary
terminate	imunit/src/imunit/imv/IMVLibrary.cpp	/^TNC_Result IMVLibrary::terminate(TNC_IMVID imvID)$/;"	f	class:tncfhh::iml::IMVLibrary
terminate	naaeap/src/naaeap/naaeap.cpp	/^TNC_IMV_API TNC_Result terminate()$/;"	f
terminate	tncs/src/tncs/iel/Coordinator.cpp	/^void Coordinator::terminate()$/;"	f	class:tncfhh::iel::Coordinator
terminatePointer	tncs/src/tncs/iel/IMVProperties.h	/^	TNC_IMV_TerminatePointer terminatePointer; \/\/Optional$/;"	m	class:tncfhh::iel::IMVProperties
tnc	vpn/libtncvpn/src/tncvpn/iel/Endpoint.cpp	/^namespace tnc {$/;"	n	file:
tnc	vpn/libtncvpn/src/tncvpn/iel/Endpoint.h	/^namespace tnc {$/;"	n
tnc	vpn/libtncvpn/src/tncvpn/ssl/Client.h	/^namespace tnc {$/;"	n
tnc	vpn/libtncvpn/src/tncvpn/ssl/Server.h	/^namespace tnc {$/;"	n
tnc	vpn/libtncvpn/src/tncvpn/ssl/Session.h	/^namespace tnc {$/;"	n
tnc	vpn/naavpn/src/naavpn/MessageHandler.cpp	/^namespace tnc {$/;"	n	file:
tnc	vpn/naavpn/src/naavpn/MessageHandler.h	/^namespace tnc {$/;"	n
tnc	vpn/naavpn/src/naavpn/PEPClient.cpp	/^namespace tnc {$/;"	n	file:
tnc	vpn/naavpn/src/naavpn/PEPClient.h	/^namespace tnc {$/;"	n
tnc	vpn/naavpn/src/naavpn/PEPNotifier.cpp	/^namespace tnc {$/;"	n	file:
tnc	vpn/naavpn/src/naavpn/PEPNotifier.h	/^namespace tnc {$/;"	n
tnc	vpn/naavpn/src/naavpn/TNCServer.cpp	/^namespace tnc {$/;"	n	file:
tnc	vpn/naavpn/src/naavpn/TNCServer.h	/^namespace tnc {$/;"	n
tnc	vpn/naavpn/src/naavpn/TNCSession.cpp	/^namespace tnc {$/;"	n	file:
tnc	vpn/naavpn/src/naavpn/TNCSession.h	/^namespace tnc {$/;"	n
tnc	vpn/vpnclient/src/vpnclient/LibTNCClient.cpp	/^namespace tnc {$/;"	n	file:
tnc	vpn/vpnclient/src/vpnclient/LibTNCClient.h	/^namespace tnc {$/;"	n
tnc	vpn/vpnclient/src/vpnclient/TNCClient.cpp	/^namespace tnc {$/;"	n	file:
tnc	vpn/vpnclient/src/vpnclient/TNCClient.h	/^namespace tnc {$/;"	n
tnc	vpn/vpnpep/src/vpnpep/AssessmentScheduler.h	/^namespace tnc {$/;"	n
tnc	vpn/vpnpep/src/vpnpep/EndpointDB.cpp	/^namespace tnc {$/;"	n	file:
tnc	vpn/vpnpep/src/vpnpep/EndpointDB.h	/^namespace tnc {$/;"	n
tnc	vpn/vpnpep/src/vpnpep/PEPServer.h	/^namespace tnc {$/;"	n
tnc	vpn/vpnpep/src/vpnpep/PEPSession.h	/^namespace tnc {$/;"	n
tnc1	tncs/src/tncs/iel/tnc1/IMCIMVMessage.cpp	/^namespace tnc1 {$/;"	n	namespace:tncfhh::iel	file:
tnc1	tncs/src/tncs/iel/tnc1/IMCIMVMessage.h	/^namespace tnc1$/;"	n	namespace:tncfhh::iel
tnc1	tncs/src/tncs/iel/tnc1/TNC1Protocol.cpp	/^namespace tnc1 {$/;"	n	namespace:tncfhh::iel	file:
tnc1	tncs/src/tncs/iel/tnc1/TNC1Protocol.h	/^namespace tnc1 {$/;"	n	namespace:tncfhh::iel
tnc1	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^namespace tnc1 {$/;"	n	namespace:tncfhh::iel	file:
tnc1	tncs/src/tncs/iel/tnc1/TNCCSBatch.h	/^namespace tnc1 {$/;"	n	namespace:tncfhh::iel
tnc1	tncs/src/tncs/iel/tnc1/TNCCTNCSMessage.cpp	/^namespace tnc1 {$/;"	n	namespace:tncfhh::iel	file:
tnc1	tncs/src/tncs/iel/tnc1/TNCCTNCSMessage.h	/^namespace tnc1 {$/;"	n	namespace:tncfhh::iel
tnc1	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageBase64.cpp	/^namespace tnc1$/;"	n	namespace:tncfhh::iel	file:
tnc1	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageBase64.h	/^namespace tnc1 {$/;"	n	namespace:tncfhh::iel
tnc1	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageXML.cpp	/^namespace tnc1$/;"	n	namespace:tncfhh::iel	file:
tnc1	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageXML.h	/^namespace tnc1 {$/;"	n	namespace:tncfhh::iel
tncConfig	tncsim/src/client/AbstractTNCC.h	/^	std::string tncConfig;$/;"	m	class:tncsim::client::AbstractTNCC
tncConfig	tncsim/src/server/AbstractTNCS.h	/^	std::string tncConfig;$/;"	m	class:tncsim::server::AbstractTNCS
tncServerPort	vpn/naavpn/src/naavpn/TNCServer.cpp	/^const short tncServerPort() {$/;"	f	namespace:tnc
tncc	imunit/src/imunit/imc/AbstractIMC.h	/^    	TNCC tncc;$/;"	m	class:tncfhh::iml::AbstractIMC
tnccFunctionPointers	imunit/src/imunit/imc/IMCLibrary.h	/^	struct TNCC_FunctionPointers tnccFunctionPointers;$/;"	m	class:tncfhh::iml::IMCLibrary	typeref:struct:tncfhh::iml::IMCLibrary::TNCC_FunctionPointers
tnccTncsMessages	tncs/src/tncs/iel/tnc1/TNCCSBatch.h	/^	std::list<TNCCTNCSMessage *> tnccTncsMessages;$/;"	m	class:tncfhh::iel::tnc1::TNCCSBatch
tnccsData	naaeap/src/naaeap/data/EapTncBuffer.h	/^	iel::TNCCSData tnccsData;$/;"	m	class:tncfhh::nal::EapTncBuffer
tnccsProtocolHandlerChain	tncs/src/tncs/iel/Connection.h	/^	std::list<AbstractTNCCSProtocol *> tnccsProtocolHandlerChain;$/;"	m	class:tncfhh::iel::Connection
tncfhh	imcv/attestation/imv/src/AttestationIMVPolicyManager.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	imcv/attestation/imv/src/AttestationIMVPolicyManager.h	/^namespace tncfhh {$/;"	n
tncfhh	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.h	/^namespace tncfhh {$/;"	n
tncfhh	imunit/src/imunit/AbstractIMUnit.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	imunit/src/imunit/AbstractIMUnit.h	/^namespace tncfhh {$/;"	n
tncfhh	imunit/src/imunit/IMUnitLibrary.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	imunit/src/imunit/IMUnitLibrary.h	/^namespace tncfhh {$/;"	n
tncfhh	imunit/src/imunit/exception/ResultException.cpp	/^namespace tncfhh$/;"	n	file:
tncfhh	imunit/src/imunit/exception/ResultException.h	/^namespace tncfhh$/;"	n
tncfhh	imunit/src/imunit/imc/AbstractIMC.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	imunit/src/imunit/imc/AbstractIMC.h	/^namespace tncfhh {$/;"	n
tncfhh	imunit/src/imunit/imc/IMCLibrary.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	imunit/src/imunit/imc/IMCLibrary.h	/^namespace tncfhh {$/;"	n
tncfhh	imunit/src/imunit/imc/TNCC.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	imunit/src/imunit/imc/TNCC.h	/^namespace tncfhh {$/;"	n
tncfhh	imunit/src/imunit/imv/AbstractIMV.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	imunit/src/imunit/imv/AbstractIMV.h	/^namespace tncfhh {$/;"	n
tncfhh	imunit/src/imunit/imv/IMVLibrary.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	imunit/src/imunit/imv/IMVLibrary.h	/^namespace tncfhh {$/;"	n
tncfhh	imunit/src/imunit/imv/TNCS.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	imunit/src/imunit/imv/TNCS.h	/^namespace tncfhh {$/;"	n
tncfhh	naaeap/src/naaeap/data/EapTncBuffer.cpp	/^namespace tncfhh$/;"	n	file:
tncfhh	naaeap/src/naaeap/data/EapTncBuffer.h	/^namespace tncfhh$/;"	n
tncfhh	naaeap/src/naaeap/data/EapTncFragment.cpp	/^namespace tncfhh$/;"	n	file:
tncfhh	naaeap/src/naaeap/data/EapTncFragment.h	/^namespace tncfhh$/;"	n
tncfhh	naaeap/src/naaeap/exception/AcknowledgementException.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	naaeap/src/naaeap/exception/AcknowledgementException.h	/^namespace tncfhh {$/;"	n
tncfhh	naaeap/src/naaeap/logic/Defragmentation.cpp	/^namespace tncfhh$/;"	n	file:
tncfhh	naaeap/src/naaeap/logic/Defragmentation.h	/^namespace tncfhh$/;"	n
tncfhh	naaeap/src/naaeap/logic/Fragmentation.cpp	/^namespace tncfhh$/;"	n	file:
tncfhh	naaeap/src/naaeap/logic/Fragmentation.h	/^namespace tncfhh$/;"	n
tncfhh	naaeap/src/naaeap/naaeap.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	tncs/src/tncs/exception/ConnectionStateException.cpp	/^namespace tncfhh$/;"	n	file:
tncfhh	tncs/src/tncs/exception/ConnectionStateException.h	/^namespace tncfhh$/;"	n
tncfhh	tncs/src/tncs/exception/ConnectionStateExceptionWithTNCCSData.cpp	/^namespace tncfhh$/;"	n	file:
tncfhh	tncs/src/tncs/exception/ConnectionStateExceptionWithTNCCSData.h	/^namespace tncfhh$/;"	n
tncfhh	tncs/src/tncs/exception/ResultException.cpp	/^namespace tncfhh$/;"	n	file:
tncfhh	tncs/src/tncs/exception/ResultException.h	/^namespace tncfhh$/;"	n
tncfhh	tncs/src/tncs/exception/TNCCSProtocolNotSupportedException.cpp	/^namespace tncfhh$/;"	n	file:
tncfhh	tncs/src/tncs/exception/TNCCSProtocolNotSupportedException.h	/^namespace tncfhh$/;"	n
tncfhh	tncs/src/tncs/iel/AbstractTNCCSProtocol.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	tncs/src/tncs/iel/AbstractTNCCSProtocol.h	/^namespace tncfhh {$/;"	n
tncfhh	tncs/src/tncs/iel/Connection.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	tncs/src/tncs/iel/Connection.h	/^namespace tncfhh {$/;"	n
tncfhh	tncs/src/tncs/iel/Coordinator.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	tncs/src/tncs/iel/Coordinator.h	/^namespace tncfhh {$/;"	n
tncfhh	tncs/src/tncs/iel/IMV.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	tncs/src/tncs/iel/IMV.h	/^namespace tncfhh {$/;"	n
tncfhh	tncs/src/tncs/iel/IMVProperties.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	tncs/src/tncs/iel/IMVProperties.h	/^namespace tncfhh {$/;"	n
tncfhh	tncs/src/tncs/iel/Policy.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	tncs/src/tncs/iel/Policy.h	/^namespace tncfhh {$/;"	n
tncfhh	tncs/src/tncs/iel/TNCCSData.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	tncs/src/tncs/iel/TNCCSData.h	/^namespace tncfhh$/;"	n
tncfhh	tncs/src/tncs/iel/soh/SOH1Protocol.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	tncs/src/tncs/iel/soh/SOH1Protocol.h	/^namespace tncfhh {$/;"	n
tncfhh	tncs/src/tncs/iel/string_helper.h	/^namespace tncfhh$/;"	n
tncfhh	tncs/src/tncs/iel/tnc1/IMCIMVMessage.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	tncs/src/tncs/iel/tnc1/IMCIMVMessage.h	/^namespace tncfhh$/;"	n
tncfhh	tncs/src/tncs/iel/tnc1/TNC1Protocol.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	tncs/src/tncs/iel/tnc1/TNC1Protocol.h	/^namespace tncfhh {$/;"	n
tncfhh	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	tncs/src/tncs/iel/tnc1/TNCCSBatch.h	/^namespace tncfhh {$/;"	n
tncfhh	tncs/src/tncs/iel/tnc1/TNCCTNCSMessage.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	tncs/src/tncs/iel/tnc1/TNCCTNCSMessage.h	/^namespace tncfhh {$/;"	n
tncfhh	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageBase64.cpp	/^namespace tncfhh$/;"	n	file:
tncfhh	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageBase64.h	/^namespace tncfhh {$/;"	n
tncfhh	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageXML.cpp	/^namespace tncfhh$/;"	n	file:
tncfhh	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageXML.h	/^namespace tncfhh {$/;"	n
tncfhh	tncsim/src/server/tncfhh/TncfhhTNCS.cpp	/^namespace tncfhh {$/;"	n	namespace:tncsim::server	file:
tncfhh	tncsim/src/server/tncfhh/TncfhhTNCS.h	/^namespace tncfhh {$/;"	n	namespace:tncsim::server
tncfhh	tncutil/src/tncutil/Configuration.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	tncutil/src/tncutil/Configuration.h	/^namespace tncfhh {$/;"	n
tncfhh	tncutil/src/tncutil/ConfigurationService.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	tncutil/src/tncutil/ConfigurationService.h	/^namespace tncfhh {$/;"	n
tncfhh	tncutil/src/tncutil/XercesString.cpp	/^namespace tncfhh$/;"	n	file:
tncfhh	tncutil/src/tncutil/XercesString.h	/^namespace tncfhh$/;"	n
tncfhh	tncxacml/src/tncxacml/XACMLConstants.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	tncxacml/src/tncxacml/XACMLConstants.h	/^namespace tncfhh {$/;"	n
tncfhh	tncxacml/src/tncxacml/XACMLHelper.cpp	/^namespace tncfhh {$/;"	n	file:
tncfhh	tncxacml/src/tncxacml/XACMLHelper.h	/^namespace tncfhh {$/;"	n
tncs	imunit/src/imunit/imv/AbstractIMV.h	/^    	TNCS tncs;$/;"	m	class:tncfhh::iml::AbstractIMV
tncsFunctionPointers	imunit/src/imunit/imv/IMVLibrary.h	/^	struct TNCS_FunctionPointers tncsFunctionPointers;$/;"	m	class:tncfhh::iml::IMVLibrary	typeref:struct:tncfhh::iml::IMVLibrary::TNCS_FunctionPointers
tncsim	doc/tncfhh.tex	/^\\section{tncsim}$/;"	s
tncsim	tncsim/src/TNCCSData.cpp	/^namespace tncsim {$/;"	n	file:
tncsim	tncsim/src/TNCCSData.h	/^namespace tncsim$/;"	n
tncsim	tncsim/src/client/AbstractTNCC.cpp	/^namespace tncsim {$/;"	n	file:
tncsim	tncsim/src/client/AbstractTNCC.h	/^namespace tncsim {$/;"	n
tncsim	tncsim/src/client/libtnc/LibtncTNCC.cpp	/^namespace tncsim {$/;"	n	file:
tncsim	tncsim/src/client/libtnc/LibtncTNCC.h	/^namespace tncsim {$/;"	n
tncsim	tncsim/src/server/AbstractTNCS.cpp	/^namespace tncsim {$/;"	n	file:
tncsim	tncsim/src/server/AbstractTNCS.h	/^namespace tncsim {$/;"	n
tncsim	tncsim/src/server/Finished.cpp	/^namespace tncsim {$/;"	n	file:
tncsim	tncsim/src/server/Finished.h	/^namespace tncsim {$/;"	n
tncsim	tncsim/src/server/libtnc/LibtncTNCS.cpp	/^namespace tncsim {$/;"	n	file:
tncsim	tncsim/src/server/libtnc/LibtncTNCS.h	/^namespace tncsim {$/;"	n
tncsim	tncsim/src/server/tncfhh/TncfhhTNCS.cpp	/^namespace tncsim {$/;"	n	file:
tncsim	tncsim/src/server/tncfhh/TncfhhTNCS.h	/^namespace tncsim {$/;"	n
tncsim	tncsim/src/tncsim.cpp	/^namespace tncsim {$/;"	n	file:
toString	tncutil/src/tncutil/XercesString.cpp	/^std::string XercesString::toString()$/;"	f	class:tncfhh::XercesString
tpmLoadEvpPkey	imcv/platid/imc/src/PlatidIMC.cpp	/^EVP_PKEY * PlatidIMC::tpmLoadEvpPkey()$/;"	f	class:PlatidIMC
translate2chars	imcv/example/imc/src/ExampleIMC.cpp	/^void translate2chars(char * buf)$/;"	f
translate2chars	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^void translate2chars(char * buf,int length)$/;"	f
translate2chars	imcv/procwatcher/imv/src/ProcwatcherIMV.cpp	/^void translate2chars(char * buf,int length)$/;"	f
trim	imcv/hostscanner/imv/src/HostScannerIMV.cpp	/^std::string HostScannerIMV::trim(std::string const& source, char const* delims) {$/;"	f	class:HostScannerIMV
type	tncs/src/tncs/iel/tnc1/IMCIMVMessage.h	/^	TNC_MessageType type;$/;"	m	class:tncfhh::iel::tnc1::IMCIMVMessage
type	tncs/src/tncs/iel/tnc1/TNCCTNCSMessage.h	/^	TNC_MessageType type;$/;"	m	class:tncfhh::iel::tnc1::TNCCTNCSMessage
typeCount	imunit/src/imunit/IMUnitLibrary.h	/^	TNC_UInt32 typeCount;$/;"	m	class:tncfhh::iml::IMUnitLibrary
uglyStaticEnvelopePointer	vpn/vpnclient/src/vpnclient/LibTNCClient.cpp	/^static ifttls::Envelope *uglyStaticEnvelopePointer = NULL;$/;"	v	file:
uglyStaticReceiveIndicator	vpn/vpnclient/src/vpnclient/LibTNCClient.cpp	/^static bool uglyStaticReceiveIndicator = false;$/;"	v	file:
uneq	imcv/clamav/imv/src/ClamavIMV.h	/^		uneq$/;"	e	enum:ClamavIMV::Operant
useTpm	imcv/platid/imc/src/PlatidIMC.h	/^	bool useTpm;$/;"	m	class:PlatidIMC
useWksSrk	imcv/platid/imc/src/PlatidIMC.h	/^	bool useWksSrk;$/;"	m	class:PlatidIMC
username	tncs/src/tncs/iel/Connection.h	/^	TNC_BufferReference username;$/;"	m	class:tncfhh::iel::Connection
usr  local  etc  raddb  eap.conf	doc/freeradius-eapttls-patch/configuration.tex	/^\\paragraph{\/usr\/local\/etc\/raddb\/eap.conf}$/;"	P
usr  local  etc  raddb  sites-enabled  inner-tunnel	doc/freeradius-eapttls-patch/configuration.tex	/^\\paragraph{\/usr\/local\/etc\/raddb\/sites-enabled\/inner-tunnel}$/;"	P
usr  local  etc  raddb  sites-enabled  inner-tunnel-second	doc/freeradius-eapttls-patch/configuration.tex	/^\\paragraph{\/usr\/local\/etc\/raddb\/sites-enabled\/inner-tunnel-second}$/;"	P
usr  local  etc  raddb  users	doc/freeradius-eapttls-patch/configuration.tex	/^\\paragraph{\/usr\/local\/etc\/raddb\/users}$/;"	P
validationFinished	imunit/src/imunit/imv/AbstractIMV.h	/^    	bool validationFinished;$/;"	m	class:tncfhh::iml::AbstractIMV
value	imcv/attestation/imv/src/AttestationIMVPolicyManager.h	/^	uint8_t value[20];$/;"	m	class:tncfhh::iml::PcrEntry
value	imcv/clamav/imv/src/ClamavIMV.h	/^		std::string value;$/;"	m	class:ClamavIMV::Measurement
value	imcv/clamav/imv/src/ClamavIMV.h	/^		std::string value;$/;"	m	class:ClamavIMV::PolicyEntry
value	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.h	/^	uint8_t value[20];$/;"	m	class:tncfhh::iml::PcrEntry
value	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.h	/^        char value[256];$/;"	m	class:tncfhh::iml::FileEntry
valueAsString	imcv/attestation/imv/src/AttestationIMVPolicyManager.h	/^	std::string valueAsString;$/;"	m	class:tncfhh::iml::PcrEntry
valueAsString	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.h	/^	std::string valueAsString;$/;"	m	class:tncfhh::iml::PcrEntry
verifySignature	imcv/platid/imv/src/PlatidIMV.cpp	/^PlatidIMV::verifySignature(TNC_BufferReference sig, TNC_UInt32 length)$/;"	f	class:PlatidIMV
version	vpn/libtncvpn/src/tncvpn/ifttls/VersionResponseMessage.h	/^	uint8_t version;$/;"	m	class:ifttls::VersionResponseMessage
wantRead	vpn/naavpn/src/naavpn/MessageHandler.cpp	/^MessageHandler::wantRead() const {$/;"	f	class:tnc::MessageHandler
wantRead	vpn/vpnclient/src/vpnclient/LibTNCClient.h	/^	bool wantRead() const { return wantRead_; };$/;"	f	class:tnc::LibTNCClient
wantRead	vpn/vpnclient/src/vpnclient/TNCMockClient.h	/^	bool wantRead() {$/;"	f	class:TNCMockClient
wantRead_	vpn/vpnclient/src/vpnclient/LibTNCClient.h	/^	bool wantRead_, wantWrite_, finished_;$/;"	m	class:tnc::LibTNCClient
wantWrite	vpn/naavpn/src/naavpn/MessageHandler.cpp	/^MessageHandler::wantWrite() const {$/;"	f	class:tnc::MessageHandler
wantWrite	vpn/vpnclient/src/vpnclient/LibTNCClient.h	/^	bool wantWrite() const { return wantWrite_; };$/;"	f	class:tnc::LibTNCClient
wantWrite	vpn/vpnclient/src/vpnclient/TNCMockClient.h	/^	bool wantWrite() {$/;"	f	class:TNCMockClient
wantWrite_	vpn/vpnclient/src/vpnclient/LibTNCClient.h	/^	bool wantRead_, wantWrite_, finished_;$/;"	m	class:tnc::LibTNCClient
want_read_	vpn/naavpn/src/naavpn/MessageHandler.h	/^	bool want_read_;$/;"	m	class:tnc::MessageHandler
want_write_	vpn/naavpn/src/naavpn/MessageHandler.h	/^	bool want_write_;$/;"	m	class:tnc::MessageHandler
warning	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^	virtual void warning (const xercesc::SAXParseException &exc)$/;"	f	class:tncfhh::iel::tnc1::StrictErrorHandler	file:
what	imunit/src/imunit/exception/ResultException.cpp	/^const char* ResultException::what() const throw()$/;"	f	class:tncfhh::iml::ResultException
what	tncs/src/tncs/exception/ConnectionStateException.cpp	/^const char* ConnectionStateException::what() const throw()$/;"	f	class:tncfhh::iel::ConnectionStateException
what	tncs/src/tncs/exception/ConnectionStateExceptionWithTNCCSData.cpp	/^const char* ConnectionStateExceptionWithTNCCSData::what() const throw()$/;"	f	class:tncfhh::iel::ConnectionStateExceptionWithTNCCSData
what	tncs/src/tncs/exception/ResultException.cpp	/^const char* ResultException::what() const throw()$/;"	f	class:tncfhh::iel::ResultException
what	tncs/src/tncs/exception/TNCCSProtocolNotSupportedException.cpp	/^const char* TNCCSProtocolNotSupportedException::what() const throw()$/;"	f	class:tncfhh::iel::TNCCSProtocolNotSupportedException
whatever	imcv/hostscanner/imv/src/HostScannerIMV.h	/^    	enum Status {open, close, whatever};$/;"	e	enum:HostScannerIMV::Status
wpa  _supplicant.conf	doc/freeradius-eapttls-patch/configuration.tex	/^\\subsubsection*{wpa\\_supplicant.conf}$/;"	b
writeRequestToString	tncxacml/src/tncxacml/XACMLHelper.cpp	/^std::string XACMLHelper::writeRequestToString(xercesc::DOMDocument* request) {$/;"	f	class:tncfhh::iml::XACMLHelper
writeToArray	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^void TNCCSBatch::writeToArray(char *buf, const int size, const char *format, ...)$/;"	f	class:tncfhh::iel::tnc1::TNCCSBatch
x509Cert	imcv/attestation/imv/src/AttestationIMV.h	/^	X509				*x509Cert;$/;"	m	class:AttestationIMV
x509Cert	imcv/platid/imv/src/PlatidIMV.h	/^	X509			*x509Cert;$/;"	m	class:PlatidIMV
x509Cert	imcv/procwatcher/imv/src/ProcwatcherIMV.h	/^    X509                *x509Cert;$/;"	m	class:ProcwatcherIMV
xercesInit	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^TNCCSBatch::XercesInit TNCCSBatch::xercesInit;$/;"	m	class:tncfhh::iel::tnc1::TNCCSBatch	file:
xercesInit	tncs/src/tncs/iel/tnc1/TNCCSBatch.h	/^	static XercesInit xercesInit;$/;"	m	class:tncfhh::iel::tnc1::TNCCSBatch
xercesInit	tncxacml/src/tncxacml/XACMLHelper.cpp	/^XACMLHelper::XercesInit XACMLHelper::xercesInit;$/;"	m	class:tncfhh::iml::XACMLHelper	file:
xercesInit	tncxacml/src/tncxacml/XACMLHelper.h	/^	static XercesInit xercesInit;$/;"	m	class:tncfhh::iml::XACMLHelper
~AbstractIMC	imunit/src/imunit/imc/AbstractIMC.cpp	/^AbstractIMC::~AbstractIMC()$/;"	f	class:tncfhh::iml::AbstractIMC
~AbstractIMUnit	imunit/src/imunit/AbstractIMUnit.cpp	/^AbstractIMUnit::~AbstractIMUnit()$/;"	f	class:tncfhh::iml::AbstractIMUnit
~AbstractIMV	imunit/src/imunit/imv/AbstractIMV.cpp	/^AbstractIMV::~AbstractIMV()$/;"	f	class:tncfhh::iml::AbstractIMV
~AbstractTNCC	tncsim/src/client/AbstractTNCC.cpp	/^AbstractTNCC::~AbstractTNCC() {$/;"	f	class:tncsim::client::AbstractTNCC
~AbstractTNCCSProtocol	tncs/src/tncs/iel/AbstractTNCCSProtocol.cpp	/^AbstractTNCCSProtocol::~AbstractTNCCSProtocol() {$/;"	f	class:tncfhh::iel::AbstractTNCCSProtocol
~AbstractTNCS	tncsim/src/server/AbstractTNCS.cpp	/^AbstractTNCS::~AbstractTNCS() {$/;"	f	class:tncsim::server::AbstractTNCS
~AcknowledgementException	naaeap/src/naaeap/exception/AcknowledgementException.cpp	/^AcknowledgementException::~AcknowledgementException() throw ()$/;"	f	class:tncfhh::nal::AcknowledgementException
~AllowDenyPacket	vpn/libtncvpn/src/tncvpn/libtnac/AllowDenyPacket.cpp	/^AllowDenyPacket::~AllowDenyPacket() {$/;"	f	class:pep::AllowDenyPacket
~AssessmentScheduler	vpn/vpnpep/src/vpnpep/AssessmentScheduler.h	/^	virtual ~AssessmentScheduler() {$/;"	f	class:tnc::AssessmentScheduler
~AttestationIMC	imcv/attestation/imc/src/AttestationIMC.cpp	/^AttestationIMC::~AttestationIMC()$/;"	f	class:AttestationIMC
~AttestationIMV	imcv/attestation/imv/src/AttestationIMV.cpp	/^AttestationIMV::~AttestationIMV()$/;"	f	class:AttestationIMV
~AttestationIMVLibrary	imcv/attestation/imv/src/AttestationIMVLibrary.cpp	/^AttestationIMVLibrary::~AttestationIMVLibrary()$/;"	f	class:AttestationIMVLibrary
~AttestationIMVPolicyManager	imcv/attestation/imv/src/AttestationIMVPolicyManager.cpp	/^AttestationIMVPolicyManager::~AttestationIMVPolicyManager()$/;"	f	class:tncfhh::iml::AttestationIMVPolicyManager
~CertManager	imcv/platid/imv/src/CertManager.h	/^	virtual ~CertManager() { \/* EMPTY INLINE DEFINITON *\/ };$/;"	f	class:CertManager
~ClamavIMC	imcv/clamav/imc/src/ClamavIMC.cpp	/^ClamavIMC::~ClamavIMC() {$/;"	f	class:ClamavIMC
~ClamavIMCLibrary	imcv/clamav/imc/src/ClamavIMCLibrary.cpp	/^ClamavIMCLibrary::~ClamavIMCLibrary()$/;"	f	class:ClamavIMCLibrary
~ClamavIMV	imcv/clamav/imv/src/ClamavIMV.cpp	/^ClamavIMV::~ClamavIMV() {$/;"	f	class:ClamavIMV
~ClamavIMVLibrary	imcv/clamav/imv/src/ClamavIMVLibrary.cpp	/^ClamavIMVLibrary::~ClamavIMVLibrary()$/;"	f	class:ClamavIMVLibrary
~Client	vpn/libtncvpn/src/tncvpn/ssl/Client.h	/^	virtual ~Client()$/;"	f	class:tnc::ssl::Client
~Configuration	tncutil/src/tncutil/Configuration.h	/^	~Configuration() {}$/;"	f	class:tncfhh::Configuration
~ConfigurationService	tncutil/src/tncutil/ConfigurationService.h	/^	~ConfigurationService() {}$/;"	f	class:tncfhh::ConfigurationService
~Connection	tncs/src/tncs/iel/Connection.cpp	/^Connection::~Connection()$/;"	f	class:tncfhh::iel::Connection
~ConnectionStateException	tncs/src/tncs/exception/ConnectionStateException.cpp	/^ConnectionStateException::~ConnectionStateException() throw ()$/;"	f	class:tncfhh::iel::ConnectionStateException
~ConnectionStateExceptionWithTNCCSData	tncs/src/tncs/exception/ConnectionStateExceptionWithTNCCSData.cpp	/^ConnectionStateExceptionWithTNCCSData::~ConnectionStateExceptionWithTNCCSData() throw ()$/;"	f	class:tncfhh::iel::ConnectionStateExceptionWithTNCCSData
~Coordinator	tncs/src/tncs/iel/Coordinator.cpp	/^Coordinator::~Coordinator()$/;"	f	class:tncfhh::iel::Coordinator
~Defragmentation	naaeap/src/naaeap/logic/Defragmentation.cpp	/^Defragmentation::~Defragmentation()$/;"	f	class:tncfhh::nal::Defragmentation
~DummyIMC	imcv/dummy/imc/src/DummyIMC.cpp	/^DummyIMC::~DummyIMC()$/;"	f	class:DummyIMC
~DummyIMCLibrary	imcv/dummy/imc/src/DummyIMCLibrary.cpp	/^DummyIMCLibrary::~DummyIMCLibrary()$/;"	f	class:DummyIMCLibrary
~DummyIMV	imcv/dummy/imv/src/DummyIMV.cpp	/^DummyIMV::~DummyIMV() {$/;"	f	class:DummyIMV
~DummyIMVLibrary	imcv/dummy/imv/src/DummyIMVLibrary.cpp	/^DummyIMVLibrary::~DummyIMVLibrary()$/;"	f	class:DummyIMVLibrary
~EapTncBuffer	naaeap/src/naaeap/data/EapTncBuffer.cpp	/^EapTncBuffer::~EapTncBuffer()$/;"	f	class:tncfhh::nal::EapTncBuffer
~EapTncFragment	naaeap/src/naaeap/data/EapTncFragment.cpp	/^EapTncFragment::~EapTncFragment()$/;"	f	class:tncfhh::nal::EapTncFragment
~Endpoint	vpn/libtncvpn/src/tncvpn/iel/Endpoint.cpp	/^Endpoint::~Endpoint() {$/;"	f	class:tnc::Endpoint
~EndpointDB	vpn/vpnpep/src/vpnpep/EndpointDB.cpp	/^EndpointDB::~EndpointDB() {$/;"	f	class:tnc::EndpointDB
~Envelope	vpn/libtncvpn/src/tncvpn/ifttls/Envelope.cpp	/^Envelope::~Envelope() {$/;"	f	class:ifttls::Envelope
~ExampleIMC	imcv/example/imc/src.bk/ExampleIMC.cpp	/^ExampleIMC::~ExampleIMC()$/;"	f	class:ExampleIMC
~ExampleIMC	imcv/example/imc/src/ExampleIMC.cpp	/^ExampleIMC::~ExampleIMC()$/;"	f	class:ExampleIMC
~ExampleIMC	imcv/procwatcher/imc/src.bk/ExampleIMC.cpp	/^ExampleIMC::~ExampleIMC()$/;"	f	class:ExampleIMC
~ExampleIMCLibrary	imcv/example/imc/src.bk/ExampleIMCLibrary.cpp	/^ExampleIMCLibrary::~ExampleIMCLibrary()$/;"	f	class:ExampleIMCLibrary
~ExampleIMCLibrary	imcv/example/imc/src/ExampleIMCLibrary.cpp	/^ExampleIMCLibrary::~ExampleIMCLibrary()$/;"	f	class:ExampleIMCLibrary
~ExampleIMCLibrary	imcv/procwatcher/imc/src.bk/ExampleIMCLibrary.cpp	/^ExampleIMCLibrary::~ExampleIMCLibrary()$/;"	f	class:ExampleIMCLibrary
~ExampleIMV	imcv/example/imv/src.bk/ExampleIMV.cpp	/^ExampleIMV::~ExampleIMV()$/;"	f	class:ExampleIMV
~ExampleIMV	imcv/example/imv/src/ExampleIMV.cpp	/^ExampleIMV::~ExampleIMV()$/;"	f	class:ExampleIMV
~ExampleIMV	imcv/procwatcher/imv/src.bk/ExampleIMV.cpp	/^ExampleIMV::~ExampleIMV()$/;"	f	class:ExampleIMV
~ExampleIMVLibrary	imcv/example/imv/src.bk/ExampleIMVLibrary.cpp	/^ExampleIMVLibrary::~ExampleIMVLibrary()$/;"	f	class:ExampleIMVLibrary
~ExampleIMVLibrary	imcv/example/imv/src/ExampleIMVLibrary.cpp	/^ExampleIMVLibrary::~ExampleIMVLibrary()$/;"	f	class:ExampleIMVLibrary
~ExampleIMVLibrary	imcv/procwatcher/imv/src.bk/ExampleIMVLibrary.cpp	/^ExampleIMVLibrary::~ExampleIMVLibrary()$/;"	f	class:ExampleIMVLibrary
~FileCertManager	imcv/platid/imv/src/FileCertManager.cpp	/^FileCertManager::~FileCertManager()$/;"	f	class:FileCertManager
~FileEntry	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.cpp	/^FileEntry::~FileEntry()$/;"	f	class:tncfhh::iml::FileEntry
~Finished	tncsim/src/server/Finished.cpp	/^Finished::~Finished() throw()$/;"	f	class:tncsim::server::Finished
~Fragmentation	naaeap/src/naaeap/logic/Fragmentation.cpp	/^Fragmentation::~Fragmentation()$/;"	f	class:tncfhh::nal::Fragmentation
~HostScannerIMC	imcv/hostscanner/imc/src/HostScannerIMC.cpp	/^HostScannerIMC::~HostScannerIMC()$/;"	f	class:HostScannerIMC
~HostScannerIMCLibrary	imcv/hostscanner/imc/src/HostScannerIMCLibrary.cpp	/^HostScannerIMCLibrary::~HostScannerIMCLibrary()$/;"	f	class:HostScannerIMCLibrary
~HostScannerIMV	imcv/hostscanner/imv/src/HostScannerIMV.cpp	/^HostScannerIMV::~HostScannerIMV()$/;"	f	class:HostScannerIMV
~HostScannerIMVLibrary	imcv/hostscanner/imv/src/HostScannerIMVLibrary.cpp	/^HostScannerIMVLibrary::~HostScannerIMVLibrary()$/;"	f	class:HostScannerIMVLibrary
~IFTTLSConnection	vpn/libtncvpn/src/tncvpn/ifttls/IFTTLSConn.cpp	/^IFTTLSConnection::~IFTTLSConnection()$/;"	f	class:ifttls::IFTTLSConnection
~IMCIMVMessage	tncs/src/tncs/iel/tnc1/IMCIMVMessage.cpp	/^IMCIMVMessage::~IMCIMVMessage()$/;"	f	class:tncfhh::iel::tnc1::IMCIMVMessage
~IMCLibrary	imunit/src/imunit/imc/IMCLibrary.cpp	/^IMCLibrary::~IMCLibrary()$/;"	f	class:tncfhh::iml::IMCLibrary
~IMUnitLibrary	imunit/src/imunit/IMUnitLibrary.cpp	/^IMUnitLibrary::~IMUnitLibrary()$/;"	f	class:tncfhh::iml::IMUnitLibrary
~IMV	tncs/src/tncs/iel/IMV.cpp	/^IMV::~IMV()$/;"	f	class:tncfhh::iel::IMV
~IMVLibrary	imunit/src/imunit/imv/IMVLibrary.cpp	/^IMVLibrary::~IMVLibrary()$/;"	f	class:tncfhh::iml::IMVLibrary
~IMVProperties	tncs/src/tncs/iel/IMVProperties.cpp	/^IMVProperties::~IMVProperties()$/;"	f	class:tncfhh::iel::IMVProperties
~LibTNCClient	vpn/vpnclient/src/vpnclient/LibTNCClient.cpp	/^LibTNCClient::~LibTNCClient()$/;"	f	class:tnc::LibTNCClient
~LibtncTNCC	tncsim/src/client/libtnc/LibtncTNCC.cpp	/^LibtncTNCC::~LibtncTNCC() {$/;"	f	class:tncsim::client::libtnc::LibtncTNCC
~LibtncTNCS	tncsim/src/server/libtnc/LibtncTNCS.cpp	/^LibtncTNCS::~LibtncTNCS()$/;"	f	class:tncsim::server::libtnc::LibtncTNCS
~MessageHandler	vpn/naavpn/src/naavpn/MessageHandler.cpp	/^MessageHandler::~MessageHandler() {$/;"	f	class:tnc::MessageHandler
~PEPNotifier	vpn/naavpn/src/naavpn/PEPNotifier.h	/^	virtual ~PEPNotifier() {}$/;"	f	class:tnc::PEPNotifier
~PcrEntry	imcv/attestation/imv/src/AttestationIMVPolicyManager.cpp	/^PcrEntry::~PcrEntry()$/;"	f	class:tncfhh::iml::PcrEntry
~PcrEntry	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.cpp	/^PcrEntry::~PcrEntry()$/;"	f	class:tncfhh::iml::PcrEntry
~PcrSelection	imcv/attestation/imc/src/PcrSelection.cpp	/^PcrSelection::~PcrSelection() {$/;"	f	class:PcrSelection
~PlatidIMC	imcv/platid/imc/src/PlatidIMC.cpp	/^PlatidIMC::~PlatidIMC()$/;"	f	class:PlatidIMC
~PlatidIMV	imcv/platid/imv/src/PlatidIMV.cpp	/^PlatidIMV::~PlatidIMV()$/;"	f	class:PlatidIMV
~PlatidIMVLibrary	imcv/platid/imv/src/PlatidIMVLibrary.cpp	/^PlatidIMVLibrary::~PlatidIMVLibrary()$/;"	f	class:PlatidIMVLibrary
~Policy	tncs/src/tncs/iel/Policy.cpp	/^Policy::~Policy()$/;"	f	class:tncfhh::iel::Policy
~ProcwatcherIMC	imcv/procwatcher/imc/src/ProcwatcherIMC.cpp	/^ProcwatcherIMC::~ProcwatcherIMC()$/;"	f	class:ProcwatcherIMC
~ProcwatcherIMCLibrary	imcv/procwatcher/imc/src/ProcwatcherIMCLibrary.cpp	/^ProcwatcherIMCLibrary::~ProcwatcherIMCLibrary()$/;"	f	class:ProcwatcherIMCLibrary
~ProcwatcherIMV	imcv/procwatcher/imv/src/ProcwatcherIMV.cpp	/^ProcwatcherIMV::~ProcwatcherIMV()$/;"	f	class:ProcwatcherIMV
~ProcwatcherIMVLibrary	imcv/procwatcher/imv/src/ProcwatcherIMVLibrary.cpp	/^ProcwatcherIMVLibrary::~ProcwatcherIMVLibrary()$/;"	f	class:ProcwatcherIMVLibrary
~ProcwatcherIMVPolicyManager	imcv/procwatcher/imv/src/ProcwatcherIMVPolicyManager.cpp	/^ProcwatcherIMVPolicyManager::~ProcwatcherIMVPolicyManager()$/;"	f	class:tncfhh::iml::ProcwatcherIMVPolicyManager
~ReceiveException	vpn/libtncvpn/src/tncvpn/ifttls/exceptions/ReceiveException.cpp	/^ReceiveException::~ReceiveException()$/;"	f	class:ReceiveException
~ResultException	imunit/src/imunit/exception/ResultException.cpp	/^ResultException::~ResultException() throw ()$/;"	f	class:tncfhh::iml::ResultException
~ResultException	tncs/src/tncs/exception/ResultException.cpp	/^ResultException::~ResultException() throw ()$/;"	f	class:tncfhh::iel::ResultException
~SOH1Protocol	tncs/src/tncs/iel/soh/SOH1Protocol.cpp	/^SOHProtocol::~SOH1Protocol() {$/;"	f	class:tncfhh::iel::soh::SOHProtocol
~Session	vpn/libtncvpn/src/tncvpn/ssl/Session.h	/^	virtual ~Session() { }$/;"	f	class:tnc::ssl::Session
~TLVBuffer	vpn/libtncvpn/src/tncvpn/libtnac/TLVBuffer.h	/^	~TLVBuffer() {$/;"	f	class:TLVBuffer
~TNC1Protocol	tncs/src/tncs/iel/tnc1/TNC1Protocol.cpp	/^TNC1Protocol::~TNC1Protocol() {$/;"	f	class:tncfhh::iel::tnc1::TNC1Protocol
~TNCC	imunit/src/imunit/imc/TNCC.cpp	/^TNCC::~TNCC()$/;"	f	class:tncfhh::iml::TNCC
~TNCCSBatch	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^TNCCSBatch::~TNCCSBatch()$/;"	f	class:tncfhh::iel::tnc1::TNCCSBatch
~TNCCSData	tncs/src/tncs/iel/TNCCSData.cpp	/^TNCCSData::~TNCCSData()$/;"	f	class:tncfhh::iel::TNCCSData
~TNCCSData	tncsim/src/TNCCSData.cpp	/^TNCCSData::~TNCCSData()$/;"	f	class:tncsim::TNCCSData
~TNCCSProtocolNotSupportedException	tncs/src/tncs/exception/TNCCSProtocolNotSupportedException.cpp	/^TNCCSProtocolNotSupportedException::~TNCCSProtocolNotSupportedException() throw ()$/;"	f	class:tncfhh::iel::TNCCSProtocolNotSupportedException
~TNCCTNCSMessage	tncs/src/tncs/iel/tnc1/TNCCTNCSMessage.cpp	/^TNCCTNCSMessage::~TNCCTNCSMessage()$/;"	f	class:tncfhh::iel::tnc1::TNCCTNCSMessage
~TNCCTNCSMessageBase64	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageBase64.cpp	/^TNCCTNCSMessageBase64::~TNCCTNCSMessageBase64()$/;"	f	class:tncfhh::iel::tnc1::TNCCTNCSMessageBase64
~TNCCTNCSMessageXML	tncs/src/tncs/iel/tnc1/TNCCTNCSMessageXML.cpp	/^TNCCTNCSMessageXML::~TNCCTNCSMessageXML()$/;"	f	class:tncfhh::iel::tnc1::TNCCTNCSMessageXML
~TNCClient	vpn/vpnclient/src/vpnclient/TNCClient.cpp	/^TNCClient::~TNCClient()$/;"	f	class:tnc::TNCClient
~TNCMockClient	vpn/vpnclient/src/vpnclient/TNCMockClient.h	/^	virtual ~TNCMockClient() {}$/;"	f	class:TNCMockClient
~TNCS	imunit/src/imunit/imv/TNCS.cpp	/^TNCS::~TNCS()$/;"	f	class:tncfhh::iml::TNCS
~TNCSession	vpn/naavpn/src/naavpn/TNCSession.cpp	/^TNCSession::~TNCSession()$/;"	f	class:tnc::TNCSession
~TncfhhTNCS	tncsim/src/server/tncfhh/TncfhhTNCS.cpp	/^TncfhhTNCS::~TncfhhTNCS()$/;"	f	class:tncsim::server::tncfhh::TncfhhTNCS
~VersionException	vpn/libtncvpn/src/tncvpn/ifttls/exceptions/VersionException.cpp	/^VersionException::~VersionException()$/;"	f	class:VersionException
~VersionRequestMessage	vpn/libtncvpn/src/tncvpn/ifttls/VersionRequestMessage.h	/^	~VersionRequestMessage()$/;"	f	class:ifttls::VersionRequestMessage
~VersionResponseMessage	vpn/libtncvpn/src/tncvpn/ifttls/VersionResponseMessage.h	/^	~VersionResponseMessage()$/;"	f	class:ifttls::VersionResponseMessage
~XACMLHelper	tncxacml/src/tncxacml/XACMLHelper.cpp	/^XACMLHelper::~XACMLHelper() {$/;"	f	class:tncfhh::iml::XACMLHelper
~XercesInit	tncs/src/tncs/iel/tnc1/TNCCSBatch.cpp	/^TNCCSBatch::XercesInit::~XercesInit() {$/;"	f	class:tncfhh::iel::tnc1::TNCCSBatch::XercesInit
~XercesInit	tncxacml/src/tncxacml/XACMLHelper.cpp	/^XACMLHelper::XercesInit::~XercesInit() {$/;"	f	class:tncfhh::iml::XACMLHelper::XercesInit
~XercesString	tncutil/src/tncutil/XercesString.cpp	/^XercesString::~XercesString()$/;"	f	class:tncfhh::XercesString
